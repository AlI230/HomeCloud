[{"/Users/alexander/Documents/developing/HomeCloud/frontend/src/index.js":"1","/Users/alexander/Documents/developing/HomeCloud/frontend/src/App.js":"2","/Users/alexander/Documents/developing/HomeCloud/frontend/src/reportWebVitals.js":"3","/Users/alexander/Documents/developing/HomeCloud/frontend/src/PrivateRoute.js":"4","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/home.js":"5","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/login.js":"6","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/myProfile.js":"7","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/shared.js":"8","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/ChatsPage.js":"9","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/FilesPage.js":"10","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/register.js":"11","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/FriendsPage.js":"12","/Users/alexander/Documents/developing/HomeCloud/frontend/src/context/auth.js":"13","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/files.js":"14","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/sharedFileSlecting.js":"15","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/NavBar.js":"16","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/transition.js":"17","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/folders.js":"18","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/FileShow.js":"19","/Users/alexander/Documents/developing/HomeCloud/frontend/src/hooks/useFileDownloader.js":"20","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/SelectingFiles.js":"21","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/profile.js":"22","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/ChatPage.js":"23","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/CircleProgress.js":"24","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/warningDialog.js":"25","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/ProgressBar.js":"26","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/Downloader.js":"27"},{"size":500,"mtime":1607774771750,"results":"28","hashOfConfig":"29"},{"size":1874,"mtime":1614330871720,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1607685016440,"results":"31","hashOfConfig":"29"},{"size":447,"mtime":1607857477500,"results":"32","hashOfConfig":"29"},{"size":3032,"mtime":1614331401650,"results":"33","hashOfConfig":"29"},{"size":7328,"mtime":1614514191221,"results":"34","hashOfConfig":"29"},{"size":550,"mtime":1614199765960,"results":"35","hashOfConfig":"29"},{"size":9754,"mtime":1614199784080,"results":"36","hashOfConfig":"29"},{"size":20158,"mtime":1614279241360,"results":"37","hashOfConfig":"29"},{"size":28007,"mtime":1614335227390,"results":"38","hashOfConfig":"29"},{"size":7196,"mtime":1614514180539,"results":"39","hashOfConfig":"29"},{"size":4309,"mtime":1614199946540,"results":"40","hashOfConfig":"29"},{"size":162,"mtime":1607855858330,"results":"41","hashOfConfig":"29"},{"size":4041,"mtime":1614334542950,"results":"42","hashOfConfig":"29"},{"size":4209,"mtime":1614098895650,"results":"43","hashOfConfig":"29"},{"size":40566,"mtime":1614514479665,"results":"44","hashOfConfig":"29"},{"size":3064,"mtime":1607787462800,"results":"45","hashOfConfig":"29"},{"size":1654,"mtime":1614331232460,"results":"46","hashOfConfig":"29"},{"size":2084,"mtime":1613054029880,"results":"47","hashOfConfig":"29"},{"size":835,"mtime":1609696721160,"results":"48","hashOfConfig":"29"},{"size":4592,"mtime":1614333922760,"results":"49","hashOfConfig":"29"},{"size":17154,"mtime":1614009791410,"results":"50","hashOfConfig":"29"},{"size":4641,"mtime":1614277864050,"results":"51","hashOfConfig":"29"},{"size":1714,"mtime":1610398382870,"results":"52","hashOfConfig":"29"},{"size":2355,"mtime":1610396895330,"results":"53","hashOfConfig":"29"},{"size":1682,"mtime":1610306073960,"results":"54","hashOfConfig":"29"},{"size":8230,"mtime":1609937961640,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1u9ojky",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"61"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"61"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"61"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"61"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"61"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"127"},"/Users/alexander/Documents/developing/HomeCloud/frontend/src/index.js",[],["128","129"],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/App.js",[],["130","131"],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/reportWebVitals.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/PrivateRoute.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/home.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/login.js",["132"],"import '../index.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../context/auth';\nimport { Redirect } from 'react-router-dom';\n\nfunction Login() {\n\n  const [ isLoggedIn, setLoggedIn ] = useState(false); \n  const [ isError, setIsError ] = useState(null); \n  const [ emailUser, setEmail ] = useState(\"\"); \n  const [ password, setPassword ] = useState(\"\");\n  const { setAuthTokens } = useAuth();\n\n  function postLogin() {\n    console.log('logging in');\n    axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/login`, {\n      email: emailUser,\n      password: password\n    }).then(result => {\n      if(result.status === 200) {\n        console.log(result.data);\n        setAuthTokens({\n          email: result.data.email,\n          id: result.data.id,\n          profile_pic: result.data.profile_pic,\n          name: result.data.name,\n        });\n        setLoggedIn(true)\n      }\n    }).catch(e => {\n      console.log(e.response);\n      if(e.response.status === 403) {\n        switch(e.response.data) {\n          case \"email\": \n            setIsError(\"Email does not exist!\");\n            break;\n          case \"password\": \n            setIsError(\"Password is incorrect!\");\n            break;\n          case \"fields\": \n            setIsError(\"Everything has to be filled in!\");\n            break;\n          default:\n            setIsError(e.response.data);\n            break;\n        }\n      }\n    });\n  }\n\n  if(isLoggedIn) {\n    return <Redirect to=\"/\" />\n  }\n\n    return (\n        <div class=\"fixed z-10 inset-0 overflow-y-auto shadow-2xl bg-white\">\n          {/* <div class=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n              <span class=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n              <div class=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-md sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                <div class=\"w-full bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                  <div class=\"min-w-0 sm:flex sm:items-start\">\n                    <div class=\"w-full mt-3 text-center sm:mt-0 sm:ml-1 sm:text-left\">\n                      <h3 class=\"text-2xl leading-1 font-medium text-blue-500\" id=\"modal-headline\">\n                        Login\n                      </h3>\n                      { isError !== null && <p className=\"text-red-500\">{isError}</p>}\n                      <form class=\"w-full mt-4 flex flex-col space-y-4\" onSubmit={(e)=> { e.preventDefault(); postLogin()}}>\n                          <input type=\"text\" value={emailUser} onChange={ (e) => setEmail(e.target.value) } placeholder=\"Email...\" class=\"h-8 p-2 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border border-blue-500 rounded-md\"/>\n                          <input type=\"password\" value={password} onChange={ (e) => setPassword(e.target.value) } placeholder=\"Password...\" class=\"h-8 p-2 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border border-blue-500 rounded-md\"/>\n                          <input type=\"submit\" class=\"hidden\" />\n                      </form>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                  <button type=\"button\" onClick={postLogin} class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                    Login\n                  </button>\n                  <a href=\"/register\">\n                  <button type=\"button\" class=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                    Register\n                  </button>\n                  </a>\n                </div>\n              </div>\n          </div> */}\n          <div className=\"flex items-center justify-center h-screen w-screen min-h-screen pt-4 px-4 pb-20 text-center\">\n            <div className=\"space-y-5 text-center lg:w-1/4 w-80\">\n                <div className=\"flex flex-col items-center space-y-4\">\n                  <svg class=\"w-20 h-20 text-cornblue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M14 10l-2 1m0 0l-2-1m2 1v2.5M20 7l-2 1m2-1l-2-1m2 1v2.5M14 4l-2-1-2 1M4 7l2-1M4 7l2 1M4 7v2.5M12 21l-2-1m2 1l2-1m-2 1v-2.5M6 18l-2-1v-2.5M18 18l2-1v-2.5\"></path></svg>\n                  <h1 className=\"text-cornblue-400 text-3xl font-bold\">HomeCloud</h1>\n                  <h2 className=\"text-xl font-bold text-gray-800\">Sign in to your account</h2>\n                </div>\n                { isError !== null && <p className=\"text-red-500\">{isError}</p>}\n                <form className=\"w-full mt-6 flex flex-col space-y-0\" onSubmit={(e)=> { e.preventDefault(); postLogin()}}>\n                    <input type=\"text\" value={emailUser} onChange={ (e) => setEmail(e.target.value) } placeholder=\"Email...\" class=\"h-8 p-2 block w-full text-md border border-gray-500 rounded-t-md focus:outline-none\"/>\n                    <input type=\"password\" value={password} onChange={ (e) => setPassword(e.target.value) } placeholder=\"Password...\" class=\"h-8 p-2 block w-full text-md border-l border-r border-b border-gray-500 rounded-b-md focus:outline-none\"/>\n                    <input type=\"submit\" class=\"hidden\" />\n                </form>\n                <div className=\"mt-6 flex flex-col space-y-4\">\n                  <div className=\"flex xl:flex-row flex-col items-start justify-between\">\n                    <label class=\"inline-flex items-center\">\n                        <input type=\"checkbox\" className=\"form-checkbox border border-gray-200 h-5 w-5 text-cornblue-400 rounded-sm\" /><span class=\"ml-2 text-gray-700\">Remember me</span>\n                    </label>\n                    <a href=\"#\" className=\"text-cornblue-400 font-medium xl:mt-0 mt-2\">Forgot password?</a>\n                  </div>\n                  <div className=\"w-full flex flex-col space-y-2\">\n                    <button type=\"button\" onClick={postLogin} className=\"w-full inline-flex justify-center rounded-lg shadow-sm py-2 bg-cornblue-400 text-cornblue-200 font-medium hover:bg-cornblue-600 focus:outline-none sm:w-auto text-md\">\n                      Sign in\n                    </button>\n                    <a className=\"w-full\" href=\"/register\">\n                      <button type=\"button\" class=\"w-full inline-flex justify-center rounded-lg shadow-sm py-2 bg-cornblue-200 text-base font-medium text-cornblue-400 text-md\">\n                        Sign up\n                      </button>\n                    </a>\n                  </div>\n                </div>\n            </div>\n          </div>\n        </div>\n    )\n}\n\nexport default Login;\n","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/myProfile.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/shared.js",["133","134","135","136","137"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../components/NavBar';\nimport FileShow from '../components/FileShow';\nimport useFileDownloader from '../hooks/useFileDownloader';\nimport SelecingFiles from '../components/sharedFileSlecting';\n\nfunction SharedPage() {\n\n    const token = JSON.parse(localStorage.getItem('tokens'));\n    const [files, setFiles] = useState([]);\n    const [selected, setSelected] = useState({\n        name: null,\n        file: null,\n        filename: null,\n        is_image: false,\n      });\n    const [fileshow, setFileshow] = useState(false);\n    const [selectingFiles, setSelectingFiles] = useState(false);\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [downloadFile, donwloadfolder,downloaderComponent] = useFileDownloader();\n\n    const download = (file) => downloadFile(file);\n\n\n    function  downloadFunction(name, path, filename, is_image) {\n        const fileDown = {\n        name: name,\n        file: path,\n        filename: filename,\n        is_image: is_image\n        };\n\n        download(fileDown)\n    }\n\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/files/getshared/${token.id}`)\n            .then((response) => {\n                if(response.status === 200) {\n                    setFiles(response.data);\n                }\n            })\n    }, []);\n\n    function fileShowing(filePath, fileName, is_image, fileId) {\n        setFileshow(!fileshow);\n        setSelected({\n          name: fileName,\n          file: filePath,\n          is_image: is_image,\n          fileId: fileId\n        })\n      }\n\n    function downloadSelected() {\n        selectedFiles.forEach(async file => {\n          download(file)\n        })\n    }\n\n    return (\n        <div className='flex flex-row h-screen bg-gray-100'>\n            <Navbar page={\"shared\"} />\n            <div className='flex-auto bg-white'>\n                <div className=\"w-full flex flex-col p-6\">\n                    <div className=\"flex-none h-16 flex flex-row justify-between items-center border-b\">\n                        <div className=\"flex flex-row items-end space-x-4\">\n                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n                            <input className=\"outline-none sm:w-96 w-5/6 p-0 text-md\" type=\"text\" placeholder=\"Search...\" />\n                        </div>\n                        <div className=\"flex flex-row items-end space-x-2\">\n                            {selectingFiles ? (\n                                    <button className=\"focus:outline-none\" onClick={downloadSelected}>\n                                        <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path></svg>\n                                    </button>\n                            ):null}\n                            <button className=\"focus:outline-none\" onClick={()=> setSelectingFiles(!selectingFiles)}>\n                                <svg class={selectingFiles ? \"w-6 h-6 text-cornblue-400 feather feather-check-circle\" : \"w-6 h-6 feather feather-check-circle\"} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" ><path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path><polyline points=\"22 4 12 14.01 9 11.01\"></polyline></svg>\n                            </button>\n                            <button className=\"focus:outline-none\">\n                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"></path></svg>\n                            </button>\n                            <button className=\"focus:outline-none\">\n                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"></path></svg>   \n                            </button>\n                        </div>\n                    </div>\n                    <h1 className=\"mt-4 text-xl font-bold\">Shared with me</h1>\n                    <>\n                    \n                        {!selectingFiles ? (\n                            <div className=\"mt-4 flex-auto overflow-y-auto grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-4\">\n                            {files.length > 0 && (\n                                <>\n                                {files.map(file => (\n                                    <div className=\"border border-gray-400 rounded-md shadow-md hover:border-cornblue-400 hover:bg-cornblue-200 hover:text-white\" >\n                                        <div className=\"flex flex-row items-center\">\n                                            <a className=\"flex-auto cursor-pointer\" onClick={()=> fileShowing(file.path, file.name, file.is_image, file.file_id)}>\n                                                <div className=\"p-3 space-y-4\">\n                                                    <div className=\"flex flex-row items-center space-x-2\">\n                                                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"></path></svg>\n                                                        <strong className=\"text-sm font-normal\">{file.name}</strong>\n                                                    </div>\n                                                </div>\n                                            </a>\n                                            <div className=\"flex-none flex flex-row space-x-2 mr-2\">\n                                                <button className=\"focus:outline-none\" onClick={() => downloadFunction(file.name, file.path, file.name, file.is_image)}>\n                                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path></svg>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))}\n                                </>   \n                                )}\n                            </div>\n                        ): (\n                            <SelecingFiles setSelected={setSelectedFiles} />\n                        )}\n                    </>\n                </div>\n                {fileshow ? (     \n                    <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n                        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                                <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                            </div>\n                            <div className=\"absolute right-0 top-0 h-screen 2xl:w-1/4 w-96  text-cornblue-200 bg-white border-l border-r border-gray-400 overflow-y-auto\">\n                                <div className=\"h-16 bg-cornblue-400 flex flex-row justify-center items-center border-b\">\n                                    <button className=\"absolute right-0 pr-2\" onClick={() => setFileshow(false)}>\n                                        <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                                    </button>\n                                    <div className=\"flex-none\">\n                                        <h1 className=\"font-semibold\">{selected.name}</h1>\n                                    </div>\n                                </div>\n                                <div className=\"flex flex-col p-2 space-y-8 justify-center items-center\">\n                                    <>\n                                    {selected.is_image ? <img src={'http://localhost:3030' + selected.file} /> : <h1>No preview to see</h1>}\n                                    </>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : null}\n                {downloaderComponent}\n            </div>\n        </div>\n    )\n} \n\nexport default SharedPage;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/ChatsPage.js",["138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158"],"import React, {useState, useEffect} from 'react';\nimport Navbar from '../components/NavBar';\nimport '../index.css';\nimport Transition from '../components/transition';\nimport axios from 'axios';\nimport { ChatPage } from '../components/ChatPage';\nimport {socket} from '../App';\nimport { useMediaQuery } from 'react-responsive'\n\nfunction ChatsPage() {\n\n    const [showFriends, setShowFriends] = useState(true);\n    const [friends, setFriends] = useState(null);\n    const [showSearchBar, setShowSearchBar] = useState(false);\n    const [searchValue, setSearchValue] = useState(\"\");\n    const [searchedUsers, setSearchedUsers] = useState(null);\n    const [searhed, setSearched] = useState(false);\n    const [usersRequesting, setUsersRequesting] = useState(null);\n    const [usersRequestingTotal, setUsersRequestingTotal] = useState(0);\n    const [showModalRequest, setShowModalRequest] = useState(false);\n    const [selectedFriend, setSelectedFriend] = useState(null);\n    const [chatId, setChatId] = useState(null);\n    const [latestMessages, setLatestMessages] = useState([]);\n    const [showFriendInfo, setShowFriendInfo] = useState(false);\n\n    const token = JSON.parse(localStorage.getItem('tokens'));\n\n    const isStatic = useBreakpoint('1024px');\n\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/users/friendrequests/${token.id}`)\n            .then((response) => {\n                if (response.status === 200) {\n                    setUsersRequesting(response.data);\n                    setUsersRequestingTotal(response.data.length)\n                }\n            })\n\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/users/friends/${token.id}`)\n            .then(response => {\n                if(response.status === 200) {\n                    setFriends(response.data);\n                    setSelectedFriend(null)\n                }\n            })\n    }, [token.id]);\n\n    function useBreakpoint(breakpoint) {\n        return useMediaQuery({\n          query: `(min-width: ${breakpoint})`,\n        });\n    }\n\n    // friend Page\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/getlatestmessages/${token.id}`)\n            .then(response => {\n                if(response.status === 200) {\n                    setLatestMessages(response.data);\n                }\n            })\n    }, [chatId]) // not sure yet\n\n    useEffect(() => {\n        console.log(isStatic);\n        socket.on('latest', () => {\n            axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/getlatestmessages/${token.id}`)\n            .then(response => {\n                if(response.status === 200) {\n                    setLatestMessages(response.data);\n                }\n            })\n        })\n    }, [])\n\n    function handleChange(e) {\n        setSearchValue(e.target.value);\n\n        if(e.target.value !== \"\") {\n            axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/users/search/${token.id}/${e.target.value}`)\n            .then((response) => {\n                if (response.status === 200) {\n                    setSearchedUsers(response.data);\n                    setSearched(true)\n                }\n            })\n        } else {\n            setSearched(false)\n        }\n    }\n\n    function sendFriendRequest(friendId) {\n        const data = {\n            userId: token.id,\n            friendId: friendId,\n        }\n\n        axios({method: 'POST', url:`http://${process.env.REACT_APP_HOST_IP}:3030/users/addFriend`, data:data})\n        .then((res) => {\n            if(res.status === 200) {\n                setShowSearchBar(false)\n                setSearched(false)\n                setSearchValue('')\n            }\n        })\n    }\n\n    function handleUpdateRequest(e, status, FriendsId) {\n        e.preventDefault()\n        let data;\n        if(status === \"accept\") {\n            data = {Status: 1}\n        } else {\n            data = {Status: 2}\n        }\n        axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/users/updateRequest/${FriendsId}`, data)\n            .then(response => {\n                if(response.status === 200) {\n                    setShowModalRequest(false);\n                    window.location.reload();\n                }\n            })\n    }\n\n    // function handleRemoveFriend(e, FriendsId) {\n    //     axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/users/deleteFriend/${FriendsId}`)\n    //         .then((response) => {\n    //             if(response.status === 200) {\n    //                 window.location.reload();\n    //             }\n    //         })\n    // }\n\n    function handleChat(friend) {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/getchat/${token.id}/${friend.id}`)\n            .then(response => {\n\n            if(response.status === 200) {\n                setChatId(response.data.chatId)\n\n                let chatId = response.data.chatId\n                let userId = token.id\n\n                socket.emit('joinchat', {chatId, userId})\n            } else if(response.status === 201) {\n    \n                const data = {\n                    userOne: token.id,\n                    userTwo: friend.id\n                }\n    \n                axios.post('http://localhost:3030/chat/makechat', data)\n                    .then(response => {\n                        if(response.status === 200) {\n                            setChatId(response.data.insertId)\n                            socket.emit('joinchat', response.data.insertId)\n                        }\n                })\n            }\n        })\n    }\n\n    return (\n        <div className='flex flex-row h-screen bg-white'>\n            <Navbar page={\"chat\"} />\n\n            <Transition\n                show={isStatic && showFriends || !showFriends && !isStatic}\n                enter=\"transition-all duration-500\"\n                enterFrom=\"md:-ml-80 -ml-96\"\n                enterTo=\"md:ml-0\"\n                leave=\"transition-all duration-500\"\n                leaveTo=\"md:-ml-80 -ml-96\">\n                <div className='pl-20 md:pl-4 absolute md:relative h-screen w-full md:w-80 flex-none bg-white p-4'>\n                    <div className=\"flex flex-col space-y-4\">\n                        <div className=\"flex flex-row flex-none p-4 border-b justify-between items-center mb-6\">\n                            {!isStatic && (\n                                <button onClick={() => setShowFriends(!showFriends)}>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                                </button>\n                            )}\n                            <h1 className=\"font-semibold text-xl\">Chat with friends</h1>\n                            <div className=\"space-x-2\">\n                                <button onClick={() => setShowSearchBar(true)}>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"flex-auto overflow-y-auto flex flex-col space-y-3\">\n                                {!searhed ? (\n                                    <>\n                                    {friends !== null ? (\n                                        friends.map(friend => (\n                                            <>\n                                            {friend.id !== token.id ? (\n                                                <a className=\"block border-b cursor-pointer\" onClick={()=> {\n                                                    setSelectedFriend(friend);\n                                                    handleChat(friend);\n                                                }}>\n                                                    <div className={ selectedFriend !== null ? ( selectedFriend.id == friend.id ? styles.selected : styles.default ) : styles.default}>\n                                                        <div className=\"flex flex-row items-center justify-between\">\n                                                            <div className=\"flex flex-row space-x-2\">\n                                                                    {friend.profile_pic !== null ? (\n                                                                        <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + friend.profile_pic} className=\"object-cover w-12 h-12 rounded-full\" />\n                                                                    ) : ( \n                                                                        <svg class=\"w-12 h-12\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                                                    )}\n                                                                <div className=\"flex flex-col items-start max-h-12 overflow-hidden space-y-0\">\n                                                                    <strong className=\"font-semibold\">{friend.firstname} {friend.lastname}</strong>\n                                                                    {latestMessages.map((message) => (\n                                                                        <>\n                                                                        {message.fromUser == friend.id && <p className={message.Status == 0 ? \"font-bold text-gray-500\" : \"font-normal text-gray-500\"}>{message.message}</p>}\n                                                                        {message.toUser == friend.id && <p className=\"text-gray-500\">you: {message.message}</p>}\n                                                                        </>\n                                                                    ))}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </a>\n                                            ) : null}\n                                            </>\n                                        ))\n                                    ): (\n                                        <p>No Friends yet, send some invites</p>\n                                    )}  \n                                    </> \n                                ) : (\n                                    <>\n                                    {searchedUsers.length !== 0 ? (\n                                        searchedUsers.map(user => (\n                                            <>\n                                            {token.id !== user.id ? (\n                                                <div className=\"block border-b\">\n                                                <div className={styles.default}>\n                                                    <div className=\"flex flex-row items-center justify-between\">\n                                                        <div className=\"flex flex-row space-x-2\">\n                                                            {user.profile_pic !== null ? (\n                                                                <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + user.profile_pic} className=\"object-cover w-7 h-7 rounded-full\" />\n                                                            ) : ( \n                                                                <svg class=\"w-7 h-7\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                                            )}\n                                                            <strong className=\"flex-grow font-normal\">{user.firstname} {user.lastname}</strong>\n                                                        </div>\n                                                        {user.Status === null || user.Status === 2 ? (\n                                                            <button onClick={()=> sendFriendRequest(user.id)}>\n                                                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\"></path></svg>\n                                                            </button>\n                                                        ) : null}\n                                                        {user.Status === 0 && <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\"></path></svg>}\n                                                        {user.Status === 1 && <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path></svg>}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            ): null}\n                                            </>\n                                        ))\n                                    ) : (\n                                        <p>Nothing has been found</p>\n                                    )} \n                                    </>\n                                )}\n                        </div>\n                    </div>\n                </div>\n            </Transition>\n\n            <div className='h-screen flex flex-row flex-auto bg-white border-l border-r border-gray-400'>\n                <div className=\"w-full flex flex-col p-4\">\n                    {selectedFriend !== undefined && (\n                    <>\n                    <div className=\"flex-none h-16 flex flex-row justify-between items-center border-b\">\n                        <div className=\"flex flex-row space-x-4 items-center\">\n                            <button onClick={() => setShowFriends(!showFriends)}>\n                                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h8m-8 6h16\"></path></svg>\n                            </button>\n                            <h1 className=\"font-bold\">{ selectedFriend !== null && (`${selectedFriend.firstname} ${selectedFriend.lastname}`) }</h1>\n                        </div>\n                        <div>\n                            <button onClick={()=> setShowFriendInfo(true)}>\n                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                            </button>\n                            {/* <button onClick={(e) => handleRemoveFriend(e, selectedFriend.FriendsId)}>\n                                <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 7a4 4 0 11-8 0 4 4 0 018 0zM9 14a6 6 0 00-6 6v1h12v-1a6 6 0 00-6-6zM21 12h-6\"></path></svg>\n                            </button> */}\n                        </div>\n                    </div>\n                    <div className=\"flex-auto h-4/5\">\n                       { selectedFriend !== null ? (<ChatPage chatId={chatId} friendId={selectedFriend.id} />):null}\n                    </div>\n                    </>\n                    )}\n                </div>\n                <>\n                {selectedFriend !== null && (\n                    <>\n                    {showFriendInfo ? (  \n                        <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n                            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                                <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                                    <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                                </div>\n                                <div className=\"absolute right-0 top-0 h-screen 2xl:w-1/4 w-96  text-cornblue-200 bg-white border-l border-r border-gray-400 overflow-y-auto\">\n                                    <div className=\"h-16 bg-cornblue-400 flex flex-row justify-center items-center border-b\">\n                                        <button className=\"absolute right-0 pr-2\" onClick={() => setShowFriendInfo(false)}>\n                                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                                        </button>\n                                        <div className=\"flex-none\">\n                                            <h1 className=\"font-semibold\">{selectedFriend.firstname} {selectedFriend.lastname}</h1>\n                                        </div>\n                                    </div>\n                                    <div className=\"px-6 mt-8 flex flex-col items-center space-y-6 justify-center text-black\">\n                                        <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + selectedFriend.profile_pic} className=\"object-cover w-32 h-32 rounded-full\" />\n                                        <p className=\"font-bold text-xl\">{selectedFriend.firstname} {selectedFriend.lastname}</p>\n                                        <div className=\"w-full flex flex-col space-y-2\">\n                                            <div className=\"flex flex-row justify-between border-b\">\n                                                <p>Media</p>\n                                                <button>\n                                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path></svg>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ) : null}\n                    </>\n                )}\n                </>\n            </div>\n        </div>\n    )\n}\n\nconst styles = {\n    default: \"border border-gray-400 hover:bg-gray-200 rounded-md  p-3 space-y-4 shadow-md\",\n    selected: \"border rounded-md border-gray-400 bg-gray-200 p-3 space-y-4\"\n}\n\nexport default ChatsPage;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/FilesPage.js",["159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175"],"import '../index.css';\nimport React, {useEffect} from 'react';\nimport Transition from '../components/transition';\nimport Navbar from '../components/NavBar'\nimport FolderList from '../components/folders';\nimport File from '../components/files';\nimport Axios from 'axios';\nimport { useParams, useHistory } from 'react-router-dom';\nimport useFileDownloader from '../hooks/useFileDownloader'\nimport FileShow from '../components/FileShow';\nimport SelecingFiles from '../components/SelectingFiles';\n\n\nfunction Collection() {\n  let history = useHistory();\n\n  const token = JSON.parse(localStorage.getItem('tokens'));\n\n  const [showFolders, setShowFolders] = React.useState(true);\n  const [foldername, setFoldername] = React.useState(useParams().foldername);\n  const folderId = useParams().folderId;\n  const [fileshow, setFileshow] = React.useState(false);\n  const [showSettings, setShowSettings] = React.useState(false);\n  const [rename, setRename] = React.useState(false);\n  const [newFoldername, setNewFoldername] = React.useState(foldername);\n  const [isfolderWarning, setFoldernameWarning] = React.useState(false);\n  const [isSelecting, setIsSelecting] = React.useState(false);\n  const [selected, setSelected] = React.useState([]);\n  const [showModal, setShowModal] = React.useState(false);\n  const [isError, setIsError] = React.useState(null);\n  const [newName, setNewName] = React.useState(null);\n  const [progress, setProgress] = React.useState(0);\n  const [usedSpace, setUsedSpace] = React.useState(0);\n  const [showSharedModal, setShowSharedModal] = React.useState(false);\n  const [searchInput, setSearchInput] = React.useState(\"\");\n  const [friends, setFriends] = React.useState(null);\n\n  const [showSuccess, setShowSuccess] = React.useState(false)\n\n  const [file, setFile] = React.useState({\n    name: null,\n    file: null,\n    filename: null,\n    is_image: false,\n    created: null\n  });\n\n  const [folder, setFolder] = React.useState({\n    name: foldername,\n    folder: token.id + \"/\" + foldername,\n  });\n\n  useEffect(() => {\n    Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/directorySize/${token.id}`)\n      .then(res => {\n        if(res.status === 200) {\n          var percentage = res.data.totalSizeBytes\n          setProgress(percentage)\n          setUsedSpace(res.data.totalSize)\n        }\n      })\n  })\n\n  const [downloadFile, donwloadfolder, downloaderComponent] = useFileDownloader();\n\n  const download = (file) => downloadFile(file);\n\n  const downloadfolder = (file) => downloadfolder(file);\n\n  function  downloadFunction(name, path, filename, is_image) {\n    const fileDown = {\n      name: name,\n      file: path,\n      filename: filename,\n      is_image: is_image,\n    };\n\n    download(fileDown)\n  }\n\n  function fileShowing(filePath, fileName, is_image, fileId, created) {\n    const time = created.split('T')[1]\n    setFileshow(!fileshow);\n    setFile({\n      name: fileName,\n      file: filePath,\n      is_image: is_image,\n      fileId: fileId,\n      created: created.split('T')[0] + \" \" + time.split('.')[0]\n    })\n  }\n\n  function renameFolder(e) {\n    e.preventDefault();\n    Axios({method: 'POST', url: `http://${process.env.REACT_APP_HOST_IP}:3030/renamefolder/${folderId}`, data: {\n      name: newFoldername,\n    }}).then(async result => {\n      if (result.status === 200) {\n        setRename(false);\n        await history.push(`/collection/folder/${result.data.name}/${folderId}`);\n        window.location.reload();\n      } else {\n        console.error(result.data)\n      }\n    }).catch(err => console.log(err));\n\n  }\n\n  function deletefile(fileId) {\n    Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/deletefile/${fileId}`)\n      .then(res => {\n        if (res.status === 200) {\n          console.log(res.data);\n          window.location.reload();\n        } else {\n          console.error(res.data)\n        }\n      })\n  }\n\n  function deleteFolder(e) {\n    e.preventDefault();\n    Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/deletefolder/${folderId}`)\n      .then(async res => {\n        if(res.status === 200) {\n          await history.push('/');\n          window.location.reload();\n        }\n      })\n  }\n\n  function deleteSelected() {\n    selected.forEach(async file => {\n      const fileId = file.fileId;\n\n      await deletefile(fileId);\n      console.log('deleted');\n    })\n  }\n\n  function downloadSelected() {\n    selected.forEach(async file => {\n      download(file)\n    })\n  }\n\n  function renameFile(file) {\n    console.log(file);\n    setNewName(file.name)\n    setShowModal({\n      showModal: true,\n      fileId: file.fileId,\n      ext: file.ext,\n    });\n  }\n\n  function submitRename(fileId) {\n\n    const token = JSON.parse(localStorage.getItem('tokens'));\n    \n    const data = {\n      name: newName + '.' + showModal.ext,\n      foldername: foldername,\n      userId: token.id,\n      fileId: showModal.fileId\n    }\n\n    Axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/renamefile/${folderId}/${fileId}`, data)\n      .then(response => {\n        if(response.status === 200) {\n          setShowModal(false);\n          window.location.reload();\n        } else if(response.status === 201){\n          setIsError('There is a file with this name in the folder');\n        } else {\n          setIsError(response.data);\n        }\n      })\n\n  }\n\n  function onChange(event) {\n    setSearchInput(event.target.value)\n\n    if(event.target.value != \"\") {\n      Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/friends/search/${token.id}/${event.target.value}`)\n      .then(response => {\n        if(response.status === 200) {\n          setFriends(response.data)\n        }\n      })\n    } else {\n      setFriends(null)\n    }\n  }\n\n  function shareFile(fileShared, friendId) {\n    const data = {\n      shared_file: fileShared.fileId,\n      user_file: token.id,\n      shared_user: friendId,\n    }\n\n    Axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/files/sharefile`, data)\n      .then(response => {\n        if(response.status === 200) {\n          setSearchInput(\"\");\n          setShowSharedModal(false);\n        }\n      })\n  }\n\n  return (\n    <div className='flex flex-row h-screen bg-gray-100'>\n\n      <>\n        {/* {showSuccess ? (\n          <div className='fixed flex justify-center z-40 w-screen'>\n            <div class=\"flex justify-center items-center m-1 font-medium py-2 px-4 rounded-md text-green-700 bg-green-100 border border-green-700 \">\n              <div slot=\"avatar\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-check-circle w-5 h-5 mx-2\">\n                      <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\n                      <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\n                  </svg>\n              </div>\n              <div class=\"text-xl font-normal ml-4 max-w-full flex-initial\">\n                  Folder has been created!\n              </div>\n            </div>\n          </div>\n        ) : null} */}\n      </>\n      \n      <Navbar page={\"file\"} />\n      \n      <div className='flex flex-row flex-auto bg-white'>\n        <div className=\"w-full flex flex-col p-4\">\n          <div className=\"flex-none h-16 flex flex-row justify-between items-center border-b\">\n            <div className=\"flex flex-row space-x-4\">\n              <>\n              {rename ? (\n                <form className=\"flex flex-row\">\n                  <input type=\"text\" value={newFoldername} onChange={ (e) => setNewFoldername(e.target.value) } placeholder=\"Name...\" name=\"name\" className=\" h-8 p-2 focus:ring-blue-500 focus:border-blue-500 border border-blue-500 block w-full sm:text-sm rounded-md shadow-sm\"/>\n                  <button onClick={(e) => {renameFolder(e)}} className=\"h-8 rounded-md border border-transparent shadow-sm px-4 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                    Rename\n                    </button>\n                </form>\n              ) : (\n                <>\n                <a className=\"focus:outline-none text-cornblue-400 flex flex-row space-x-2\" href=\"/\">\n                  <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\"></path></svg>\n                  Back\n                </a>\n                <div className=\"flex flex-row items-end space-x-4\">\n                  <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n                  <input className=\"outline-none sm:w-96 w-5/6 p-0 text-md\" type=\"text\" placeholder=\"Search...\" />\n                </div>\n                </>\n              )}\n              </>\n            </div>\n            <div className=\"flex flex-row space-x-2\">\n              {/* {isSelecting && (\n                <button onClick={selectAll}>\n                  Select All\n                </button>\n              )} */}\n              <button className=\"focus:outline-none\" onClick={() => setIsSelecting(!isSelecting)}>\n                <svg class={isSelecting ? \"w-6 h-6 text-cornblue-400 feather feather-check-circle\" : \"w-6 h-6 feather feather-check-circle\"} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" ><path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path><polyline points=\"22 4 12 14.01 9 11.01\"></polyline></svg>\n              </button>\n              <button className=\"focus:outline-none\">\n                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"></path></svg>\n              </button>\n              {isSelecting && (\n                <button onClick={downloadSelected}>\n                  <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path></svg>\n                </button>\n              )}\n              {isSelecting && (\n                <button onClick={deleteSelected}>\n                  <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path></svg>\n                </button>\n              )}\n              {!isSelecting && (\n                <button onClick={() => donwloadfolder(folder)}>\n                  <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path></svg>\n                </button>\n              )}\n              {!isSelecting && (\n                <button onClick={() => setShowSettings(!showSettings)}>\n                  <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"></path></svg>\n                </button>\n              )}\n              \n            </div>\n          </div>\n          <h1 className=\"mt-4 text-xl font-bold\">{foldername}</h1>    \n            <div>\n              {isSelecting ? (\n                <div className=\"mt-4 flex-auto overflow-y-auto grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-4\">\n                <SelecingFiles \n                  folderId={folderId}\n                  setSelected={setSelected}\n                />\n                </div>\n              ) : (\n                <div className=\"mt-4 flex-auto overflow-y-auto grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-4\">\n                  <File \n                    downloadFunction={downloadFunction} \n                    deletefile={deletefile} \n                    fileShowing={fileShowing} \n                    fileshow={fileshow} \n                    folderId={folderId}\n                    IsSelecting={isSelecting}\n                    renameFile={renameFile} \n                  />\n                </div>\n              )}\n            </div>\n        </div>\n        <>\n        {fileshow ? (     \n           <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n              <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                  <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                      <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                  </div>\n                  <div className=\"absolute right-0 top-0 h-screen 2xl:w-1/4 w-96  text-cornblue-200 bg-white border-l border-r border-gray-400 overflow-y-auto\">\n                      <div className=\"h-16 bg-cornblue-400 flex flex-row justify-center items-center border-b\">\n                          <button className=\"absolute right-0 pr-2\" onClick={() => setFileshow(false)}>\n                              <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                          </button>\n                          <div className=\"flex-none\">\n                              <h1 className=\"font-semibold\">{file.name}</h1>\n                          </div>\n                      </div>\n                      <div className=\"w-full flex flex-col p-2 space-y-4 justify-center text-black items-center\">\n                          <div className=\"border-b pb-4\">\n                          {file.is_image ? <img src={'http://localhost:3030' + file.file} /> : <h1>No preview to see</h1>}\n                          </div>\n                          <div className=\"-mt-4 w-full border-b pb-4 px-4 flex flex-col items-start space-y-4\">\n                            <p>Created on: {file.created}</p>\n                            <p>Type file: {file.is_image ? 'Image' : 'Document'}</p>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n        ) : null}\n        </>\n        <>\n          {downloaderComponent}\n        </>\n      </div>\n\n      <>\n        {showSettings ? (\n          <div className=\"absolute flex flex-col justify-center w-52 h-32 bg-gray-100 rounded-md right-2 top-20\">\n          <button className=\"block border-b border-t cursor-pointer\" onClick={()=> { setRename(true); setShowSettings(false) }}>\n            <div className=\"border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100 p-3 space-y-4\">\n              <div className=\"flex flex-row items-center space-x-2\">\n                  <strong className=\"flex-grow font-normal\">Rename</strong>\n              </div>\n            </div>\n          </button>\n          <button className=\"block border-b cursor-pointer\" onClick={()=> { setFoldernameWarning(true)}}>\n            <div className=\"border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100 p-3 space-y-4\">\n                <div className=\"flex flex-row items-center space-x-2\">\n                    <strong className=\"flex-grow font-normal text-red-500\">Delete</strong>\n                </div>\n            </div>\n          </button>\n        </div>\n        ) : null}\n      </>\n\n      <>\n        {isfolderWarning ? (\n          <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n          <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n              <form>\n              <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                  <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n              </div>\n              <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n              <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                  <div className=\"bg-white px-4 pt-5 pb-2 sm:p-1 sm:pt-6 sm:pb-4\">\n                  <div className=\"min-w-0 sm:flex sm:items-start\">\n                      <div className=\"w-full mt-3 text-center sm:mt-0 sm:ml-4 sm:mr-4 sm:text-left\">\n                        <h3 className=\"text-lg leading-6 font-medium text-red-500\" id=\"modal-headline\">\n                            Warning!\n                        </h3>\n                        <div className=\"mt-2\">\n                            <p>Are you sure you want to delete this folder?</p>\n                        </div>\n                      </div>\n                  </div>\n                  </div>\n                  <div className=\"flex flew-row bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                  <button type=\"submit\" onClick={(e)=> deleteFolder(e)} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-500 text-base font-medium text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                      Delete\n                  </button>\n                  <button type=\"button\" onClick={() => setShowModal(false)} className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                      Cancel\n                  </button>\n                  </div>\n              </div>\n              </form>\n          </div>\n          </div>\n        ) : null}\n      </>\n\n      <>\n      {showModal ? (\n          <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n          <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n              <form>\n              <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                  <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n              </div>\n              <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n              <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                  <div className=\"bg-white px-4 pt-5 pb-2 sm:p-1 sm:pt-6 sm:pb-4\">\n                  <div className=\"min-w-0 sm:flex sm:items-start\">\n                      <div className=\"w-full mt-3 text-center sm:mt-0 sm:ml-4 sm:mr-4 sm:text-left\">\n                          <h3 className=\"text-lg leading-6 font-medium text-blue-500\" id=\"modal-headline\">\n                            Rename file\n                          </h3>\n                          <div className=\"mt-2\">\n\n                            { isError && <p>Please fill foldername in!</p> }\n                            <input type=\"text\" value={newName} onChange={(e) => setNewName(e.target.value)} placeholder=\"Name...\" name=\"name\" className=\" h-8 p-2 focus:ring-blue-500 focus:border-blue-500 border border-blue-500 block w-full sm:text-sm rounded-md shadow-xl\"/>\n                          \n                          </div>\n                      </div>\n                  </div>\n                  </div>\n                  <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                    <button type=\"button\" onClick={() => submitRename(showModal.fileId)} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                        Add\n                    </button>\n                    <button type=\"button\" onClick={() => setShowModal(false)} className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                        Cancel\n                    </button>\n                  </div>\n              </div>\n              </form>\n          </div>\n          </div>\n      ): null}\n      </>\n      <>\n      {showSharedModal ? (\n          <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n          <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n              <form>\n              <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                  <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n              </div>\n              <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n              <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                  <div className=\"bg-white px-4 pt-5 pb-2 sm:p-1 sm:pt-6 sm:pb-4\">\n                  <div className=\"min-w-0 sm:flex sm:items-start\">\n                      <div className=\"w-full mt-3 text-center sm:mt-0 sm:ml-4 sm:mr-4 sm:text-left\">\n                          <h3 className=\"text-lg leading-6 font-medium text-blue-500\" id=\"modal-headline\">\n                            Share With Friend\n                          </h3>\n                          <div>\n                            <div className=\"mt-2 pb-2 border-b\">\n                              {/* { isError && <p>Please fill foldername in!</p> } */}\n                              <div class=\"pt-2 relative text-gray-800\">\n                                <input class=\"border w-full border-gray-500 bg-white h-10 px-5 pr-16 rounded-lg text-sm focus:outline-none\"\n                                    type=\"search\" name=\"search\" value={searchInput} onChange={(e) => onChange(e)} placeholder=\"Search for friend...\" />\n                                <button type=\"button\" class=\"absolute right-0 top-0 mt-5 mr-4\">\n                                    <svg class=\"text-gray-800 h-4 w-4 fill-current\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n                                </button>\n                              </div>\n                            </div>\n                            <div className=\"mt-2\">\n                              <div className=\"max-h-36 overflow-y-auto\">\n                                <>\n                                {friends !== null ? (\n                                  <>\n                                  {friends.map(friend => (\n                                    <a className=\"block border-b cursor-pointer\" onClick={()=> shareFile(file, friend.id)}>\n                                    <div className=\"border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100 p-2 space-y-4\">\n                                        <div className=\"flex flex-row items-center justify-between\">\n                                            <div className=\"flex flex-row space-x-2 items-center justify-center\">\n                                                {friend.profile_pic !== null ? (\n                                                    <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + friend.profile_pic} className=\"object-cover w-8 h-8 rounded-full\" />\n                                                ) : ( \n                                                    <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                                )}\n                                                <strong className=\"font-semibold text-sm\">{friend.firstname} {friend.lastname}</strong>\n                                            </div>\n                                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path></svg>\n                                        </div>\n                                    </div>\n                                  </a>\n                                  ))}\n                                  </>\n                                  ) : null}  \n                                  </>\n                              </div>\n                            </div>\n                          </div>\n                      </div>\n                  </div>\n                  </div>\n                  <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                    <button type=\"button\" onClick={() => setShowSharedModal(false)} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                        Done\n                    </button>\n                    <button type=\"button\" onClick={() => setShowSharedModal(false)} className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                        Cancel\n                    </button>\n                  </div>\n              </div>\n              </form>\n          </div>\n          </div>\n      ): null}\n      </>\n    </div>\n  );\n}\n\nconst styles = {\n  selecting: \"px-2 py-1 rounded-md border-2 border-blue-500 bg-blue-500 text-white hover:bg-white hover:text-blue-500 font-semibold transition duration-300 outline-none focus:outline-none\",\n  default: \"px-2 py-1 rounded-md border-2 border-blue-500 text-blue-500 hover:bg-blue-500 hover:text-white font-semibold transition duration-300 outline-none focus:outline-none\",\n}\n\nexport default Collection;\n","/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/register.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/pages/FriendsPage.js",["176","177"],"import React, { useState, useEffect }from 'react';\nimport Navbar from '../components/NavBar';\nimport '../index.css';\nimport axios from 'axios';\n\nfunction FriendsPage() {\n\n    const token = JSON.parse(localStorage.getItem('tokens'));\n    const [friends, setFriends] = useState([]);\n\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/users/allfriends/${token.id}`)\n            .then((response) => {\n                if (response.status === 200) {\n                    setFriends(response.data);\n                }\n            })\n    }, [])\n\n    return ( \n        <div className='flex flex-row h-screen bg-gray-100'>\n            <Navbar page={'friends'}/>\n\n            <div className='flex-auto bg-white'>\n                <div className=\"w-full flex flex-col p-6 space-y-4\">\n                    <div className=\"flex-none h-16 flex flex-row justify-between items-center border-b\">\n                        <div className=\"flex flex-row items-end space-x-4\">\n                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n                            <input className=\"outline-none sm:w-96 w-5/6 p-0 text-md\" type=\"text\" placeholder=\"Search...\" />\n                        </div>\n                        <div className=\"flex flex-row items-end space-x-2\">\n                            <button className=\"focus:outline-none\">\n                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"></path></svg>\n                            </button>\n                            <button className=\"focus:outline-none\">\n                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"></path></svg>   \n                            </button>\n                        </div>\n                    </div>\n                    <h1 className=\"text-xl font-bold\">My Friends</h1>\n                    <div className=\"flex-auto overflow-y-auto grid 2xl:grid-cols-4 xl:grid-cols-3 lg:grid-cols-2 grid-cols-1 gap-4\">\n                        {friends.map(friend => (\n                            <div className=\"border border-gray-400 rounded-md shadow-md p-4\">\n                                <div className=\"flex flex-row items-center space-x-2\">\n                                    {friend.profile_pic !== null ? (\n                                        <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + friend.profile_pic} className=\"object-cover w-16 h-16 rounded-full\" />\n                                    ) : ( \n                                        <svg class=\"w-16 h-16\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                    )}\n                                    <div className=\"flex flex-col space-y-0\">\n                                        <strong className=\"text-lg font-medium\">{friend.firstname} {friend.lastname}</strong>\n                                        <p className=\"text-sm font-normal text-gray-500\">{friend.created}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default FriendsPage;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/context/auth.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/files.js",["178"],"import React, { Component } from 'react';\nimport Axios from 'axios';\n\nclass File extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.folderId = props.folderId;\n        this.fileshowing = props.fileShowing;\n        this.state = {\n            files: [],\n            file: null,\n        }\n    }\n\n    componentDidMount() {\n        Axios({method: 'GET', url:`http://${process.env.REACT_APP_HOST_IP}:3030/folders/folder/` + this.folderId})\n          .then(res => {\n            if(res.status === 200) {\n              if(res.data !== \"no data\") {\n                const files = res.data;\n                this.setState({ files });\n              } \n            }\n        });\n    }\n    \n    render() {\n\n        return (\n            <>\n            {this.state.files.map((file => {\n                return (\n                    <div className=\"block cursor-pointer border border-gray-400 rounded-md shadow-md hover:border-cornblue-400 hover:bg-cornblue-200 hover:text-white\">\n                        <div className=\"flex flex-row items-center\">\n                            <a className=\"flex-auto cursor-pointer \" onClick={() => {\n                                this.fileshowing(file.path, file.name, file.is_image, file.file_id, file.created_at);\n                            }}>\n                                <div className=\"p-3 space-y-4\">\n                                    <div className=\"flex flex-row items-center space-x-2\">\n                                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"></path></svg>\n                                        <strong className=\"flex-grow text-sm font-normal\">{file.name}</strong>\n                                    </div>\n                                </div>\n                            </a>\n                            <div className=\"flex-none flex flex-row space-x-2 mr-2\">\n                                {/* <button onClick={() => this.props.renameFile({\n                                    name: file.name.split('.')[0],\n                                    ext: file.name.split('.')[1],\n                                    fileId: file.file_id\n                                })}>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"></path></svg>\n                                </button> */}\n                                <button onClick={() => {\n                                    this.props.downloadFunction(file.name, file.path, file.name, file.is_image)\n                                }}>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path></svg>\n                                </button>\n                                {/* <button onClick={()=>this.props.deletefile(file.file_id)}>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path></svg>\n                                </button> */}\n                            </div>\n                        </div>\n                    </div>\n                )\n            }))}\n            \n            </>\n        )\n    }\n}\n\nexport default File;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/sharedFileSlecting.js",["179"],"import React, { Component } from 'react';\nimport Axios from 'axios';\n\nlet selected = [];\n\nclass SelecingFiles extends Component {\n    \n    \n\n    constructor(props) {\n        super(props);\n        this.folderId = props.folderId;\n        this.state = {\n            files: [],\n            file: null,\n            selected: [],\n            token: JSON.parse(localStorage.getItem('tokens'))\n        }\n    }\n\n    componentDidMount() {\n        let combined = [];\n        Axios({method: 'GET', url:`http://${process.env.REACT_APP_HOST_IP}:3030/files/getshared/${this.state.token.id}`})\n          .then(res => {\n            if(res.status === 200) {\n              if(res.data !== \"no data\") {\n                const files = res.data;\n                if(files.length > 0) {\n                    files.forEach(file => {\n                        const obj = {...file, isSelect: false};\n                        combined.push(obj);\n                    })\n                }\n                this.setState({ files: combined });\n              } \n            }\n        });\n    }\n\n    selectItem = (item) => {\n        item.isSelect = !item.isSelect;\n        if(item.isSelect){\n            const obj = {\n                name: item.name,\n                file: item.path,\n                filename: item.name,\n                is_image: item.is_image,\n                fileId: item.file_id\n            };\n            selected.push(obj);\n        } else {\n            for(let i = 0; i < selected.length; i++) {\n                if(selected[i].fileId === item.file_id) {\n                    selected.splice(i, 1)\n                }\n            }\n        }\n        this.setState({selected: selected});\n        this.props.setSelected(selected)\n    };\n    \n    render() {\n        return (\n            <div className=\"mt-4 flex-auto overflow-y-auto grid 2xl:grid-cols-5 xl:grid-cols-4 lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-4\">\n            {this.state.files.map((file => {\n                return (\n                    <div className={file.isSelected ? styles.selected : styles.normal} onClick={() => {\n                        this.selectItem(file)\n                    }}>\n                        <div className=\"flex flex-row items-center\">\n                            {file.isSelect ? (\n                                <>\n                                    <svg class=\"ml-2 w-6 h-6 \" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                </>\n                            ) : (\n                                <>\n                                <svg class=\"ml-2\" width=\"1.5rem\" height=\"1.5rem\">\n                                    <circle cx=\"0.7rem\" cy=\"0.7rem\" r=\"0.50rem\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" />\n                                </svg>\n                                </>\n                            )}\n                            <a className=\"flex-auto cursor-pointer \">\n                                <div className=\"p-3 space-y-4\">\n                                    <div className=\"flex flex-row items-center space-x-2\">\n                                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"></path></svg>\n                                        <strong className=\"flex-grow text-sm font-normal\">{file.name}</strong>\n                                    </div>\n                                </div>\n                            </a>\n\n                        </div>\n                    </div>\n            )\n            }))}\n            \n            </div>\n        )\n    }\n}\n\nconst styles = {\n    selected: \"border border-cornblue-400 rounded-md shadow-md bg-cornblue-200 text-white\",\n    normal: \"border border-gray-400 rounded-md shadow-md hover:border-cornblue-400 hover:bg-cornblue-200 hover:text-white\"\n}\n\nexport default SelecingFiles;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/NavBar.js",["180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"import React, { useState, useEffect } from 'react';\nimport '../index.css';\nimport { useAuth } from '../context/auth';\nimport { Redirect, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport ProgressBar from './ProgressBar';\nimport WarningDialog from './warningDialog';\nimport ProgressRing from './CircleProgress';\n\nlet chunkSize = 1024*1024; // 1MB\n\nfunction Navbar(props) {\n\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/directorySize/${token.id}`)\n          .then(res => {\n            if(res.status === 200) {\n              var percentage = res.data.totalSizeBytes\n              setProgressSpace(percentage)\n              setUsedSpace(res.data.totalSize)\n            }\n          })\n      }, [])\n\n    const { setAuthTokens } = useAuth();\n    const [showModal, setShowModal] = useState(false);\n    const [foldername, setFoldername] = useState(\"\");\n    const [isError, setIsError ] = useState(false); \n    const [files, setFiles] = React.useState(null);\n    const [fileUploading, setFileUploading] = React.useState(null);\n    const [folderName, setFolderName] = useState(useParams().foldername);\n    const [counter, setCounter] = useState(1)\n    const [fileToBeUpload, setFileToBeUpload] = useState({})\n    const [beginingOfTheChunk, setBeginingOfTheChunk] = useState(0)\n    const [endOfTheChunk, setEndOfTheChunk] = useState(chunkSize)\n    const [progress, setProgress] = useState(0)\n    const [fileSize, setFileSize] = useState(0)\n    const [chunkCount, setChunkCount] = useState(0);\n    const [filename, setFilename] = useState(\"\");\n    const [fileOnSelected, setFileOnSelected] = useState(0);\n    const [totalSize, setTotalSize] = React.useState(0);\n    const [WarningDialog, setWarningDialog] = useState(false);\n    const [msg, setMsg] = useState(\"\");\n    const [usersRequestingTotal, setUsersRequestingTotal] = useState(0);\n    const token = JSON.parse(localStorage.getItem('tokens'));\n    const [progressSpace, setProgressSpace] = React.useState(0);\n    const [usedSpace, setUsedSpace] = React.useState(0);\n    const [showModalRequest, setShowModalRequest] = React.useState(false);\n    const [usersRequesting, setUsersRequesting] = React.useState([]);\n\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    function logOut() {\n        setAuthTokens(null);\n        return <Redirect to=\"/login\" />\n    }\n\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/users/friendrequests/${token.id}`)\n            .then((response) => {\n                if (response.status === 200) {\n                    setUsersRequesting(response.data);\n                    setUsersRequestingTotal(response.data.length)\n                }\n            })\n    }, [])\n\n    function handleUpdateRequest(e, status, FriendsId) {\n        e.preventDefault()\n        let data;\n        if(status === \"accept\") {\n            data = {Status: 1}\n        } else {\n            data = {Status: 2}\n        }\n        axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/users/updateRequest/${FriendsId}`, data)\n            .then(response => {\n                if(response.status === 200) {\n                    setShowModalRequest(false);\n                    window.location.reload();\n                }\n            })\n    }\n\n    function postItem() {\n\n        axios({method: \"POST\", url:`http://${process.env.REACT_APP_HOST_IP}:3030/addfolder/${token.id}`, data: {\n            name: foldername,\n        }}).then(result => {\n            if(result.status === 200) {\n                setShowModal(false);\n                this.props.setShowSuccess(true);\n            } else {\n                setIsError(true)\n            }\n        }).catch(e => {\n            setIsError(true);\n        });\n    }\n\n    function handleChange(event) {\n        if(event.target.files.length > 1) {\n            setFileUploading(`${event.target.files.length} selected`);\n            setFiles(event.target.files);\n        } else {\n            setFileUploading(event.target.files[0].name);\n            setFiles(event.target.files);\n        }\n    }\n\n    const firstGetFileContext = () => {\n        resetChunkProperties();\n        setCounter(1);\n\n        let numb = fileOnSelected;\n\n        if(files[numb].size > 104857600) {\n            chunkSize = 10 * 1024 * 1024;\n        }\n\n        const token = JSON.parse(localStorage.getItem('tokens'));\n        //5368709120 == 5 GB\n        //52428800 == 50 MB\n        if(totalSize + files[numb].size >= 5368709120 ) {\n            setMsg('You have not enough space for this file: ' + files[numb].name);\n            setWarningDialog(true)\n        } else {\n            axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/openStream/${token.id}/${folderName}/${files[numb].name}`, {\n                cancelToken: source.token\n            })\n                .then(async response => {\n                    if(response.status === 200) {\n                        setFileSize(files[numb].size);\n\n                        const _totalCount = files[numb].size % chunkSize == 0 ? files[numb].size / chunkSize : Math.floor(files[numb].size / chunkSize) + 1;\n                        setChunkCount(_totalCount);\n\n                        setFileToBeUpload(files[numb]);\n                        setFilename(files[numb].name);\n                        //setFileOnSelected(fileOnSelected + 1);\n                    }\n                });\n        }\n    }\n\n    const getFileContext = () => {\n        resetChunkProperties();\n        setCounter(1);\n\n        let numb = fileOnSelected + 1;\n\n        if(files[numb].size > 104857600) {\n            chunkSize = 10 * 1024 * 1024;\n        }\n    \n        const token = JSON.parse(localStorage.getItem('tokens'));\n        \n        if(totalSize + files[numb].size >= 5368709120) {\n            setMsg('You have not enough space for this file');\n            setWarningDialog(true)\n        } else {\n            axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/openStream/${token.id}/${folderName}/${files[numb].name}`, {\n                cancelToken: source.token\n            })\n                .then(async response => {\n                    if(response.status === 200) {\n                        setFileSize(files[numb].size);\n\n                        const _totalCount = files[numb].size % chunkSize == 0 ? files[numb].size / chunkSize : Math.floor(files[numb].size / chunkSize) + 1;\n                        setChunkCount(_totalCount);\n\n                        setFileToBeUpload(files[numb]);\n                        setFilename(files[numb].name);\n\n                        setFileOnSelected(fileOnSelected + 1);\n                    }\n                });\n        }\n    }\n\n    const resetChunkProperties = () => {\n        setProgress(0);\n        setCounter(1);\n        setBeginingOfTheChunk(0);\n        setEndOfTheChunk(chunkSize);\n        setFileSize(0);\n        setChunkCount(0);\n        setFileToBeUpload({});\n    }\n\n    useEffect(() => {\n        if (fileSize > 0) {\n            fileUpload(counter);\n        }\n    }, [fileToBeUpload, progress]);\n\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/directorySize/${token.id}`)\n        .then(res => {\n            if(res.status === 200) {\n                setTotalSize(res.data.total)\n            }\n      } )\n    })\n\n    const fileUpload = () => {\n        setCounter(counter + 1);\n        if (counter <= chunkCount) {\n          var chunk = fileToBeUpload.slice(beginingOfTheChunk, endOfTheChunk);\n          uploadChunk(chunk)\n        }\n      }\n\n      const uploadChunk = async (chunk) => {\n          \n        try {\n            const response = await axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/UploadChunks`, chunk, {\n                headers: {\n                    'Content-Type': 'application/octet-stream',\n                },\n                cancelToken: source.token\n            });\n\n            const data = response.data;\n\n            if (response.status === 200) {\n                let numb = fileOnSelected;\n                if(files[numb].size > 104857600) {\n                    chunkSize = 10 * 1024 * 1024;\n                }\n\n                setBeginingOfTheChunk(endOfTheChunk);\n                setEndOfTheChunk(endOfTheChunk + chunkSize);\n\n                if(counter == chunkCount) {\n                    console.log('Process is complete, counter', counter)\n                    await uploadCompleted();\n                } else {\n                    var percentage = Math.floor((counter / chunkCount) * 100);\n                    setProgress(percentage);\n                }\n            } else {\n                console.log('Error Occurred:', data)\n            }\n        } catch (error) {\n            console.log('error', error)\n        }\n      }\n\n      const uploadCompleted = async () => {\n        if(files.length > 1) {\n            setFileOnSelected(fileOnSelected + 1);\n        }\n\n        const token = JSON.parse(localStorage.getItem('tokens'));\n\n        let numb = 0;\n\n        if(files.length > 1) {\n            numb = fileOnSelected;\n        }\n\n        const response = await axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/addfiles/${token.id}/${folderName}/${files[numb].name}`, {\n            cancelToken: source.token\n        });\n        if (response.status === 200) {\n          setProgress(100);\n          if(files.length == 1) {\n              setTimeout(() => {\n                  resetChunkProperties();\n                  setShowModal(false);\n                  setFileUploading(null);\n                  window.location.reload();\n              }, 1000);\n          } else {\n            if(files.length - 1 === fileOnSelected) {\n                setTimeout(() => {\n                    resetChunkProperties();\n                    setShowModal(false);\n                    setFileUploading(null);\n                    window.location.reload();\n                }, 1000);\n            } else {\n                setTimeout(() => {\n                    getFileContext();\n                }, 1000);\n            }\n          }\n        }\n      }\n    \n    return (\n\n      <>\n        <div className='flex flex-col flex-none relative xl:w-72 w-16 z-10 justify-between bg-cornblue-400'>\n            <div className='flex flex-col xl:p-4 p-2 space-y-12'>\n                <a className='mt-6 flex xl:flex-row items-center xl:space-x-4' href=\"/\">\n                    <svg className=\"xl:relative absolute w-11 h-11 text-cornblue-200\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M9.504 1.132a1 1 0 01.992 0l1.75 1a1 1 0 11-.992 1.736L10 3.152l-1.254.716a1 1 0 11-.992-1.736l1.75-1zM5.618 4.504a1 1 0 01-.372 1.364L5.016 6l.23.132a1 1 0 11-.992 1.736L4 7.723V8a1 1 0 01-2 0V6a.996.996 0 01.52-.878l1.734-.99a1 1 0 011.364.372zm8.764 0a1 1 0 011.364-.372l1.733.99A1.002 1.002 0 0118 6v2a1 1 0 11-2 0v-.277l-.254.145a1 1 0 11-.992-1.736l.23-.132-.23-.132a1 1 0 01-.372-1.364zm-7 4a1 1 0 011.364-.372L10 8.848l1.254-.716a1 1 0 11.992 1.736L11 10.58V12a1 1 0 11-2 0v-1.42l-1.246-.712a1 1 0 01-.372-1.364zM3 11a1 1 0 011 1v1.42l1.246.712a1 1 0 11-.992 1.736l-1.75-1A1 1 0 012 14v-2a1 1 0 011-1zm14 0a1 1 0 011 1v2a1 1 0 01-.504.868l-1.75 1a1 1 0 11-.992-1.736L16 13.42V12a1 1 0 011-1zm-9.618 5.504a1 1 0 011.364-.372l.254.145V16a1 1 0 112 0v.277l.254-.145a1 1 0 11.992 1.736l-1.735.992a.995.995 0 01-1.022 0l-1.735-.992a1 1 0 01-.372-1.364z\" clip-rule=\"evenodd\"></path></svg>\n                    <h1 className=\"text-white font-bold text-2xl xl:visible invisible\">HomeCloud</h1>\n                </a>\n                <div className=\"flex flex-col space-y-1 pb-6 border-b border-cornblue-200\">\n                    <a className='flex flex-row items-end space-x-3 p-1 h-11 hover:bg-cornblue-600 rounded-md' href='/'>\n                        <svg class=\"xl:relative absolute w-9 h-9 text-cornblue-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"></path></svg>\n                        <p className=\"text-cornblue-200 font-bold text-xl xl:visible invisible\">Home</p>\n                    </a>\n                    <a className='flex flex-row items-end justify-between p-1 h-11 hover:bg-cornblue-600 rounded-md' href=\"/friends\">\n                        <div className=\"flex flex-row items-end space-x-3\">\n                            <svg class=\"xl:relative absolute w-9 h-9 text-cornblue-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"></path></svg>\n                            <p className=\"text-cornblue-200 font-bold text-xl xl:visible invisible\">Friends</p>\n                        </div>\n                        {usersRequestingTotal != 0 ? (\n                            <div class=\"flex h-4 w-8 my-1 rounded-full bg-cornblue-200 items-center justify-center z-2 xl:visible lg:invisible\">\n                                <p className=\"text-cornblue-400 font-medium text-xs xl:visible invisible\">{usersRequestingTotal}</p>\n                            </div>\n                        ) : null}\n                    </a >\n                    <a className='flex flex-row items-end justify-between p-1 h-11 hover:bg-cornblue-600 rounded-md' href=\"/chat\">\n                        <div className=\"flex flex-row items-end space-x-3\">\n                        <svg class=\"xl:relative absolute w-9 h-9 text-cornblue-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4\"></path></svg>\n                            <p className=\"text-cornblue-200 font-bold text-xl xl:visible invisible\">Chats</p>\n                        </div>\n                        {/* {usersRequestingTotal != 0 ? (\n                            <div class=\"flex h-4 w-8 my-1 rounded-full bg-cornblue-200 items-center justify-center z-2 xl:visible lg:invisible\">\n                                <p className=\"text-cornblue-400 font-medium text-xs xl:visible lg:invisible\">{usersRequestingTotal}</p>\n                            </div>\n                        ) : null} */}\n                    </a >\n                    <a className='flex flex-row items-end space-x-3 p-1 h-11 hover:bg-cornblue-600 rounded-md' href='/shared'>\n                        <svg class=\"xl:relative absolute w-9 h-9 text-cornblue-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z\"></path></svg>\n                        <p className=\"text-cornblue-200 font-bold text-xl xl:visible invisible\">Shared</p>\n                    </a>\n                </div>\n                <div>\n                    {props.page === \"friends\" && (\n                        <a className='cursor-pointer -mt-8 flex flex-row items-end justify-between p-1 h-11 hover:bg-cornblue-600 rounded-md' onClick={() => setShowModalRequest(true)}>\n                            <div className=\"flex flex-row items-end space-x-3\">\n                                <svg class=\"xl:relative absolute w-9 h-9 text-cornblue-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"></path></svg>\n                                <p className=\"text-cornblue-200 font-bold text-xl xl:visible invisible\">Friends Requests</p>\n                            </div>\n                            {usersRequestingTotal != 0 ? (\n                                <div class=\"flex h-4 w-8 my-1 rounded-full bg-cornblue-200 items-center justify-center z-2 xl:visible lg:invisible\">\n                                    <p className=\"text-cornblue-400 font-medium text-xs xl:visible invisible\">{usersRequestingTotal}</p>\n                                </div>\n                            ) : null}\n                        </a >\n                    )}\n                    {props.page === \"folder\" && (\n                        <a className='cursor-pointer -mt-8 flex flex-row items-end justify-between p-1 h-11 hover:bg-cornblue-600 rounded-md' onClick={() => setShowModal({\n                            showModal: true,\n                            name: 'Add folder',\n                            add_folder: true,\n                        })}>\n                            <div className=\"flex flex-row items-end space-x-3\">\n                                <svg class=\"xl:relative absolute w-9 h-9 text-cornblue-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\"></path></svg>\n                                <p className=\"text-cornblue-200 font-bold text-xl xl:visible invisible\">Add folder</p>\n                            </div>\n                        </a >\n                    )}\n                    {props.page === \"file\" && (\n                    <>       \n                        <a className='cursor-pointer -mt-8 flex flex-row items-end justify-between p-1 h-11 hover:bg-cornblue-600 rounded-md' onClick={() => setShowModal({\n                            showModal: true,\n                            name: 'Add file(s)',\n                            add_files: true,\n                        })}>\n                            <div className=\"flex flex-row items-end space-x-3\">\n                                <svg class=\"xl:relative absolute w-9 h-9 text-cornblue-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path></svg>\n                                <p className=\"text-cornblue-200 font-bold text-xl xl:visible invisible\">Add file(s)</p>\n                            </div>\n                        </a >\n                        <a className='cursor-pointer mt-2 flex flex-row items-end justify-between p-1 h-11 hover:bg-cornblue-600 rounded-md' onClick={() => setShowModal({\n                            showModal: true,\n                            name: 'Upload folder',\n                            upload_folder: true,\n                        })}>\n                            <div className=\"flex flex-row items-end space-x-3\">\n                            <svg class=\"xl:relative absolute w-9 h-9 text-cornblue-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\"></path></svg>\n                                <p className=\"text-cornblue-200 font-bold text-xl xl:visible invisible\">Upload folder</p>\n                            </div>\n                        </a >\n                    </>\n                    )}\n                </div>\n            </div>\n            <div className=\"flex flex-col space-y-4\">\n                <div className=\"w-full xl:p-4 lg:p-2 xl:visible invisible\">\n                    <div className=\"flex flex-col pt-6 border-t border-cornblue-200\">\n                            <div className=\"flex mb-2 items-center justify-between\">\n                                <div>\n                                    <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-cornblue-600 bg-cornblue-200\">\n                                        Available Space\n                                    </span>\n                                </div>\n                                <div className=\"flex flex-row items-center space-x-2 text-right\">\n                                    <span className=\"text-xs font-bold inline-block text-cornblue-200\">\n                                        { progressSpace > 0 && usedSpace + '/5.0 GB' }\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"overflow-hidden h-2 text-xs flex rounded bg-cornblue-200\">\n                                <div style={{ width: progressSpace + '%' }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-cornblue-600\"></div>\n                            </div>\n                    </div>\n                </div>\n                <div className='flex xl:flex-row flex-col xl:p-4 p-2 py-6 justify-between items-center bg-cornblue-600'>\n                    <a className='absolute visible xl:invisible' href=\"/myprofile\">\n                        {token.profile_pic != null && <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + token.profile_pic} className=\"object-cover w-11 h-11 rounded-full hover:opacity-50\" />}\n                        {token.profile_pic == null && <svg className=\"w-9 h-9\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>}\n                    </a>\n                    <div className='flex flex-row items-center space-x-3 xl:visible invisible'>\n                        <div>\n                            {token.profile_pic != null && <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + token.profile_pic} className=\"object-cover w-11 h-11 rounded-full\" />}\n                            {token.profile_pic == null && <svg className=\"w-9 h-9\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>}\n                        </div>\n                        <div className=\"flex flex-col space-y-0 \">\n                            <p className=\"text-cornblue-200 text-sm font-bold\">{token.name}</p>\n                            <a className=\"text-cornblue-200 text-xs\" href=\"/myprofile\">View profile</a>\n                        </div>\n                    </div>\n                    <button onClick={logOut}>\n                        <svg className=\"w-8 h-8 text-cornblue-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"></path></svg>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <>\n        {showModalRequest ? (\n            <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n                <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                    <form>\n                    <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                        <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                    </div>\n                    <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n                    <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                        <div className=\"bg-white px-4 pt-5 pb-2 sm:p-1 sm:pt-6 sm:pb-4\">\n                        <div className=\"min-w-0 sm:flex sm:items-start\">\n                            <div className=\"w-full mt-3 text-center sm:mt-0 sm:ml-4 sm:mr-4 sm:text-left\">\n                            <h3 className=\"text-lg leading-6 font-medium text-blue-500\" id=\"modal-headline\">\n                                Friend Request(s)\n                            </h3>\n                            <div className=\"mt-2 overflow-y-auto\">\n                                {usersRequesting.map(user => (\n                                    <>\n                                    {token.id != user.id ? (\n                                        <div className=\"block border-b\">\n                                        <div className={styles.default}>\n                                            <div className=\"flex flex-row items-center justify-between\">\n                                                <div className=\"flex flex-row space-x-2\">\n                                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                                    <strong className=\"flex-grow font-normal\">{user.firstname} {user.lastname}</strong>\n                                                </div>\n                                                <div className=\"space-x-2\">\n                                                    <button onClick={(e) =>  handleUpdateRequest(e, \"accept\", user.FriendsId)}>\n                                                        <svg class=\"w-6 h-6 hover:text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path></svg>\n                                                    </button>\n                                                    <button onClick={(e) =>  handleUpdateRequest(e, \"decline\", user.FriendsId)}>\n                                                        <svg class=\"w-6 h-6 hover:text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    ): null}\n                                    </>\n                                ))}\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                        <div className=\"flex flew-row bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                        <button onClick={()=> {\n                            setShowModalRequest(false)\n                        }} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                            Close\n                        </button>\n                        </div>\n                    </div>\n                    </form>\n                </div>\n            </div>\n        ) : null}\n        </>\n        <>\n        {showModal ? (\n            <div className=\"fixed z-20 inset-0 overflow-y-auto\">\n            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                <form>\n                <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                    <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                </div>\n                <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n                <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                    <div className=\"bg-white px-4 pt-5 pb-2 sm:p-1 sm:pt-6 sm:pb-4\">\n                    <div className=\"min-w-0 sm:flex sm:items-start\">\n                        <div className=\"w-full mt-3 text-center sm:mt-0 sm:ml-4 sm:mr-4 sm:text-left\">\n                            <h3 className=\"text-lg leading-6 font-medium text-blue-500\" id=\"modal-headline\">\n                                {showModal.name}\n                            </h3>\n                            <div className=\"mt-2\">\n                                {showModal.add_folder && (\n                                    <>\n                                        { isError && <p>Please fill foldername in!</p> }\n                                        <input type=\"text\" value={foldername} onChange={ (e) => setFoldername(e.target.value) } placeholder=\"Name...\" name=\"name\" className=\" h-8 p-2 focus:ring-blue-500 focus:border-blue-500 border border-blue-500 block w-full sm:text-sm rounded-md shadow-xl\"/>\n                                    </>\n                                )}\n                                {showModal.add_files && (\n                                    <>\n                                    {progress > 0 && (\n                                        <div>\n                                            <ProgressBar \n                                                filename={filename}\n                                                progress={progress}\n                                            />\n                                            <div className=\"mt-2 flex flex-row justify-between\">\n                                                <p>Completed: {fileOnSelected}/{files == null ? \"0\" : files.length}</p>\n                                                <ProgressRing\n                                                     strokeWidth=\"3\"\n                                                     sqSize=\"25\"\n                                                     percentage={files == null ? 0 : (fileOnSelected/files.length) * 100}\n                                                />\n                                            </div>\n                                        </div>\n                                    )}\n                                    {progress === 0 && (\n                                        <>\n                                        {folderName == undefined ? (\n                                            <p>No Folder Selected</p>\n                                        ) : (\n                                            <label className=\"w-full h-10 flex flex-row items-center space-x-4 px-4 py-6 bg-white text-blue-500 rounded-lg shadow-lg tracking-wide uppercase border border-blue cursor-pointer hover:bg-blue-500 hover:text-white\">\n                                                <svg className=\"w-6 h-6\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                                                    <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\n                                                </svg>\n                                                <span className=\"text-base leading-normal\">{ \n                                                    fileUploading != null ? fileUploading : 'Select File(s)'\n                                                }</span>\n                                                <input type='file' className=\"hidden\" onChange={handleChange} multiple />\n                                            </label>\n                                        )}\n                                        </>\n                                    )}\n                                    </>\n                                )}\n                                {showModal.upload_folder && (\n                                    <>\n                                    {progress > 0 && (\n                                        <div>\n                                            <ProgressBar \n                                                filename={filename}\n                                                progress={progress}\n                                            />\n                                            <div className=\"mt-2 flex flex-row justify-between\">\n                                                <p>Completed: {fileOnSelected}/{files == null ? \"0\" : files.length}</p>\n                                                <ProgressRing\n                                                     strokeWidth=\"3\"\n                                                     sqSize=\"25\"\n                                                     percentage={files == null ? \"0\" : (fileOnSelected / files.length) * 100}\n                                                />\n                                            </div>\n                                        </div>\n                                    )}\n                                    {progress === 0 && (\n                                        <>\n                                        {folderName == undefined ? (\n                                            <p>No Folder Selected</p>\n                                        ) : (\n                                            <label className=\"w-full h-10 flex flex-row items-center space-x-4 px-4 py-6 bg-white text-blue-500 rounded-lg shadow-lg tracking-wide uppercase border border-blue cursor-pointer hover:bg-blue-500 hover:text-white\">\n                                                <svg className=\"w-6 h-6\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                                                    <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\n                                                </svg>\n                                                <span className=\"text-base leading-normal\">{ \n                                                    fileUploading != null ? fileUploading : 'Select File(s)'\n                                                }</span>\n                                                <input type='file' className=\"hidden\" onChange={handleChange} multiple webkitdirectory=\"\" directory=\"\" />\n                                            </label>\n                                        )}\n                                        </>\n                                    )}\n                                    </>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                    <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                    <>\n\n                    {showModal.add_folder ? (\n                        <button type=\"submit\" onClick={postItem} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                            Add\n                        </button>\n                    ) : (\n                        <>\n                        {folderName == undefined ? null : (\n                            <button type=\"button\" onClick={() => firstGetFileContext()} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Add\n                            </button>\n                        )}\n                        </>\n                    )}\n                    <button type=\"button\" onClick={() => setShowModal(false)} className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                        Cancel\n                    </button>\n                    </>\n                    </div>\n                </div>\n                </form>\n            </div>\n            </div>\n        ): null}\n        <>\n        {WarningDialog ? (\n            <div className=\"fixed z-20 inset-0 overflow-y-auto\">\n                <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                    <form>\n                    <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                        <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                    </div>\n                    <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n                    <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                        <div className=\"bg-white px-4 pt-5 pb-2 sm:p-1 sm:pt-6 sm:pb-4\">\n                        <div className=\"min-w-0 sm:flex sm:items-start\">\n                            <div className=\"w-full mt-3 text-center sm:mt-0 sm:ml-4 sm:mr-4 sm:text-left\">\n                            <h3 className=\"text-lg leading-6 font-medium text-red-500\" id=\"modal-headline\">\n                                Warning!\n                            </h3>\n                            <div className=\"mt-2\">\n                                <p>{msg}</p>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                        <div className=\"flex flew-row bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                        <button type=\"submit\" onClick={()=> {\n                            setWarningDialog(false)\n                            window.location.reload();\n                        }} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-500 text-base font-medium text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                            Close\n                        </button>\n                        </div>\n                    </div>\n                    </form>\n                </div>\n            </div>\n        ) : null}\n        </>\n        </>\n      </>\n    )\n}\n\nconst styles = {\n    default: \"border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100 p-3 space-y-4\",\n    selected: \"border-l-2 border-blue-500 bg-blue-100 p-3 space-y-4\"\n}\n\nexport default Navbar;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/transition.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/folders.js",["201"],"import React from 'react';\nimport axios from 'axios';\n\nclass FolderList extends React.Component {\n    state = {\n        folders: []\n    }\n\n    constructor(props) {\n        super(props);\n        this.getFiles = this.props.getFiles;\n    }\n    \n    componentDidMount() {\n        const token = JSON.parse(localStorage.getItem('tokens'));\n        axios({method: 'GET', url:`http://${process.env.REACT_APP_HOST_IP}:3030/folders/${token.id}`})\n            .then(res => {\n            const folders = res.data;\n            this.setState({ folders });\n        })\n    }\n\n    render() {\n        return (\n        <>\n            {this.state.folders.map(folder => (\n                <a className=\"block cursor-pointer border p-4 border-gray-400 rounded-md shadow-md hover:border-cornblue-400 hover:bg-cornblue-200 hover:text-white\" href={`/collection/folder/${folder.name}/${folder.folder_id}`}>\n                    <div className=\"flex flex-row items-center space-x-2\">\n                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"></path></svg>\n                        <strong className=\"flex-grow font-normal\">{folder.name}</strong>\n                    </div>\n                </a>\n            ))}\n        </>\n        )\n    }\n}\n\nconst styles = {\n    default: \"border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100 p-3 space-y-4\",\n    selected: \"border-l-2 border-blue-500 bg-blue-100 p-3 space-y-4\"\n}\n\nexport default FolderList;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/FileShow.js",["202","203"],"import React from 'react';\n\nfunction FileShow(props) {\n\n    return (\n        <div className=\"w-1/3 bg-white rounded-tl-xl rounded-bl-xl border-l border-r border-gray-400 shadow-2xl p-2\">\n            <div className=\"h-16 bg-white flex flex-row justify-center items-center border-b\">\n                <button className=\"absolute right-0 pr-2\" onClick={() => props.setFileshow(false)}>\n                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                </button>\n                <div className=\"flex-none\">\n                    <h1 className=\"font-semibold\">File Info</h1>\n                </div>\n            </div>\n            <div className=\"flex flex-col p-2 space-y-8 justify-center items-center\">\n                <>\n                {props.file.is_image ? <img src={'http://localhost:3030' + props.file.file} /> : <h1>No preview to see</h1>}\n                </>\n                {props.showShareDialog != undefined ? (\n                <button type=\"button\" onClick={() => props.showShareDialog(true)} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                    <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z\"></path></svg>\n                    <p className=\"ml-2\">Share with friend</p>\n                </button>\n                ) : null}\n            </div>\n        </div>\n    )\n\n}\n\nexport default FileShow;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/hooks/useFileDownloader.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/SelectingFiles.js",["204"],"import React, { Component } from 'react';\nimport Axios from 'axios';\n\nlet selected = [];\n\nclass SelecingFiles extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.folderId = props.folderId;\n        this.state = {\n            files: [],\n            file: null,\n            selected: []\n        }\n    }\n\n    componentDidMount() {\n        let combined = [];\n        Axios({method: 'GET', url:`http://${process.env.REACT_APP_HOST_IP}:3030/folders/folder/` + this.folderId})\n          .then(res => {\n            if(res.status === 200) {\n              if(res.data !== \"no data\") {\n                const files = res.data;\n                if(files.length > 0) {\n                    files.forEach(file => {\n                        const obj = {...file, isSelect: false};\n                        combined.push(obj);\n                    })\n                }\n                this.setState({ files: combined });\n              } \n            }\n        });\n    }\n\n    selectItem = (item) => {\n        item.isSelect = !item.isSelect;\n        if(item.isSelect){\n            const obj = {\n                name: item.name,\n                file: item.path,\n                filename: item.name,\n                is_image: item.is_image,\n                fileId: item.file_id\n            };\n            selected.push(obj);\n        } else {\n            for(let i = 0; i < selected.length; i++) {\n                if(selected[i].fileId === item.file_id) {\n                    selected.splice(i, 1)\n                }\n            }\n        }\n        this.setState({selected: selected});\n        this.props.setSelected(selected)\n    };\n\n    // selectAll = () => {\n    //     this.state.files.forEach(item => {\n    //         item.isSelect = !item.isSelect;\n    //         if(item.isSelect){\n    //             const obj = {\n    //                 name: item.name,\n    //                 file: item.path,\n    //                 filename: item.name,\n    //                 is_image: item.is_image,\n    //                 fileId: item.file_id\n    //             };\n    //             selected.push(obj);\n    //         }\n    //     })\n    //     this.setState({selected: selected});\n    //     this.props.setSelected(selected)\n    // }\n    \n    render() {\n        return (\n            <>\n            {this.state.files.map((file => {\n                return (\n                    <div className={file.isSelected ? styles.selected : styles.normal} onClick={() => {\n                        this.selectItem(file)\n                    }}>\n                        <div className=\"flex flex-row items-center\">\n                            {file.isSelect ? (\n                                <>\n                                <svg class=\"ml-2 w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                </>\n                            ) : (\n                                <>\n                                <svg class=\"ml-2\" width=\"1.5rem\" height=\"1.5rem\">\n                                    <circle cx=\"0.7rem\" cy=\"0.7rem\" r=\"0.50rem\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" />\n                                </svg>\n                                </>\n                            )}\n                            <a className=\"flex-auto cursor-pointer \">\n                                <div className=\"p-3 space-y-4\">\n                                    <div className=\"flex flex-row items-center space-x-2\">\n                                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"></path></svg>\n                                        <strong className=\"flex-grow text-sm font-normal\">{file.name}</strong>\n                                    </div>\n                                </div>\n                            </a>\n\n                        </div>\n                    </div>\n            )\n            }))}\n            \n            </>\n        )\n    }\n}\n\nconst styles = {\n    selected: \"border border-cornblue-400 rounded-md shadow-md bg-cornblue-200 text-white\",\n    normal: \"border border-gray-400 rounded-md shadow-md hover:border-cornblue-400 hover:bg-cornblue-200 hover:text-white\"\n}\n\nexport default SelecingFiles;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/profile.js",["205","206"],"import Axios from 'axios';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Profile extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {},\n            updatedUser: {},\n            avatar: {},\n            totalFiles: 0,\n            totalFolders: 0,\n            totalFriends: 0,\n            progress: 0,\n            space: 0,\n        }\n    }\n\n    componentDidMount() {\n        const token = JSON.parse(localStorage.getItem('tokens'));\n\n        Axios({method: 'GET', url: `http://${process.env.REACT_APP_HOST_IP}:3030/myprofile/${token.id}`})\n            .then(res => {\n                if(res.status === 200) {\n                    this.setState({\n                        user: res.data.user,\n                        updatedUser: res.data.user,\n                        totalFiles: res.data.files,\n                        totalFolders: res.data.folders,\n                        totalFriends: res.data.friends,\n                        hovered: false\n                    });\n                }\n            }).catch(e => console.log(e));\n\n        Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/directorySize/${token.id}`)\n            .then(res => {\n              if(res.status === 200) {\n                var percentage = res.data.totalSizeBytes\n                this.setState({\n                    progress: percentage,\n                    space: res.data.totalSize\n                })\n              }\n            })\n    }\n\n    UpdatingUser = (user) => {\n        const data = {\n            firstname: user.firstname,\n            lastname: user.lastname,\n            email: user.email\n        }\n\n        axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/updateuser/${user.id}`, data)\n            .then(res => {\n                if(res.status === 200) {\n                    this.props.setIsUpdating(false);\n                    window.location.reload();\n                }\n            })\n\n    }\n\n    UpdatingUserPic = (user) => {\n        console.log('pok');\n    }\n\n    handleEvent = () => {\n        var input = document.getElementById('upload');\n        input.click();\n    }\n\n    handleChange = async (e) => {\n        const data  = new FormData();\n        data.append('file', e.target.files[0]);\n\n        const token = JSON.parse(localStorage.getItem('tokens'));\n\n        Axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/uploadPic/${token.id}`, data, {\n            onUploadProgress: (ProgressEvent) => {\n                console.log(ProgressEvent.loaded);\n            }\n        })\n        .then((res) => {\n            if(res.status === 200) {\n                const data = {\n                    ...token,\n                    profile_pic: res.data.profile_pic\n                }\n                localStorage.setItem('tokens', JSON.stringify(data))\n                window.location.reload();\n            } else {\n                console.log(res.data);\n            }\n        })\n    }\n\n    render() {\n        return (\n            <>\n            <div className=\"flex flex-col w-2/3 2xl:h-1/2 bg-gray-100 rounded-2xl shadow-xl\">\n               <div className=\"flex flex-row justify-center 2xl:justify-between py-4 px-16\">\n                    <div className=\"absolute 2xl:relative hidden 2xl:flex flex-row justify-between px-6 py-2 w-72 h-16\">\n                        <div className=\"flex flex-col items-center\">\n                            <p className=\"font-medium\">{this.state.totalFiles}</p>\n                            <p className=\"font-light\">Files</p>\n                        </div>\n                        <div className=\"flex flex-col items-center\">\n                            <p className=\"font-medium\">{this.state.totalFolders}</p>\n                            <p className=\"font-light\">Folders</p>\n                        </div>\n                        <div className=\"flex flex-col items-center\">\n                            <p className=\"font-medium\">{this.state.totalFriends}</p>\n                            <p className=\"font-light\">Friends</p>\n                        </div>\n                    </div>\n                    <div onClick={this.handleEvent} id=\"div\" onMouseEnter={()=> this.setState({hovered: true})} onMouseLeave={()=> this.setState({hovered: false})} className='-mt-24 flex cursor-pointer rounded-full h-40 w-40 hover:bg-gray-200 justify-center items-center focus:outline-none shadow-2xl'>\n                        {this.state.hovered && (\n                            <svg class=\"w-10 h-10 absolute\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"></path></svg>\n                        )}\n                        <input type=\"file\" id=\"upload\" onChange={(e) => this.handleChange(e)} accept=\"image/*\" hidden=\"true\" />\n                        {this.state.user.profile_pic != null && <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + this.state.user.profile_pic} className=\"absolute object-cover w-40 h-40 rounded-full hover:opacity-30\" />}\n                        {this.state.user.profile_pic == null && <svg id=\"svgProfile\" class=\"w-40 h-40 text-gray-900 stroke-1 hover:opacity-10\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>}\n                    </div>\n                    <div className=\"absolute 2xl:relative hidden 2xl:flex flex-row w-72 h-10 py-2\">\n                        <div className=\"w-full\">\n                                <div className=\"flex mb-2 items-center justify-between\">\n                                    <div>\n                                        <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-cornblue-600 bg-cornblue-200\">\n                                            Available Space\n                                        </span>\n                                    </div>\n                                    <div className=\"flex flex-row items-center space-x-2 text-right\">\n                                        <span className=\"text-xs font-bold inline-block text-cornblue-400\">\n                                            { this.state.progress > 0 && this.state.space + '/5.0 GB' }\n                                        </span>\n                                    </div>\n                                </div>\n                                <div className=\"overflow-hidden h-2 text-xs flex rounded bg-cornblue-200\">\n                                    <div style={{ width: this.state.progress + '%' }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-cornblue-600\"></div>\n                                </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mt-14 flex flex-col flex-auto items-center space-y-10 pb-8\">\n                    <>\n                        {this.props.isUpdating ? (\n                            <div className=\"mt-12 flex flex-col 2xl:w-1/2 w-2/3\">\n                                <input className=\"h-10 border-t border-l border-r border-gray-400 rounded-t-lg p-2\" value={this.state.updatedUser.firstname} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser, firstname: e.target.value}})} type=\"text\" placeholder=\"Firstname...\"/>\n                                <input className=\"h-10 border border-gray-400 p-2\" type=\"text\" value={this.state.updatedUser.lastname} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser, lastname: e.target.value}})} placeholder=\"Lastname...\"/>\n                                <input className=\"h-10 border-b border-l border-r border-gray-400 rounded-b-lg p-2\" value={this.state.updatedUser.email} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser, email: e.target.value}})} type=\"text\" placeholder=\"Email...\"/>\n                            </div>\n                        ) : (\n                            <>\n                            <h1 className=\"font-bold text-2xl\">{this.state.user.firstname} {this.state.user.lastname}</h1>\n                            <h2 className=\"text-lg font-medium\"><span className=\"text-gray-500\">@</span> {this.state.user.email}</h2>\n                            </>\n                        )}\n                    </>\n                    <div className=\"2xl:absolute 2xl:hidden flex flex-col w-3/4 space-y-10\">\n                        <div className=\"flex flex-row flex-auto justify-center space-x-8\">\n                            <div className=\"flex flex-col items-center\">\n                                <p className=\"font-medium\">{this.state.totalFiles}</p>\n                                <p className=\"font-light\">Files</p>\n                            </div>\n                            <div className=\"flex flex-col items-center\">\n                                <p className=\"font-medium\">{this.state.totalFolders}</p>\n                                <p className=\"font-light\">Folders</p>\n                            </div>\n                            <div className=\"flex flex-col items-center\">\n                                <p className=\"font-medium\">{this.state.totalFriends}</p>\n                                <p className=\"font-light\">Friends</p>\n                            </div>\n                        </div>\n                        <div className=\"flex justify-center\">\n                            <div className=\"w-full\">\n                                    <div className=\"flex mb-2 items-center justify-between\">\n                                        <div>\n                                            <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-cornblue-600 bg-cornblue-200\">\n                                                Available Space\n                                            </span>\n                                        </div>\n                                        <div className=\"flex flex-row items-center space-x-2 text-right\">\n                                            <span className=\"text-xs font-bold inline-block text-cornblue-400\">\n                                                { this.state.progress > 0 && this.state.space + '/5.0 GB' }\n                                            </span>\n                                        </div>\n                                    </div>\n                                    <div className=\"overflow-hidden h-2 text-xs flex rounded bg-cornblue-200\">\n                                        <div style={{ width: this.state.progress + '%' }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-cornblue-600\"></div>\n                                    </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"p-6 h-24\">\n                    <div className=\"flex items-center justify-center border-t-2\">\n                        {this.props.isUpdating ? (\n                            <div className=\"mt-4 flex 2xl:flex-row flex-row space-x-4 \">\n                                <button className=\"bg-cornblue-200 text-cornblue-400 w-32 h-10 rounded-md outline-none\" onClick={() => this.props.setIsUpdating(!this.props.isUpdating)}>Cancel</button>\n                                <button className=\"bg-cornblue-400 text-cornblue-200 w-32 h-10 rounded-md outline-none\" onClick={() => this.UpdatingUser(this.state.updatedUser)}>Update Profile</button>\n                            </div>\n                        ) : (\n                            <button className=\"mt-5 font-medium text-cornblue-400 outline-none\" onClick={() => this.props.setIsUpdating(!this.props.isUpdating)}>Edit profile</button>\n                        )}\n                    </div>\n                </div>\n            </div>\n                {/* <div className='flex flex-col space-y-16 items-center p-6'>\n                    <div onClick={this.handleEvent} id=\"div\" onMouseEnter={()=> this.setState({hovered: true})} onMouseLeave={()=> this.setState({hovered: false})} className='flex cursor-pointer rounded-full h-32 w-32 hover:bg-gray-200 justify-center items-center focus:outline-none'>\n                        {this.state.hovered && (\n                            <svg class=\"w-10 h-10 absolute\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"></path></svg>\n                        )}\n                        <input type=\"file\" id=\"upload\" onChange={(e) => this.handleChange(e)} accept=\"image/*\" hidden=\"true\" />\n                        {this.state.user.profile_pic != null && <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + this.state.user.profile_pic} className=\"absolute object-cover w-32 h-32 rounded-full hover:opacity-10\" />}\n                        {this.state.user.profile_pic == null && <svg id=\"svgProfile\" class=\"w-32 h-32 text-gray-900 stroke-1 hover:opacity-10\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>}\n                    </div>\n                    <div className=\"flex flex-col items-center space-y-8\">\n                        <div className=\"flex flex-col items-center space-y-2\">\n                            {!this.props.isUpdating ? (\n                                <>\n                                <div className='flex flex-row space-x-1'>\n                                    <p>name: </p>\n                                    <p>{this.state.user.firstname}</p>\n                                    <p>{this.state.user.lastname}</p>\n                                </div>\n                                <p>email: {this.state.user.email}</p>\n                                </>\n                            ): (\n                                <div className='flex flex-col space-y-2'>\n                                    <input type=\"text\" value={this.state.updatedUser.firstname} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser, firstname: e.target.value}})} className={styles.input} />\n                                    <input type=\"text\" value={this.state.updatedUser.lastname} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser ,lastname: e.target.value}})} className={styles.input} />\n                                    <input type=\"email\" value={this.state.updatedUser.email} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser , email: e.target.value}})} className={styles.input} />\n                                </div>\n                            )}\n                        </div>\n                        {this.props.isUpdating ? (\n                            <button type=\"button\" onClick={() => this.UpdatingUser(this.state.updatedUser)} className=\"w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Update profile\n                            </button> \n                        ): (\n                            <button type=\"button\" onClick={() => this.props.setIsUpdating(!this.props.isUpdating)} className=\"w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Update profile\n                            </button> \n                        )}\n                        {this.props.isUpdating && (\n                            <button type=\"button\" onClick={() => this.props.setIsUpdating(!this.props.isUpdating)} className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Cancel\n                            </button>\n                        )}\n                    </div>\n                </div> */}\n            </>\n        )\n    }\n}\n\nconst styles = {\n    input: \"w-64 h-8 p-2 focus:ring-blue-500 focus:border-blue-500 border border-blue-500 sm:text-sm rounded-md shadow-xl\"\n}\n\nexport default Profile;","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/ChatPage.js",["207","208","209"],"import React, {useState, useEffect, useRef} from 'react';\nimport axios from 'axios';\nimport {socket} from '../App';\n\n\nexport const ChatPage = ({friendId, chatId}) => {\n\n\n    const [inputMessage, setInputMessage] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const token = JSON.parse(localStorage.getItem('tokens'));\n    const messageEl = useRef(null);\n\n    useEffect(()=> {\n\n        if(chatId != null) {\n            axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/getMessages/${chatId}`)\n                .then(response => {\n                    if (response.status === 200) {\n                        setMessages(response.data);\n                    }\n                })\n        }\n        \n    }, [chatId]);\n\n    useEffect(()=> {\n        axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/chats/seenmessages/${chatId}/${token.id}`)\n            .then(response => {\n                if(response.status === 200) {\n\n                }\n            })\n    }, [chatId]);\n    \n    useEffect(() => { \n        socket.on('message', message => {\n            setMessages(messages => [ ...messages, message ]);\n          });\n\n        if(messageEl) {\n          messageEl.current.addEventListener('DOMNodeInserted', event => {\n            const { currentTarget: target } = event;\n            target.scroll({ top: target.scrollHeight, behavior: 'smooth' });\n          });\n        }\n      }, [])\n\n    function sendMessage(e) {\n        e.preventDefault();\n        if(inputMessage != \"\") {\n            const data = {\n                chatId: chatId,\n                fromUser: token.id,\n                toUser: friendId,\n                message: inputMessage\n            };\n\n            const userId = token.id;\n            socket.emit('sendMessage', {data, chatId, friendId});\n            socket.emit('sendMelding', {userId, friendId});\n            \n            axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/sendmessage`, data)\n                .then(response => {\n                    if(response.status === 200) {\n                        setInputMessage('');\n                    };\n            });\n        };\n    };\n\n    return (\n        <div className=\"justify-between flex flex-col h-full\">\n            <div className=\"flex flex-col p-4 space-y-4 items-start overflow-y-auto\" ref={messageEl}>\n                 {messages.map(message => (\n                     <>\n                     {message.chatId == chatId && (\n                         <div className={message.fromUser === token.id ? style.sender : style.friend}>\n                            {message.message}\n                        </div>\n                     )}\n                    </>\n                ))}\n            </div>          \n            <div class=\"mt-2 border-gray-200 pt-4 mb-1 sm:mb-0\">\n                <form onSubmit={(e)=> sendMessage(e)}>\n                    <div class=\"relative flex flex-row items-center justify-between border p-1 border-black rounded-2xl\">\n                        <input type=\"text\" value={inputMessage} onChange={(e)=> setInputMessage(e.target.value)} placeholder=\"Write Something\" class=\"w-full focus:outline-none h-8 focus:placeholder-gray-400 text-gray-600 placeholder-gray-600 pl-6 py-2\" />\n                        <div class=\"items-center inset-y-0 flex\">\n                            <button>\n                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"></path></svg>\n                            </button>\n                            <button type=\"submit\" onClick={(e)=> sendMessage(e)} class=\"inline-flex items-center justify-center rounded-full h-9 w-9 text-black focus:outline-none\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-send\"><line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line><polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon></svg>\n                            </button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst style = {\n\tsender: \"max-w-lg inline-block px-4 self-end py-2 bg-blue-500 rounded-t-xl rounded-bl-xl text-white\",\n\tfriend: \"max-w-lg inline-block px-4 py-2 bg-gray-200 rounded-t-xl rounded-br-xl\"\n}","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/CircleProgress.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/warningDialog.js",["210"],"import React from 'react';\n\nclass WarningDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n                <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                    <form>\n                    <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                        <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                    </div>\n                    <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n                    <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                        <div className=\"bg-white px-4 pt-5 pb-2 sm:p-1 sm:pt-6 sm:pb-4\">\n                        <div className=\"min-w-0 sm:flex sm:items-start\">\n                            <div className=\"w-full mt-3 text-center sm:mt-0 sm:ml-4 sm:mr-4 sm:text-left\">\n                            <h3 className=\"text-lg leading-6 font-medium text-red-500\" id=\"modal-headline\">\n                                Warning!\n                            </h3>\n                            <div className=\"mt-2\">\n                                <p>{this.props.msg}</p>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                        <div className=\"flex flew-row bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                        <button type=\"submit\" onClick={this.props.closeDialog} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-500 text-base font-medium text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                            Close\n                        </button>\n                        </div>\n                    </div>\n                    </form>\n                </div>\n            </div>\n        )    \n    }\n\n}\n\nexport default WarningDialog","/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/ProgressBar.js",[],"/Users/alexander/Documents/developing/HomeCloud/frontend/src/components/Downloader.js",["211","212"],"import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\n\nconst Downloader = ({ files = [], remove }) => {\n    return (\n        <div className=\"fixed bg-white w-96 min-h-down right-2 bottom-2 max-h-60 overflow-y-auto border rounded-md shadow-xl\">\n            <div>\n                <div className=\"bg-gray-100 p-2\">File Downloader</div>\n                <ul className=\"max-h-48 p-4 overflow-hidden overflow-y-auto\">\n                    {files.map((file, idx) => {\n                        if(file.is_folder) {\n                            return (<DonwloadFolder \n                                key={idx}\n                                removeFile={()=> remove(file.downloadId)}\n                                name={file.name}\n                                folder={file.folder}\n                            />)\n                        } else {\n                            return(<DownloadItem\n                                key={idx}\n                                removeFile={() => remove(file.downloadId)}\n                                {...file}\n                            />)\n                        }\n                    })}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nconst DownloadItem = ({ name, file, filename, removeFile }) => {\n    const CancelToken = Axios.CancelToken;\n    const source = CancelToken.source();\n\n    const [downloadInfo, setDownloadInfo] = useState({\n        progress: 0,\n        completed: false,\n        total: 0,\n        loaded: 0\n    });\n\n    useEffect(() => {\n        const options = {\n            onDownloadProgress: (progressEvent) => {\n                const { loaded, total } = progressEvent;\n\n                setDownloadInfo({\n                    progress: Math.floor((loaded * 100) / total),\n                    loaded,\n                    total,\n                    completed: false,\n                })\n            }\n        }\n\n        Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030` + file, {\n                responseType: \"blob\",\n                ...options,\n                headers: {\n                    'X-Requested-With': 'XMLHttpRequest',\n                    'Access-Control-Allow-Origin': '*'\n                },\n                cancelToken: source.token\n            }).then(function (response) {\n        \n            const url = window.URL.createObjectURL(\n                new Blob([response.data], {\n                type: response.headers[\"content-type\"],\n                })\n            );\n        \n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.setAttribute(\"download\", filename);\n            document.body.appendChild(link);\n            link.click();\n        \n            setDownloadInfo((info) => ({\n                ...info,\n                completed: true,\n            }));\n        \n            setTimeout(() => {\n                removeFile();\n            }, 4000);\n        });\n    }, []);\n\n    return (\n        <li className=\"w-full h-16 border-b \">\n            <div>\n            <div className=\"relative pt-2\">\n                <div className=\"flex mb-2 items-center justify-between\">\n                    <div>\n                        <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-blue-600 bg-blue-200\">\n                            {name}\n                        </span>\n                    </div>\n                    <div className=\"flex flex-row items-center space-x-2 text-right\">\n                        <span className=\"text-xs font-semibold inline-block text-blue-600\">\n                            { downloadInfo.loaded > 0 && downloadInfo.progress + '%'}\n                            { downloadInfo.loaded === 0 && 'Initializing...'}\n                        </span>\n                        <button onClick={async ()=> {\n                            await removeFile()\n                            source.cancel();\n                        }}>\n                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"rgba(37, 99, 235)\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"overflow-hidden h-2 text-xs flex rounded bg-blue-200\">\n                    <div style={{ width: downloadInfo.progress + '%' }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-blue-500\"></div>\n                </div>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nconst DonwloadFolder = ({name, folder, removeFile}) => {\n    const CancelToken = Axios.CancelToken;\n    const source = CancelToken.source();\n\n    const [downloadInfo, setDownloadInfo] = useState({\n        progress: 0,\n        completed: false,\n        total: 0,\n        loaded: 0\n    });\n\n    useEffect(() => {\n        const options = {\n            onDownloadProgress: (progressEvent) => {\n                const { loaded, total } = progressEvent;\n\n                setDownloadInfo({\n                    progress: Math.floor((loaded * 100) / total),\n                    loaded,\n                    total,\n                    completed: false,\n                })\n            }\n        }\n\n        Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/getfolder/` + folder, {\n                responseType: \"blob\",\n                ...options,\n                headers: {\n                    'X-Requested-With': 'XMLHttpRequest',\n                    'Access-Control-Allow-Origin': '*'\n                },\n                cancelToken: source.token\n            }).then(function (response) {\n            console.log(response);\n        \n            const url = window.URL.createObjectURL(\n                new Blob([response.data], {\n                type: response.headers[\"content-type\"],\n                })\n            );\n        \n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.setAttribute(\"download\", name);\n            document.body.appendChild(link);\n            link.click();\n        \n            setDownloadInfo((info) => ({\n                ...info,\n                completed: true,\n            }));\n        \n            setTimeout(() => {\n                removeFile();\n            }, 4000);\n        });\n    }, []);\n\n    return (\n        <li className=\"w-full h-16 border-b \">\n            <div>\n            <div className=\"relative pt-2\">\n                <div className=\"flex mb-2 items-center justify-between\">\n                    <div>\n                        <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-blue-600 bg-blue-200\">\n                            {name}\n                        </span>\n                    </div>\n                    <div className=\"flex flex-row items-center space-x-2 text-right\">\n                        <span className=\"text-xs font-semibold inline-block text-blue-600\">\n                            { downloadInfo.loaded > 0 && downloadInfo.progress + '%'}\n                            { downloadInfo.loaded === 0 && 'Initializing...'}\n                        </span>\n                        <button onClick={async ()=> {\n                            await removeFile()\n                            source.cancel();\n                        }}>\n                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"rgba(37, 99, 235)\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"overflow-hidden h-2 text-xs flex rounded bg-blue-200\">\n                    <div style={{ width: downloadInfo.progress + '%' }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-blue-500\"></div>\n                </div>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nexport default Downloader;",["213","214"],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"215","replacedBy":"219"},{"ruleId":"217","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":106,"column":21,"nodeType":"223","endLine":106,"endColumn":88},{"ruleId":"224","severity":1,"message":"225","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":16},{"ruleId":"224","severity":1,"message":"228","line":21,"column":26,"nodeType":"226","messageId":"227","endLine":21,"endColumn":40},{"ruleId":"229","severity":1,"message":"230","line":44,"column":8,"nodeType":"231","endLine":44,"endColumn":10,"suggestions":"232"},{"ruleId":"221","severity":1,"message":"233","line":99,"column":45,"nodeType":"223","endLine":99,"endColumn":163},{"ruleId":"234","severity":1,"message":"235","line":140,"column":58,"nodeType":"223","endLine":140,"endColumn":111},{"ruleId":"224","severity":1,"message":"236","line":14,"column":12,"nodeType":"226","messageId":"227","endLine":14,"endColumn":25},{"ruleId":"224","severity":1,"message":"237","line":15,"column":12,"nodeType":"226","messageId":"227","endLine":15,"endColumn":23},{"ruleId":"224","severity":1,"message":"238","line":18,"column":12,"nodeType":"226","messageId":"227","endLine":18,"endColumn":27},{"ruleId":"224","severity":1,"message":"239","line":19,"column":12,"nodeType":"226","messageId":"227","endLine":19,"endColumn":32},{"ruleId":"224","severity":1,"message":"240","line":20,"column":12,"nodeType":"226","messageId":"227","endLine":20,"endColumn":28},{"ruleId":"229","severity":1,"message":"230","line":62,"column":8,"nodeType":"231","endLine":62,"endColumn":16,"suggestions":"241"},{"ruleId":"229","severity":1,"message":"242","line":74,"column":8,"nodeType":"231","endLine":74,"endColumn":10,"suggestions":"243"},{"ruleId":"224","severity":1,"message":"244","line":76,"column":14,"nodeType":"226","messageId":"227","endLine":76,"endColumn":26},{"ruleId":"224","severity":1,"message":"245","line":108,"column":14,"nodeType":"226","messageId":"227","endLine":108,"endColumn":33},{"ruleId":"246","severity":1,"message":"247","line":168,"column":32,"nodeType":"248","messageId":"249","endLine":168,"endColumn":34},{"ruleId":"246","severity":1,"message":"247","line":168,"column":47,"nodeType":"248","messageId":"249","endLine":168,"endColumn":49},{"ruleId":"246","severity":1,"message":"250","line":168,"column":47,"nodeType":"248","messageId":"249","endLine":168,"endColumn":49},{"ruleId":"246","severity":1,"message":"250","line":168,"column":63,"nodeType":"248","messageId":"249","endLine":168,"endColumn":65},{"ruleId":"221","severity":1,"message":"233","line":196,"column":49,"nodeType":"223","endLine":199,"endColumn":52},{"ruleId":"251","severity":1,"message":"252","line":200,"column":116,"nodeType":"253","messageId":"254","endLine":200,"endColumn":118},{"ruleId":"234","severity":1,"message":"235","line":204,"column":73,"nodeType":"223","endLine":204,"endColumn":207},{"ruleId":"251","severity":1,"message":"252","line":212,"column":91,"nodeType":"253","messageId":"254","endLine":212,"endColumn":93},{"ruleId":"251","severity":1,"message":"252","line":212,"column":136,"nodeType":"253","messageId":"254","endLine":212,"endColumn":138},{"ruleId":"251","severity":1,"message":"252","line":213,"column":89,"nodeType":"253","messageId":"254","endLine":213,"endColumn":91},{"ruleId":"234","severity":1,"message":"235","line":239,"column":65,"nodeType":"223","endLine":239,"endColumn":195},{"ruleId":"234","severity":1,"message":"235","line":313,"column":41,"nodeType":"223","endLine":313,"endColumn":183},{"ruleId":"224","severity":1,"message":"255","line":3,"column":8,"nodeType":"226","messageId":"227","endLine":3,"endColumn":18},{"ruleId":"224","severity":1,"message":"256","line":5,"column":8,"nodeType":"226","messageId":"227","endLine":5,"endColumn":18},{"ruleId":"224","severity":1,"message":"225","line":10,"column":8,"nodeType":"226","messageId":"227","endLine":10,"endColumn":16},{"ruleId":"224","severity":1,"message":"257","line":19,"column":10,"nodeType":"226","messageId":"227","endLine":19,"endColumn":21},{"ruleId":"224","severity":1,"message":"258","line":19,"column":23,"nodeType":"226","messageId":"227","endLine":19,"endColumn":37},{"ruleId":"224","severity":1,"message":"259","line":20,"column":22,"nodeType":"226","messageId":"227","endLine":20,"endColumn":35},{"ruleId":"224","severity":1,"message":"260","line":32,"column":10,"nodeType":"226","messageId":"227","endLine":32,"endColumn":18},{"ruleId":"224","severity":1,"message":"261","line":33,"column":10,"nodeType":"226","messageId":"227","endLine":33,"endColumn":19},{"ruleId":"224","severity":1,"message":"262","line":38,"column":10,"nodeType":"226","messageId":"227","endLine":38,"endColumn":21},{"ruleId":"224","severity":1,"message":"263","line":38,"column":23,"nodeType":"226","messageId":"227","endLine":38,"endColumn":37},{"ruleId":"224","severity":1,"message":"264","line":48,"column":18,"nodeType":"226","messageId":"227","endLine":48,"endColumn":27},{"ruleId":"224","severity":1,"message":"265","line":68,"column":36,"nodeType":"226","messageId":"227","endLine":68,"endColumn":50},{"ruleId":"251","severity":1,"message":"266","line":185,"column":27,"nodeType":"253","messageId":"254","endLine":185,"endColumn":29},{"ruleId":"234","severity":1,"message":"235","line":339,"column":44,"nodeType":"223","endLine":339,"endColumn":93},{"ruleId":"221","severity":1,"message":"233","line":486,"column":37,"nodeType":"223","endLine":486,"endColumn":124},{"ruleId":"234","severity":1,"message":"235","line":491,"column":53,"nodeType":"223","endLine":491,"endColumn":185},{"ruleId":"224","severity":1,"message":"267","line":529,"column":7,"nodeType":"226","messageId":"227","endLine":529,"endColumn":13},{"ruleId":"229","severity":1,"message":"230","line":18,"column":8,"nodeType":"231","endLine":18,"endColumn":10,"suggestions":"268"},{"ruleId":"234","severity":1,"message":"235","line":46,"column":41,"nodeType":"223","endLine":46,"endColumn":175},{"ruleId":"221","severity":1,"message":"233","line":36,"column":29,"nodeType":"223","endLine":38,"endColumn":32},{"ruleId":"221","severity":1,"message":"233","line":82,"column":29,"nodeType":"223","endLine":82,"endColumn":70},{"ruleId":"224","severity":1,"message":"269","line":7,"column":8,"nodeType":"226","messageId":"227","endLine":7,"endColumn":21},{"ruleId":"229","severity":1,"message":"230","line":23,"column":10,"nodeType":"231","endLine":23,"endColumn":12,"suggestions":"270"},{"ruleId":"224","severity":1,"message":"271","line":31,"column":24,"nodeType":"226","messageId":"227","endLine":31,"endColumn":37},{"ruleId":"229","severity":1,"message":"230","line":67,"column":8,"nodeType":"231","endLine":67,"endColumn":10,"suggestions":"272"},{"ruleId":"251","severity":1,"message":"252","line":136,"column":74,"nodeType":"253","messageId":"254","endLine":136,"endColumn":76},{"ruleId":"251","severity":1,"message":"252","line":170,"column":74,"nodeType":"253","messageId":"254","endLine":170,"endColumn":76},{"ruleId":"229","severity":1,"message":"273","line":196,"column":8,"nodeType":"231","endLine":196,"endColumn":34,"suggestions":"274"},{"ruleId":"251","severity":1,"message":"252","line":236,"column":28,"nodeType":"253","messageId":"254","endLine":236,"endColumn":30},{"ruleId":"251","severity":1,"message":"252","line":269,"column":27,"nodeType":"253","messageId":"254","endLine":269,"endColumn":29},{"ruleId":"251","severity":1,"message":"266","line":312,"column":47,"nodeType":"253","messageId":"254","endLine":312,"endColumn":49},{"ruleId":"221","severity":1,"message":"233","line":336,"column":25,"nodeType":"223","endLine":336,"endColumn":185},{"ruleId":"251","severity":1,"message":"266","line":341,"column":51,"nodeType":"253","messageId":"254","endLine":341,"endColumn":53},{"ruleId":"221","severity":1,"message":"233","line":349,"column":25,"nodeType":"223","endLine":353,"endColumn":29},{"ruleId":"221","severity":1,"message":"233","line":362,"column":25,"nodeType":"223","endLine":366,"endColumn":29},{"ruleId":"221","severity":1,"message":"233","line":372,"column":25,"nodeType":"223","endLine":376,"endColumn":29},{"ruleId":"234","severity":1,"message":"235","line":408,"column":55,"nodeType":"223","endLine":408,"endColumn":205},{"ruleId":"234","severity":1,"message":"235","line":413,"column":59,"nodeType":"223","endLine":413,"endColumn":192},{"ruleId":"251","severity":1,"message":"266","line":446,"column":47,"nodeType":"253","messageId":"254","endLine":446,"endColumn":49},{"ruleId":"251","severity":1,"message":"252","line":528,"column":53,"nodeType":"253","messageId":"254","endLine":528,"endColumn":55},{"ruleId":"251","severity":1,"message":"252","line":565,"column":53,"nodeType":"253","messageId":"254","endLine":565,"endColumn":55},{"ruleId":"251","severity":1,"message":"252","line":595,"column":37,"nodeType":"253","messageId":"254","endLine":595,"endColumn":39},{"ruleId":"224","severity":1,"message":"267","line":39,"column":7,"nodeType":"226","messageId":"227","endLine":39,"endColumn":13},{"ruleId":"234","severity":1,"message":"235","line":17,"column":40,"nodeType":"223","endLine":17,"endColumn":95},{"ruleId":"251","severity":1,"message":"266","line":19,"column":40,"nodeType":"253","messageId":"254","endLine":19,"endColumn":42},{"ruleId":"221","severity":1,"message":"233","line":97,"column":29,"nodeType":"223","endLine":97,"endColumn":70},{"ruleId":"234","severity":1,"message":"235","line":125,"column":65,"nodeType":"223","endLine":125,"endColumn":234},{"ruleId":"224","severity":1,"message":"267","line":261,"column":7,"nodeType":"226","messageId":"227","endLine":261,"endColumn":13},{"ruleId":"229","severity":1,"message":"230","line":34,"column":8,"nodeType":"231","endLine":34,"endColumn":16,"suggestions":"275"},{"ruleId":"251","severity":1,"message":"266","line":51,"column":25,"nodeType":"253","messageId":"254","endLine":51,"endColumn":27},{"ruleId":"251","severity":1,"message":"252","line":77,"column":38,"nodeType":"253","messageId":"254","endLine":77,"endColumn":40},{"ruleId":"276","severity":1,"message":"277","line":5,"column":5,"nodeType":"278","messageId":"279","endLine":7,"endColumn":6},{"ruleId":"229","severity":1,"message":"280","line":88,"column":8,"nodeType":"231","endLine":88,"endColumn":10,"suggestions":"281"},{"ruleId":"229","severity":1,"message":"282","line":179,"column":8,"nodeType":"231","endLine":179,"endColumn":10,"suggestions":"283"},{"ruleId":"215","replacedBy":"284"},{"ruleId":"217","replacedBy":"285"},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],["286"],["287"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'FileShow' is defined but never used.","Identifier","unusedVar","'donwloadfolder' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token.id'. Either include it or remove the dependency array.","ArrayExpression",["288"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'showSearchBar' is assigned a value but never used.","'searchValue' is assigned a value but never used.","'usersRequesting' is assigned a value but never used.","'usersRequestingTotal' is assigned a value but never used.","'showModalRequest' is assigned a value but never used.",["289"],"React Hook useEffect has missing dependencies: 'isStatic' and 'token.id'. Either include them or remove the dependency array.",["290"],"'handleChange' is defined but never used.","'handleUpdateRequest' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Transition' is defined but never used.","'FolderList' is defined but never used.","'showFolders' is assigned a value but never used.","'setShowFolders' is assigned a value but never used.","'setFoldername' is assigned a value but never used.","'progress' is assigned a value but never used.","'usedSpace' is assigned a value but never used.","'showSuccess' is assigned a value but never used.","'setShowSuccess' is assigned a value but never used.","'setFolder' is assigned a value but never used.","'downloadfolder' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'styles' is assigned a value but never used.",["291"],"'WarningDialog' is defined but never used.",["292"],"'setFolderName' is assigned a value but never used.",["293"],"React Hook useEffect has missing dependencies: 'counter', 'fileSize', and 'fileUpload'. Either include them or remove the dependency array.",["294"],["295"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","React Hook useEffect has missing dependencies: 'file', 'filename', 'removeFile', and 'source.token'. Either include them or remove the dependency array. If 'removeFile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["296"],"React Hook useEffect has missing dependencies: 'folder', 'name', 'removeFile', and 'source.token'. Either include them or remove the dependency array. If 'removeFile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["297"],["286"],["287"],"no-global-assign","no-unsafe-negation",{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"298","fix":"304"},{"desc":"298","fix":"305"},{"desc":"298","fix":"306"},{"desc":"307","fix":"308"},{"desc":"300","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},"Update the dependencies array to be: [token.id]",{"range":"314","text":"315"},"Update the dependencies array to be: [chatId, token.id]",{"range":"316","text":"317"},"Update the dependencies array to be: [isStatic, token.id]",{"range":"318","text":"319"},{"range":"320","text":"315"},{"range":"321","text":"315"},{"range":"322","text":"315"},"Update the dependencies array to be: [counter, fileSize, fileToBeUpload, fileUpload, progress]",{"range":"323","text":"324"},{"range":"325","text":"317"},"Update the dependencies array to be: [file, filename, removeFile, source.token]",{"range":"326","text":"327"},"Update the dependencies array to be: [folder, name, removeFile, source.token]",{"range":"328","text":"329"},[1399,1401],"[token.id]",[2373,2381],"[chatId, token.id]",[2777,2779],"[isStatic, token.id]",[567,569],[751,753],[2765,2767],[7032,7058],"[counter, fileSize, fileToBeUpload, fileUpload, progress]",[991,999],[2944,2946],"[file, filename, removeFile, source.token]",[6454,6456],"[folder, name, removeFile, source.token]"]