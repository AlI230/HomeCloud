[{"/Volumes/Seagate/developing/HomeCloud/frontend/src/index.js":"1","/Volumes/Seagate/developing/HomeCloud/frontend/src/App.js":"2","/Volumes/Seagate/developing/HomeCloud/frontend/src/reportWebVitals.js":"3","/Volumes/Seagate/developing/HomeCloud/frontend/src/PrivateRoute.js":"4","/Volumes/Seagate/developing/HomeCloud/frontend/src/pages/collection.js":"5","/Volumes/Seagate/developing/HomeCloud/frontend/src/pages/home.js":"6","/Volumes/Seagate/developing/HomeCloud/frontend/src/context/auth.js":"7","/Volumes/Seagate/developing/HomeCloud/frontend/src/pages/register.js":"8","/Volumes/Seagate/developing/HomeCloud/frontend/src/pages/login.js":"9","/Volumes/Seagate/developing/HomeCloud/frontend/src/pages/myProfile.js":"10","/Volumes/Seagate/developing/HomeCloud/frontend/src/pages/shared.js":"11","/Volumes/Seagate/developing/HomeCloud/frontend/src/pages/friendsPage.js":"12","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/transition.js":"13","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/NavBar.js":"14","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/files.js":"15","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/FileShow.js":"16","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/ProgressBar.js":"17","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/SelectingFiles.js":"18","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/folders.js":"19","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/profile.js":"20","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/ChatPage.js":"21","/Volumes/Seagate/developing/HomeCloud/frontend/src/hooks/useFileDownloader.js":"22","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/CircleProgress.js":"23","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/Downloader.js":"24","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/warningDialog.js":"25"},{"size":500,"mtime":1607774771750,"results":"26","hashOfConfig":"27"},{"size":1766,"mtime":1612211457400,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1607685016440,"results":"29","hashOfConfig":"27"},{"size":447,"mtime":1607857477500,"results":"30","hashOfConfig":"27"},{"size":25606,"mtime":1613819214700,"results":"31","hashOfConfig":"27"},{"size":762,"mtime":1608281912050,"results":"32","hashOfConfig":"27"},{"size":162,"mtime":1607855858330,"results":"33","hashOfConfig":"27"},{"size":4209,"mtime":1613573563840,"results":"34","hashOfConfig":"27"},{"size":4402,"mtime":1613573552790,"results":"35","hashOfConfig":"27"},{"size":687,"mtime":1610039186640,"results":"36","hashOfConfig":"27"},{"size":4487,"mtime":1613054625190,"results":"37","hashOfConfig":"27"},{"size":26331,"mtime":1611854332960,"results":"38","hashOfConfig":"27"},{"size":3064,"mtime":1607787462800,"results":"39","hashOfConfig":"27"},{"size":32957,"mtime":1613822382600,"results":"40","hashOfConfig":"27"},{"size":3963,"mtime":1610439649170,"results":"41","hashOfConfig":"27"},{"size":2084,"mtime":1613054029880,"results":"42","hashOfConfig":"27"},{"size":1682,"mtime":1610306073960,"results":"43","hashOfConfig":"27"},{"size":4541,"mtime":1610442836580,"results":"44","hashOfConfig":"27"},{"size":1705,"mtime":1610006107590,"results":"45","hashOfConfig":"27"},{"size":7302,"mtime":1610481015660,"results":"46","hashOfConfig":"27"},{"size":4165,"mtime":1611417202470,"results":"47","hashOfConfig":"27"},{"size":835,"mtime":1609696721160,"results":"48","hashOfConfig":"27"},{"size":1714,"mtime":1610398382870,"results":"49","hashOfConfig":"27"},{"size":8230,"mtime":1609937961640,"results":"50","hashOfConfig":"27"},{"size":2355,"mtime":1610396895330,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1cmk41d",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},"/Volumes/Seagate/developing/HomeCloud/frontend/src/index.js",[],["114","115"],"/Volumes/Seagate/developing/HomeCloud/frontend/src/App.js",[],"/Volumes/Seagate/developing/HomeCloud/frontend/src/reportWebVitals.js",[],"/Volumes/Seagate/developing/HomeCloud/frontend/src/PrivateRoute.js",[],"/Volumes/Seagate/developing/HomeCloud/frontend/src/pages/collection.js",["116","117","118","119","120","121","122","123","124","125"],"/Volumes/Seagate/developing/HomeCloud/frontend/src/pages/home.js",[],"/Volumes/Seagate/developing/HomeCloud/frontend/src/context/auth.js",[],"/Volumes/Seagate/developing/HomeCloud/frontend/src/pages/register.js",["126"],"import '../index.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../context/auth';\nimport { Redirect } from 'react-router-dom'\n\nfunction Register() {\n\n  const [ isLoggedIn, setLoggedIn ] = useState(false);\n  const [ isError, setIsError ] = useState(false); \n  const [ emailUser, setEmail ] = useState(\"\"); \n  const [ password, setPassword ] = useState(\"\");\n  const [ firstname, setFirstname ] = useState(\"\");\n  const [ lastname, setLastname ] = useState(\"\");\n  const { setAuthTokens } = useAuth();\n\n  function postRegister() {\n    console.log('logging in');\n    axios({method: \"POST\", url:`http://${process.env.REACT_APP_HOST_IP}:3030/register`, data: {\n      email: emailUser,\n      password: password,\n      firstname: firstname,\n      lastname: lastname\n    }}).then(result => {\n      if(result.status === 200) {\n        console.log(result.data);\n        setAuthTokens({\n          email: result.data.email,\n          id: result.data.id,\n          profile_pic: result.data.profile_pic,\n          name: result.data.name,\n        });\n        setLoggedIn(true)\n      } else {\n        setIsError(true)\n      }\n    }).catch(e => {\n      setIsError(true);\n    });\n  }\n\n  if(isLoggedIn) {\n    return <Redirect to=\"/\" />\n  }\n\n    return (\n        <div class=\"fixed z-10 inset-0 overflow-y-auto shadow-2xl bg-gray-100\">\n          <div class=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n            <form>\n              <span class=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n              <div class=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-md sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                <div class=\"w-full bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                  <div class=\"min-w-0 sm:flex sm:items-start\">\n                    <div class=\"w-full mt-3 text-center sm:mt-0 sm:ml-1 sm:text-left\">\n                      <h3 class=\"text-2xl leading-1 font-medium text-blue-500\" id=\"modal-headline\">\n                        Register\n                      </h3>\n                      <div class=\"w-full mt-4 flex flex-col space-y-4\">\n                      { isError &&<p>The email is already taken or required everything!</p> }\n                        <input type=\"text\" value={firstname} onChange={ (e) => setFirstname(e.target.value) } placeholder=\"Firstname...\" class=\"h-8 p-2 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border border-blue-500 rounded-md\"/>\n                        <input type=\"text\" value={lastname} onChange={ (e) => setLastname(e.target.value) } placeholder=\"Lastname...\" class=\"h-8 p-2 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border border-blue-500 rounded-md\"/>\n                        <input type=\"text\" value={emailUser} onChange={ (e) => setEmail(e.target.value) } placeholder=\"Email...\" class=\"h-8 p-2 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border border-blue-500 rounded-md\"/>\n                        <input type=\"password\" value={password} onChange={ (e) => setPassword(e.target.value) } placeholder=\"Password...\" class=\"h-8 p-2 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border border-blue-500 rounded-md\"/>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                  <a>\n                  <button type=\"button\" onClick={postRegister} class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                    Register\n                  </button>\n                  </a>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n    )\n}\n\nexport default Register;\n","/Volumes/Seagate/developing/HomeCloud/frontend/src/pages/login.js",[],"/Volumes/Seagate/developing/HomeCloud/frontend/src/pages/myProfile.js",[],"/Volumes/Seagate/developing/HomeCloud/frontend/src/pages/shared.js",["127","128","129"],"import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../components/NavBar';\nimport FileShow from '../components/FileShow';\nimport useFileDownloader from '../hooks/useFileDownloader';\n\nfunction SharedPage() {\n\n    const token = JSON.parse(localStorage.getItem('tokens'));\n    const [files, setFiles] = useState([]);\n    const [selected, setSelected] = useState({\n        name: null,\n        file: null,\n        filename: null,\n        is_image: false,\n      });\n    const [fileshow, setFileshow] = useState(false);\n\n    const [downloadFile, donwloadfolder,downloaderComponent] = useFileDownloader();\n\n    const download = (file) => downloadFile(file);\n\n\n    function  downloadFunction(name, path, filename, is_image) {\n        const fileDown = {\n        name: name,\n        file: path,\n        filename: filename,\n        is_image: is_image\n        };\n\n        download(fileDown)\n    }\n\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/files/getshared/${token.id}`)\n            .then((response) => {\n                if(response.status === 200) {\n                    setFiles(response.data);\n                }\n            })\n    }, []);\n\n    function fileShowing(filePath, fileName, is_image, fileId) {\n        setFileshow(!fileshow);\n        setSelected({\n          name: fileName,\n          file: filePath,\n          is_image: is_image,\n          fileId: fileId\n        })\n      }\n\n    return (\n        <div className='flex flex-row h-screen bg-gray-100'>\n            <Navbar />\n            <div className='flex flex-row flex-auto space-y-4 bg-white rounded-tl-xl rounded-bl-xl border-l border-r border-gray-400 shadow-xl'>\n                <div className=\"w-full flex flex-col p-4\">\n                    <div className=\"flex-none h-16 flex flex-row justify-between items-center border-b\">\n                        <h1 className=\"font-bold\">Shared File(s)</h1>\n                    </div>\n                    <div className=\"flex-auto overflow-y-auto\">\n                        {files.length > 0 && (\n                         <>\n                         {files.map(file => (\n                            <div className=\"border-b\" >\n                                <div className=\"flex flex-row items-center border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100\">\n                                    <a className=\"flex-auto cursor-pointer\" onClick={()=> fileShowing(file.path, file.name, file.is_image, file.file_id)}>\n                                        <div className=\"p-3 space-y-4\">\n                                            <div className=\"flex flex-row items-center space-x-2\">\n                                                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"></path></svg>\n                                                <strong className=\"text-sm font-normal\">{file.name}</strong>\n                                                <p className=\"text-xs font-light\">(By {file.firstname} {file.lastname})</p>\n                                            </div>\n                                        </div>\n                                    </a>\n                                    <div className=\"flex-none flex flex-row space-x-2 mr-2\">\n                                        <button onClick={() => downloadFunction(file.name, file.path, file.name, file.is_image)}>\n                                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path></svg>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                         ))}\n                         </>   \n                        )}\n                    </div>\n                </div>\n                {fileshow ? (     \n                    <FileShow setFileshow={setFileshow} file={selected}/>\n                ) : null}\n                {downloaderComponent}\n            </div>\n        </div>\n    )\n} \n\nexport default SharedPage;","/Volumes/Seagate/developing/HomeCloud/frontend/src/pages/friendsPage.js",["130","131","132","133","134","135","136","137","138","139","140"],"import React, {useState, useEffect} from 'react';\nimport Navbar from '../components/NavBar';\nimport '../index.css';\nimport Transition from '../components/transition';\nimport axios from 'axios';\nimport { ChatPage } from '../components/ChatPage';\nimport {socket} from '../App';\n\nfunction FriendsPage() {\n\n    const [showFriends, setShowFriends] = useState(true);\n    const [friends, setFriends] = useState(null);\n    const [showSearchBar, setShowSearchBar] = useState(false);\n    const [searchValue, setSearchValue] = useState(\"\");\n    const [searchedUsers, setSearchedUsers] = useState(null);\n    const [searhed, setSearched] = useState(false);\n    const [usersRequesting, setUsersRequesting] = useState(null);\n    const [usersRequestingTotal, setUsersRequestingTotal] = useState(0);\n    const [showModalRequest, setShowModalRequest] = useState(false);\n    const [selectedFriend, setSelectedFriend] = useState(null);\n    const [chatId, setChatId] = useState(null);\n    const [latestMessages, setLatestMessages] = useState([]);\n    const [showFriendInfo, setShowFriendInfo] = useState(false);\n\n    const token = JSON.parse(localStorage.getItem('tokens'));\n\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/users/friendrequests/${token.id}`)\n            .then((response) => {\n                if (response.status === 200) {\n                    setUsersRequesting(response.data);\n                    setUsersRequestingTotal(response.data.length)\n                }\n            })\n\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/users/friends/${token.id}`)\n            .then(response => {\n                if(response.status === 200) {\n                    setFriends(response.data);\n                    setSelectedFriend(null)\n                }\n            })\n    }, [token.id]);\n\n    // friend Page\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/getlatestmessages/${token.id}`)\n            .then(response => {\n                if(response.status === 200) {\n                    setLatestMessages(response.data);\n                }\n            })\n    }, [chatId]) // not sure yet\n\n    useEffect(() => {\n        socket.on('latest', () => {\n            axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/getlatestmessages/${token.id}`)\n            .then(response => {\n                if(response.status === 200) {\n                    setLatestMessages(response.data);\n                }\n            })\n        })\n    }, [])\n\n    function handleChange(e) {\n        setSearchValue(e.target.value);\n\n        if(e.target.value !== \"\") {\n            axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/users/search/${token.id}/${e.target.value}`)\n            .then((response) => {\n                if (response.status === 200) {\n                    setSearchedUsers(response.data);\n                    setSearched(true)\n                }\n            })\n        } else {\n            setSearched(false)\n        }\n    }\n\n    function sendFriendRequest(friendId) {\n        const data = {\n            userId: token.id,\n            friendId: friendId,\n        }\n\n        axios({method: 'POST', url:`http://${process.env.REACT_APP_HOST_IP}:3030/users/addFriend`, data:data})\n        .then((res) => {\n            if(res.status === 200) {\n                setShowSearchBar(false)\n                setSearched(false)\n                setSearchValue('')\n            }\n        })\n    }\n\n    function handleUpdateRequest(e, status, FriendsId) {\n        e.preventDefault()\n        let data;\n        if(status === \"accept\") {\n            data = {Status: 1}\n        } else {\n            data = {Status: 2}\n        }\n        axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/users/updateRequest/${FriendsId}`, data)\n            .then(response => {\n                if(response.status === 200) {\n                    setShowModalRequest(false);\n                    window.location.reload();\n                }\n            })\n    }\n\n    // function handleRemoveFriend(e, FriendsId) {\n    //     axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/users/deleteFriend/${FriendsId}`)\n    //         .then((response) => {\n    //             if(response.status === 200) {\n    //                 window.location.reload();\n    //             }\n    //         })\n    // }\n\n    function handleChat(friend) {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/getchat/${token.id}/${friend.id}`)\n            .then(response => {\n\n            if(response.status === 200) {\n                setChatId(response.data.chatId)\n\n                let chatId = response.data.chatId\n                let userId = token.id\n\n                socket.emit('joinchat', {chatId, userId})\n            } else if(response.status === 201) {\n    \n                const data = {\n                    userOne: token.id,\n                    userTwo: friend.id\n                }\n    \n                axios.post('http://localhost:3030/chat/makechat', data)\n                    .then(response => {\n                        if(response.status === 200) {\n                            setChatId(response.data.insertId)\n                            socket.emit('joinchat', response.data.insertId)\n                        }\n                })\n            }\n        })\n    }\n\n    return (\n        <div className='flex flex-row h-screen bg-gray-100'>\n            <Navbar />\n\n            <Transition\n                show={showFriends}\n                enter=\"transition-all duration-500\"\n                enterFrom=\"-ml-80\"\n                enterTo=\"ml-0\"\n                leave=\"transition-all duration-500\"\n                leaveTo=\"-ml-80\">\n                <div className='w-80 flex-none bg-gray-100 p-4'>\n                    <div className=\"flex flex-col space-y-4\">\n                        <div className=\"flex flex-row flex-none p-4 border-b justify-between items-center mb-6\">\n                            {showSearchBar ? (\n                                <div className=\"flex flex-row items-center justify-between space-x-2\">\n                                    <div class=\"pt-2 relative text-gray-800\">\n                                        <input class=\"border w-64 text-gray-800 border-gray-500 bg-white h-10 px-5 pr-16 rounded-lg text-sm focus:outline-none\"\n                                            type=\"search\" name=\"search\" value={searchValue} placeholder=\"Search...\" onChange={(e)=> handleChange(e)} />\n                                        <button type=\"submit\" class=\"absolute right-0 top-0 mt-5 mr-4\">\n                                            <svg class=\"text-gray-800 h-4 w-4 fill-current\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path></svg>\n                                        </button>\n                                    </div>\n                                    <div className=\"mt-2\">\n                                        <button onClick={() => {\n                                            setShowSearchBar(false)\n                                            setSearched(false)\n                                            setSearchValue(\"\")\n                                        }}>\n                                            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                                        </button>\n                                    </div>\n                                </div>\n                            ) : (\n                                <>\n                                    <h1 className=\"font-semibold text-2xl\">Friends</h1>\n                                    <div className=\"space-x-2\">\n                                        <button onClick={() => setShowSearchBar(true)}>\n                                            <svg class=\"w-8 h-8 hover:text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 16l2.879-2.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242zM21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                        </button>\n                                        <button onClick={() => setShowModalRequest(true)}>\n                                            <div className=\"relative w-8 h-8\">\n                                                <svg class=\"w-full h-full\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"></path></svg>\n                                                {usersRequestingTotal !== 0 ? (\n                                                    <div class=\"absolute flex top-0 right-0 h-4 w-4 my-1 border-2 border-gray-100 rounded-full bg-red-400 items-center justify-center z-2\">\n                                                        <p className=\"text-white font-medium text-xs\">{usersRequestingTotal}</p>\n                                                    </div>\n                                                ) : null}\n                                            </div> \n                                        </button>\n                                    </div>\n                                </>\n                            )}\n                        </div>\n                        <div className=\"flex-auto overflow-y-auto flex flex-col\">\n                                {!searhed ? (\n                                    <>\n                                    {friends !== null ? (\n                                        friends.map(friend => (\n                                            <>\n                                            {friend.id !== token.id ? (\n                                                <a className=\"block border-b cursor-pointer\" onClick={()=> {\n                                                    setSelectedFriend(friend);\n                                                    handleChat(friend);\n                                                }}>\n                                                    <div className={ selectedFriend !== null ? ( selectedFriend.id == friend.id ? styles.selected : styles.default ) : styles.default}>\n                                                        <div className=\"flex flex-row items-center justify-between\">\n                                                            <div className=\"flex flex-row space-x-2\">\n                                                                    {friend.profile_pic !== null ? (\n                                                                        <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + friend.profile_pic} className=\"object-cover w-12 h-12 rounded-full\" />\n                                                                    ) : ( \n                                                                        <svg class=\"w-12 h-12\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                                                    )}\n                                                                <div className=\"flex flex-col space-x-2\">\n                                                                    <strong className=\"font-semibold\">{friend.firstname} {friend.lastname}</strong>\n                                                                    {latestMessages.map((message) => (\n                                                                        <>\n                                                                        {message.fromUser == friend.id && <p className={message.Status == 0 ? \"font-bold\" : \"font-normal\"}>{message.message}</p>}\n                                                                        {message.toUser == friend.id && <p>you: {message.message}</p>}\n                                                                        </>\n                                                                    ))}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </a>\n                                            ) : null}\n                                            </>\n                                        ))\n                                    ): (\n                                        <p>No Friends yet, send some invites</p>\n                                    )}  \n                                    </> \n                                ) : (\n                                    <>\n                                    {searchedUsers.length !== 0 ? (\n                                        searchedUsers.map(user => (\n                                            <>\n                                            {token.id !== user.id ? (\n                                                <div className=\"block border-b\">\n                                                <div className={styles.default}>\n                                                    <div className=\"flex flex-row items-center justify-between\">\n                                                        <div className=\"flex flex-row space-x-2\">\n                                                            {user.profile_pic !== null ? (\n                                                                <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + user.profile_pic} className=\"object-cover w-7 h-7 rounded-full\" />\n                                                            ) : ( \n                                                                <svg class=\"w-7 h-7\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                                            )}\n                                                            <strong className=\"flex-grow font-normal\">{user.firstname} {user.lastname}</strong>\n                                                        </div>\n                                                        {user.Status === null || user.Status === 2 ? (\n                                                            <button onClick={()=> sendFriendRequest(user.id)}>\n                                                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\"></path></svg>\n                                                            </button>\n                                                        ) : null}\n                                                        {user.Status === 0 && <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 8l4 4m0 0l-4 4m4-4H3\"></path></svg>}\n                                                        {user.Status === 1 && <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path></svg>}\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            ): null}\n                                            </>\n                                        ))\n                                    ) : (\n                                        <p>Nothing has been found</p>\n                                    )} \n                                    </>\n                                )}\n                        </div>\n                    </div>\n                </div>\n            </Transition>\n\n            <div className='h-screen flex flex-row flex-auto bg-white rounded-tl-xl rounded-bl-xl border-l border-r border-gray-400 shadow-xl'>\n                <div className=\"w-full flex flex-col p-4\">\n                    {selectedFriend !== undefined && (\n                    <>\n                    <div className=\"flex-none h-16 flex flex-row justify-between items-center border-b\">\n                        <div className=\"flex flex-row space-x-4 items-center\">\n                            <button onClick={() => setShowFriends(!showFriends)}>\n                                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h8m-8 6h16\"></path></svg>\n                            </button>\n                            <h1 className=\"font-bold\">{ selectedFriend !== null && (`${selectedFriend.firstname} ${selectedFriend.lastname}`) }</h1>\n                        </div>\n                        <div>\n                            <button onClick={()=> setShowFriendInfo(true)}>\n                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                            </button>\n                            {/* <button onClick={(e) => handleRemoveFriend(e, selectedFriend.FriendsId)}>\n                                <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 7a4 4 0 11-8 0 4 4 0 018 0zM9 14a6 6 0 00-6 6v1h12v-1a6 6 0 00-6-6zM21 12h-6\"></path></svg>\n                            </button> */}\n                        </div>\n                    </div>\n                    <div className=\"flex-auto h-4/5\">\n                       { selectedFriend !== null ? (<ChatPage chatId={chatId} friendId={selectedFriend.id} />):null}\n                    </div>\n                    </>\n                    )}\n                </div>\n                <>\n                {selectedFriend !== null && (\n                    <>\n                    {showFriendInfo ? (\n                        <div className=\"flex flex-col mt-2 w-1/3 bg-white rounded-tl-xl rounded-bl-xl border-l border-r border-gray-400 shadow-2xl p-2\">\n                            <div className=\"h-16 bg-white flex flex-row justify-center items-center border-b\">\n                                <button className=\"absolute right-0 pr-2\" onClick={() => setShowFriendInfo(false)}>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                                </button>\n                                <div className=\"flex-none\">\n                                    <h1 className=\"font-semibold\">{selectedFriend.firstname} {selectedFriend.lastname}</h1>\n                                </div>\n                            </div>\n                            <div className=\"mt-8 flex flex-col items-center space-y-6 justify-center\">\n                                <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + selectedFriend.profile_pic} className=\"object-cover w-32 h-32 rounded-full\" />\n                                <div className=\"flex flex-col items-center space-y-2\">\n                                    <p className=\"font-bold text-lg\">{selectedFriend.firstname} {selectedFriend.lastname}</p>\n                                    <p className=\"text-md\">{selectedFriend.email}</p>\n                                </div>\n                            </div>\n                        </div>\n                    ) : null}\n                    </>\n                )}\n                </>\n            </div>\n\n            <>\n            {showModalRequest ? (\n                <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n                    <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                        <form>\n                        <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                            <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                        </div>\n                        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n                        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                            <div className=\"bg-white px-4 pt-5 pb-2 sm:p-1 sm:pt-6 sm:pb-4\">\n                            <div className=\"min-w-0 sm:flex sm:items-start\">\n                                <div className=\"w-full mt-3 text-center sm:mt-0 sm:ml-4 sm:mr-4 sm:text-left\">\n                                <h3 className=\"text-lg leading-6 font-medium text-blue-500\" id=\"modal-headline\">\n                                    Friend Request(s)\n                                </h3>\n                                <div className=\"mt-2 overflow-y-auto\">\n                                    {usersRequesting.map(user => (\n                                        <>\n                                        {token.id != user.id ? (\n                                            <div className=\"block border-b\">\n                                            <div className={styles.default}>\n                                                <div className=\"flex flex-row items-center justify-between\">\n                                                    <div className=\"flex flex-row space-x-2\">\n                                                        <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                                        <strong className=\"flex-grow font-normal\">{user.firstname} {user.lastname}</strong>\n                                                    </div>\n                                                    <div className=\"space-x-2\">\n                                                        <button onClick={(e) =>  handleUpdateRequest(e, \"accept\", user.FriendsId)}>\n                                                            <svg class=\"w-6 h-6 hover:text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"></path></svg>\n                                                        </button>\n                                                        <button onClick={(e) =>  handleUpdateRequest(e, \"decline\", user.FriendsId)}>\n                                                            <svg class=\"w-6 h-6 hover:text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                                                        </button>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        ): null}\n                                        </>\n                                    ))}\n                                </div>\n                                </div>\n                            </div>\n                            </div>\n                            <div className=\"flex flew-row bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                            <button onClick={()=> {\n                                setShowModalRequest(false)\n                            }} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Close\n                            </button>\n                            </div>\n                        </div>\n                        </form>\n                    </div>\n                </div>\n            ) : null}\n            </>\n\n        </div>\n    )\n}\n\nconst styles = {\n    default: \"border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100 p-3 space-y-4\",\n    selected: \"border-l-2 border-blue-500 bg-blue-100 p-3 space-y-4\"\n}\n\nexport default FriendsPage;","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/transition.js",[],"/Volumes/Seagate/developing/HomeCloud/frontend/src/components/NavBar.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156"],"/Volumes/Seagate/developing/HomeCloud/frontend/src/components/files.js",["157"],"import React, { Component } from 'react';\nimport Axios from 'axios';\n\nclass File extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.folderId = props.folderId;\n        this.fileshowing = props.fileShowing;\n        this.state = {\n            files: [],\n            file: null,\n        }\n    }\n\n    componentDidMount() {\n        Axios({method: 'GET', url:`http://${process.env.REACT_APP_HOST_IP}:3030/folders/folder/` + this.folderId})\n          .then(res => {\n            if(res.status === 200) {\n              if(res.data !== \"no data\") {\n                const files = res.data;\n                this.setState({ files });\n              } \n            }\n        });\n    }\n    \n    render() {\n\n        return (\n            <div>\n            {this.state.files.map((file => {\n                return (\n                    <div className=\"border-b\">\n                        <div className=\"flex flex-row items-center border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100\">\n                            <a className=\"flex-auto cursor-pointer \" onClick={() => {\n                                this.fileshowing(file.path, file.name, file.is_image, file.file_id);\n                            }}>\n                                <div className=\"p-3 space-y-4\">\n                                    <div className=\"flex flex-row items-center space-x-2\">\n                                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"></path></svg>\n                                        <strong className=\"flex-grow text-sm font-normal\">{file.name}</strong>\n                                    </div>\n                                </div>\n                            </a>\n                            <div className=\"flex-none flex flex-row space-x-2 mr-2\">\n                                <button onClick={() => this.props.renameFile({\n                                    name: file.name.split('.')[0],\n                                    ext: file.name.split('.')[1],\n                                    fileId: file.file_id\n                                })}>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"></path></svg>\n                                </button>\n                                <button onClick={() => {\n                                    this.props.downloadFunction(file.name, file.path, file.name, file.is_image)\n                                }}>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path></svg>\n                                </button>\n                                <button onClick={()=>this.props.deletefile(file.file_id)}>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path></svg>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }))}\n            \n            </div>\n        )\n    }\n}\n\nexport default File;","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/FileShow.js",["158","159"],"import React from 'react';\n\nfunction FileShow(props) {\n\n    return (\n        <div className=\"w-1/3 bg-white rounded-tl-xl rounded-bl-xl border-l border-r border-gray-400 shadow-2xl p-2\">\n            <div className=\"h-16 bg-white flex flex-row justify-center items-center border-b\">\n                <button className=\"absolute right-0 pr-2\" onClick={() => props.setFileshow(false)}>\n                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                </button>\n                <div className=\"flex-none\">\n                    <h1 className=\"font-semibold\">File Info</h1>\n                </div>\n            </div>\n            <div className=\"flex flex-col p-2 space-y-8 justify-center items-center\">\n                <>\n                {props.file.is_image ? <img src={'http://localhost:3030' + props.file.file} /> : <h1>No preview to see</h1>}\n                </>\n                {props.showShareDialog != undefined ? (\n                <button type=\"button\" onClick={() => props.showShareDialog(true)} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                    <svg class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z\"></path></svg>\n                    <p className=\"ml-2\">Share with friend</p>\n                </button>\n                ) : null}\n            </div>\n        </div>\n    )\n\n}\n\nexport default FileShow;","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/ProgressBar.js",[],"/Volumes/Seagate/developing/HomeCloud/frontend/src/components/SelectingFiles.js",["160"],"import React, { Component } from 'react';\nimport Axios from 'axios';\n\nlet selected = [];\n\nclass SelecingFiles extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.folderId = props.folderId;\n        this.state = {\n            files: [],\n            file: null,\n            selected: []\n        }\n    }\n\n    componentDidMount() {\n        let combined = [];\n        Axios({method: 'GET', url:`http://${process.env.REACT_APP_HOST_IP}:3030/folders/folder/` + this.folderId})\n          .then(res => {\n            if(res.status === 200) {\n              if(res.data !== \"no data\") {\n                const files = res.data;\n                if(files.length > 0) {\n                    files.forEach(file => {\n                        const obj = {...file, isSelect: false};\n                        combined.push(obj);\n                    })\n                }\n                this.setState({ files: combined });\n              } \n            }\n        });\n    }\n\n    selectItem = (item) => {\n        item.isSelect = !item.isSelect;\n        if(item.isSelect){\n            const obj = {\n                name: item.name,\n                file: item.path,\n                filename: item.name,\n                is_image: item.is_image,\n                fileId: item.file_id\n            };\n            selected.push(obj);\n        } else {\n            for(let i = 0; i < selected.length; i++) {\n                if(selected[i].fileId === item.file_id) {\n                    selected.splice(i, 1)\n                }\n            }\n        }\n        this.setState({selected: selected});\n        this.props.setSelected(selected)\n    };\n\n    // selectAll = () => {\n    //     this.state.files.forEach(item => {\n    //         item.isSelect = !item.isSelect;\n    //         if(item.isSelect){\n    //             const obj = {\n    //                 name: item.name,\n    //                 file: item.path,\n    //                 filename: item.name,\n    //                 is_image: item.is_image,\n    //                 fileId: item.file_id\n    //             };\n    //             selected.push(obj);\n    //         }\n    //     })\n    //     this.setState({selected: selected});\n    //     this.props.setSelected(selected)\n    // }\n    \n    render() {\n        return (\n            <div>\n            {this.state.files.map((file => {\n                return (\n                    <div className=\"border-b\" onClick={() => {\n                        this.selectItem(file)\n                    }}>\n                        <div className={ file.isSelect ? styles.selected : styles.normal }>\n                            {file.isSelect ? (\n                                <>\n                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                </>\n                            ) : (\n                                <>\n                                <svg width=\"1.5rem\" height=\"1.5rem\">\n                                    <circle cx=\"0.7rem\" cy=\"0.7rem\" r=\"0.50rem\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" />\n                                </svg>\n                                </>\n                            )}\n                            <a className=\"flex-auto cursor-pointer \">\n                                <div className=\"p-3 space-y-4\">\n                                    <div className=\"flex flex-row items-center space-x-2\">\n                                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"></path></svg>\n                                        <strong className=\"flex-grow text-sm font-normal\">{file.name}</strong>\n                                    </div>\n                                </div>\n                            </a>\n\n                        </div>\n                    </div>\n            )\n            }))}\n            \n            </div>\n        )\n    }\n}\n\nconst styles = {\n    selected: \"flex flex-row items-center border-l-2 border-blue-500 bg-blue-100\",\n    normal: \"flex flex-row items-center border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100\"\n}\n\nexport default SelecingFiles;","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/folders.js",["161"],"import React from 'react';\nimport axios from 'axios';\n\nclass FolderList extends React.Component {\n    state = {\n        folders: []\n    }\n\n    constructor(props) {\n        super(props);\n        this.getFiles = this.props.getFiles;\n    }\n    \n    componentDidMount() {\n        const token = JSON.parse(localStorage.getItem('tokens'));\n        axios({method: 'GET', url:`http://${process.env.REACT_APP_HOST_IP}:3030/folders/${token.id}`})\n            .then(res => {\n            const folders = res.data;\n            this.setState({ folders });\n        })\n    }\n\n    render() {\n        return (\n        <>\n            {this.state.folders.map(folder => (\n                <a className=\"block border-b cursor-pointer\" href={`/collection/folder/${folder.name}/${folder.folder_id}`}>\n                    <div className={folder.name == this.props.selectedName ? styles.selected : styles.default}>\n                        <div className=\"flex flex-row items-center space-x-2\">\n                            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"></path></svg>\n                            <strong className=\"flex-grow font-normal\">{folder.name}</strong>\n                        </div>\n                    </div>\n                </a>\n            ))}\n        </>\n        )\n    }\n}\n\nconst styles = {\n    default: \"border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100 p-3 space-y-4\",\n    selected: \"border-l-2 border-blue-500 bg-blue-100 p-3 space-y-4\"\n}\n\nexport default FolderList;","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/profile.js",["162"],"import Axios from 'axios';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Profile extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {},\n            updatedUser: {},\n            avatar: {},\n        }\n    }\n\n    componentDidMount() {\n        const token = JSON.parse(localStorage.getItem('tokens'));\n\n        Axios({method: 'GET', url: `http://${process.env.REACT_APP_HOST_IP}:3030/myprofile/${token.id}`})\n            .then(res => {\n                if(res.status === 200) {\n                    this.setState({\n                        user: res.data,\n                        updatedUser: res.data,\n                        hovered: false\n                    });\n                    console.log(res.data);\n                }\n            }).catch(e => console.log(e));\n    }\n\n    UpdatingUser = (user) => {\n        const data = {\n            firstname: user.firstname,\n            lastname: user.lastname,\n            email: user.email\n        }\n\n        axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/updateuser/${user.id}`, data)\n            .then(res => {\n                if(res.status === 200) {\n                    this.props.setIsUpdating(false);\n                    window.location.reload();\n                }\n            })\n\n    }\n\n    UpdatingUserPic = (user) => {\n        console.log('pok');\n    }\n\n    handleEvent = () => {\n        var input = document.getElementById('upload');\n        input.click();\n    }\n\n    handleChange = async (e) => {\n        const data  = new FormData();\n        data.append('file', e.target.files[0]);\n\n        const token = JSON.parse(localStorage.getItem('tokens'));\n\n        Axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/uploadPic/${token.id}`, data, {\n            onUploadProgress: (ProgressEvent) => {\n                console.log(ProgressEvent.loaded);\n            }\n        })\n        .then((res) => {\n            if(res.status === 200) {\n                const data = {\n                    ...token,\n                    profile_pic: res.data.profile_pic\n                }\n                localStorage.setItem('tokens', JSON.stringify(data))\n                window.location.reload();\n            } else {\n                console.log(res.data);\n            }\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <div className='flex flex-col space-y-16 items-center p-6'>\n                    <div onClick={this.handleEvent} id=\"div\" onMouseEnter={()=> this.setState({hovered: true})} onMouseLeave={()=> this.setState({hovered: false})} className='flex cursor-pointer rounded-full h-32 w-32 hover:bg-gray-200 justify-center items-center focus:outline-none'>\n                        {this.state.hovered && (\n                            <svg class=\"w-10 h-10 absolute\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"></path></svg>\n                        )}\n                        <input type=\"file\" id=\"upload\" onChange={(e) => this.handleChange(e)} accept=\"image/*\" hidden=\"true\" />\n                        {this.state.user.profile_pic != null && <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + this.state.user.profile_pic} className=\"absolute object-cover w-32 h-32 rounded-full hover:opacity-10\" />}\n                        {this.state.user.profile_pic == null && <svg id=\"svgProfile\" class=\"w-32 h-32 text-gray-900 stroke-1 hover:opacity-10\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>}\n                    </div>\n                    <div className=\"flex flex-col items-center space-y-8\">\n                        <div className=\"flex flex-col items-center space-y-2\">\n                            {!this.props.isUpdating ? (\n                                <>\n                                <div className='flex flex-row space-x-1'>\n                                    <p>name: </p>\n                                    <p>{this.state.user.firstname}</p>\n                                    <p>{this.state.user.lastname}</p>\n                                </div>\n                                <p>email: {this.state.user.email}</p>\n                                </>\n                            ): (\n                                <div className='flex flex-col space-y-2'>\n                                    <input type=\"text\" value={this.state.updatedUser.firstname} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser, firstname: e.target.value}})} className={styles.input} />\n                                    <input type=\"text\" value={this.state.updatedUser.lastname} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser ,lastname: e.target.value}})} className={styles.input} />\n                                    <input type=\"email\" value={this.state.updatedUser.email} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser , email: e.target.value}})} className={styles.input} />\n                                </div>\n                            )}\n                        </div>\n                        {this.props.isUpdating ? (\n                            <button type=\"button\" onClick={() => this.UpdatingUser(this.state.updatedUser)} className=\"w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Update profile\n                            </button> \n                        ): (\n                            <button type=\"button\" onClick={() => this.props.setIsUpdating(!this.props.isUpdating)} className=\"w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Update profile\n                            </button> \n                        )}\n                        {this.props.isUpdating && (\n                            <button type=\"button\" onClick={() => this.props.setIsUpdating(!this.props.isUpdating)} className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Cancel\n                            </button>\n                        )}\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nconst styles = {\n    input: \"w-64 h-8 p-2 focus:ring-blue-500 focus:border-blue-500 border border-blue-500 sm:text-sm rounded-md shadow-xl\"\n}\n\nexport default Profile;","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/ChatPage.js",["163","164","165"],"import React, {useState, useEffect, useRef} from 'react';\nimport axios from 'axios';\nimport {socket} from '../App';\n\n\nexport const ChatPage = ({friendId, chatId}) => {\n\n\n    const [inputMessage, setInputMessage] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const token = JSON.parse(localStorage.getItem('tokens'));\n    const messageEl = useRef(null);\n\n    useEffect(()=> {\n\n        if(chatId != null) {\n            axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/getMessages/${chatId}`)\n                .then(response => {\n                    if (response.status === 200) {\n                        setMessages(response.data);\n                    }\n                })\n        }\n        \n    }, [chatId]);\n\n    useEffect(()=> {\n        axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/chats/seenmessages/${chatId}/${token.id}`)\n            .then(response => {\n                if(response.status === 200) {\n\n                }\n            })\n    }, [chatId]);\n    \n    useEffect(() => { \n        socket.on('message', message => {\n            setMessages(messages => [ ...messages, message ]);\n          });\n\n        if(messageEl) {\n          messageEl.current.addEventListener('DOMNodeInserted', event => {\n            const { currentTarget: target } = event;\n            target.scroll({ top: target.scrollHeight, behavior: 'smooth' });\n          });\n        }\n      }, [])\n\n    function sendMessage(e) {\n        e.preventDefault();\n        if(inputMessage != \"\") {\n            const data = {\n                chatId: chatId,\n                fromUser: token.id,\n                toUser: friendId,\n                message: inputMessage\n            };\n\n            const userId = token.id;\n            socket.emit('sendMessage', {data, chatId, friendId});\n            socket.emit('sendMelding', {userId, friendId});\n            \n            axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/chat/sendmessage`, data)\n                .then(response => {\n                    if(response.status === 200) {\n                        setInputMessage('');\n                    };\n            });\n        };\n    };\n\n    return (\n        <div className=\"justify-between flex flex-col h-full\">\n            <div className=\"flex flex-col p-4 space-y-4 items-start overflow-y-auto\" ref={messageEl}>\n                 {messages.map(message => (\n                     <>\n                     {message.chatId == chatId && (\n                         <div className={message.fromUser === token.id ? style.sender : style.friend}>\n                            {message.message}\n                        </div>\n                     )}\n                    </>\n                ))}\n            </div>          \n            <div class=\"mt-2 border-t border-gray-200 pt-4 mb-1 sm:mb-0\">\n                <form onSubmit={(e)=> sendMessage(e)}>\n                <div class=\"relative flex\">\n                        <input type=\"text\" value={inputMessage} onChange={(e)=> setInputMessage(e.target.value)} placeholder=\"Write Something\" class=\"w-full focus:outline-none border border-black focus:placeholder-gray-400 text-gray-600 placeholder-gray-600 pl-6 rounded-full py-2\" />\n                        <div class=\"absolute right-2 items-center inset-y-0 hidden sm:flex\">\n                            <button type=\"submit\" onClick={(e)=> sendMessage(e)} class=\"inline-flex items-center justify-center rounded-full h-9 w-9 text-black focus:outline-none\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-send\"><line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line><polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon></svg>\n                            </button>\n                        </div>\n                </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nconst style = {\n\tsender: \"max-w-lg inline-block px-4 self-end py-2 bg-blue-500 rounded-t-lg rounded-bl-lg text-white\",\n\tfriend: \"max-w-lg inline-block px-4 py-2 bg-gray-200 rounded-t-lg rounded-br-lg\"\n}","/Volumes/Seagate/developing/HomeCloud/frontend/src/hooks/useFileDownloader.js",[],"/Volumes/Seagate/developing/HomeCloud/frontend/src/components/CircleProgress.js",[],"/Volumes/Seagate/developing/HomeCloud/frontend/src/components/Downloader.js",["166","167"],"import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\n\nconst Downloader = ({ files = [], remove }) => {\n    return (\n        <div className=\"fixed bg-white w-96 min-h-down right-2 bottom-2 max-h-60 overflow-y-auto border rounded-md shadow-xl\">\n            <div>\n                <div className=\"bg-gray-100 p-2\">File Downloader</div>\n                <ul className=\"max-h-48 p-4 overflow-hidden overflow-y-auto\">\n                    {files.map((file, idx) => {\n                        if(file.is_folder) {\n                            return (<DonwloadFolder \n                                key={idx}\n                                removeFile={()=> remove(file.downloadId)}\n                                name={file.name}\n                                folder={file.folder}\n                            />)\n                        } else {\n                            return(<DownloadItem\n                                key={idx}\n                                removeFile={() => remove(file.downloadId)}\n                                {...file}\n                            />)\n                        }\n                    })}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nconst DownloadItem = ({ name, file, filename, removeFile }) => {\n    const CancelToken = Axios.CancelToken;\n    const source = CancelToken.source();\n\n    const [downloadInfo, setDownloadInfo] = useState({\n        progress: 0,\n        completed: false,\n        total: 0,\n        loaded: 0\n    });\n\n    useEffect(() => {\n        const options = {\n            onDownloadProgress: (progressEvent) => {\n                const { loaded, total } = progressEvent;\n\n                setDownloadInfo({\n                    progress: Math.floor((loaded * 100) / total),\n                    loaded,\n                    total,\n                    completed: false,\n                })\n            }\n        }\n\n        Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030` + file, {\n                responseType: \"blob\",\n                ...options,\n                headers: {\n                    'X-Requested-With': 'XMLHttpRequest',\n                    'Access-Control-Allow-Origin': '*'\n                },\n                cancelToken: source.token\n            }).then(function (response) {\n        \n            const url = window.URL.createObjectURL(\n                new Blob([response.data], {\n                type: response.headers[\"content-type\"],\n                })\n            );\n        \n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.setAttribute(\"download\", filename);\n            document.body.appendChild(link);\n            link.click();\n        \n            setDownloadInfo((info) => ({\n                ...info,\n                completed: true,\n            }));\n        \n            setTimeout(() => {\n                removeFile();\n            }, 4000);\n        });\n    }, []);\n\n    return (\n        <li className=\"w-full h-16 border-b \">\n            <div>\n            <div className=\"relative pt-2\">\n                <div className=\"flex mb-2 items-center justify-between\">\n                    <div>\n                        <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-blue-600 bg-blue-200\">\n                            {name}\n                        </span>\n                    </div>\n                    <div className=\"flex flex-row items-center space-x-2 text-right\">\n                        <span className=\"text-xs font-semibold inline-block text-blue-600\">\n                            { downloadInfo.loaded > 0 && downloadInfo.progress + '%'}\n                            { downloadInfo.loaded === 0 && 'Initializing...'}\n                        </span>\n                        <button onClick={async ()=> {\n                            await removeFile()\n                            source.cancel();\n                        }}>\n                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"rgba(37, 99, 235)\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"overflow-hidden h-2 text-xs flex rounded bg-blue-200\">\n                    <div style={{ width: downloadInfo.progress + '%' }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-blue-500\"></div>\n                </div>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nconst DonwloadFolder = ({name, folder, removeFile}) => {\n    const CancelToken = Axios.CancelToken;\n    const source = CancelToken.source();\n\n    const [downloadInfo, setDownloadInfo] = useState({\n        progress: 0,\n        completed: false,\n        total: 0,\n        loaded: 0\n    });\n\n    useEffect(() => {\n        const options = {\n            onDownloadProgress: (progressEvent) => {\n                const { loaded, total } = progressEvent;\n\n                setDownloadInfo({\n                    progress: Math.floor((loaded * 100) / total),\n                    loaded,\n                    total,\n                    completed: false,\n                })\n            }\n        }\n\n        Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/getfolder/` + folder, {\n                responseType: \"blob\",\n                ...options,\n                headers: {\n                    'X-Requested-With': 'XMLHttpRequest',\n                    'Access-Control-Allow-Origin': '*'\n                },\n                cancelToken: source.token\n            }).then(function (response) {\n            console.log(response);\n        \n            const url = window.URL.createObjectURL(\n                new Blob([response.data], {\n                type: response.headers[\"content-type\"],\n                })\n            );\n        \n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.setAttribute(\"download\", name);\n            document.body.appendChild(link);\n            link.click();\n        \n            setDownloadInfo((info) => ({\n                ...info,\n                completed: true,\n            }));\n        \n            setTimeout(() => {\n                removeFile();\n            }, 4000);\n        });\n    }, []);\n\n    return (\n        <li className=\"w-full h-16 border-b \">\n            <div>\n            <div className=\"relative pt-2\">\n                <div className=\"flex mb-2 items-center justify-between\">\n                    <div>\n                        <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-blue-600 bg-blue-200\">\n                            {name}\n                        </span>\n                    </div>\n                    <div className=\"flex flex-row items-center space-x-2 text-right\">\n                        <span className=\"text-xs font-semibold inline-block text-blue-600\">\n                            { downloadInfo.loaded > 0 && downloadInfo.progress + '%'}\n                            { downloadInfo.loaded === 0 && 'Initializing...'}\n                        </span>\n                        <button onClick={async ()=> {\n                            await removeFile()\n                            source.cancel();\n                        }}>\n                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"rgba(37, 99, 235)\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"overflow-hidden h-2 text-xs flex rounded bg-blue-200\">\n                    <div style={{ width: downloadInfo.progress + '%' }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-blue-500\"></div>\n                </div>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nexport default Downloader;","/Volumes/Seagate/developing/HomeCloud/frontend/src/components/warningDialog.js",["168"],"import React from 'react';\n\nclass WarningDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n                <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                    <form>\n                    <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                        <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                    </div>\n                    <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n                    <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                        <div className=\"bg-white px-4 pt-5 pb-2 sm:p-1 sm:pt-6 sm:pb-4\">\n                        <div className=\"min-w-0 sm:flex sm:items-start\">\n                            <div className=\"w-full mt-3 text-center sm:mt-0 sm:ml-4 sm:mr-4 sm:text-left\">\n                            <h3 className=\"text-lg leading-6 font-medium text-red-500\" id=\"modal-headline\">\n                                Warning!\n                            </h3>\n                            <div className=\"mt-2\">\n                                <p>{this.props.msg}</p>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                        <div className=\"flex flew-row bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                        <button type=\"submit\" onClick={this.props.closeDialog} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-500 text-base font-medium text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                            Close\n                        </button>\n                        </div>\n                    </div>\n                    </form>\n                </div>\n            </div>\n        )    \n    }\n\n}\n\nexport default WarningDialog",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":20,"column":22,"nodeType":"175","messageId":"176","endLine":20,"endColumn":35},{"ruleId":"173","severity":1,"message":"177","line":32,"column":10,"nodeType":"175","messageId":"176","endLine":32,"endColumn":18},{"ruleId":"173","severity":1,"message":"178","line":33,"column":10,"nodeType":"175","messageId":"176","endLine":33,"endColumn":19},{"ruleId":"173","severity":1,"message":"179","line":38,"column":10,"nodeType":"175","messageId":"176","endLine":38,"endColumn":21},{"ruleId":"173","severity":1,"message":"180","line":38,"column":23,"nodeType":"175","messageId":"176","endLine":38,"endColumn":37},{"ruleId":"173","severity":1,"message":"181","line":47,"column":18,"nodeType":"175","messageId":"176","endLine":47,"endColumn":27},{"ruleId":"173","severity":1,"message":"182","line":67,"column":36,"nodeType":"175","messageId":"176","endLine":67,"endColumn":50},{"ruleId":"183","severity":1,"message":"184","line":182,"column":27,"nodeType":"185","messageId":"186","endLine":182,"endColumn":29},{"ruleId":"187","severity":1,"message":"188","line":462,"column":39,"nodeType":"189","endLine":462,"endColumn":126},{"ruleId":"190","severity":1,"message":"191","line":467,"column":55,"nodeType":"189","endLine":467,"endColumn":187},{"ruleId":"187","severity":1,"message":"188","line":69,"column":19,"nodeType":"189","endLine":69,"endColumn":22},{"ruleId":"173","severity":1,"message":"192","line":19,"column":26,"nodeType":"175","messageId":"176","endLine":19,"endColumn":40},{"ruleId":"193","severity":1,"message":"194","line":42,"column":8,"nodeType":"195","endLine":42,"endColumn":10,"suggestions":"196"},{"ruleId":"187","severity":1,"message":"188","line":68,"column":37,"nodeType":"189","endLine":68,"endColumn":155},{"ruleId":"193","severity":1,"message":"194","line":53,"column":8,"nodeType":"195","endLine":53,"endColumn":16,"suggestions":"197"},{"ruleId":"193","severity":1,"message":"194","line":64,"column":8,"nodeType":"195","endLine":64,"endColumn":10,"suggestions":"198"},{"ruleId":"187","severity":1,"message":"188","line":214,"column":49,"nodeType":"189","endLine":217,"endColumn":52},{"ruleId":"183","severity":1,"message":"199","line":218,"column":116,"nodeType":"185","messageId":"186","endLine":218,"endColumn":118},{"ruleId":"190","severity":1,"message":"191","line":222,"column":73,"nodeType":"189","endLine":222,"endColumn":207},{"ruleId":"183","severity":1,"message":"199","line":230,"column":91,"nodeType":"185","messageId":"186","endLine":230,"endColumn":93},{"ruleId":"183","severity":1,"message":"199","line":230,"column":136,"nodeType":"185","messageId":"186","endLine":230,"endColumn":138},{"ruleId":"183","severity":1,"message":"199","line":231,"column":89,"nodeType":"185","messageId":"186","endLine":231,"endColumn":91},{"ruleId":"190","severity":1,"message":"191","line":257,"column":65,"nodeType":"189","endLine":257,"endColumn":195},{"ruleId":"190","severity":1,"message":"191","line":326,"column":33,"nodeType":"189","endLine":326,"endColumn":175},{"ruleId":"183","severity":1,"message":"184","line":358,"column":51,"nodeType":"185","messageId":"186","endLine":358,"endColumn":53},{"ruleId":"173","severity":1,"message":"200","line":7,"column":8,"nodeType":"175","messageId":"176","endLine":7,"endColumn":21},{"ruleId":"193","severity":1,"message":"194","line":23,"column":10,"nodeType":"195","endLine":23,"endColumn":12,"suggestions":"201"},{"ruleId":"173","severity":1,"message":"202","line":31,"column":24,"nodeType":"175","messageId":"176","endLine":31,"endColumn":37},{"ruleId":"193","severity":1,"message":"194","line":64,"column":8,"nodeType":"195","endLine":64,"endColumn":10,"suggestions":"203"},{"ruleId":"183","severity":1,"message":"199","line":116,"column":74,"nodeType":"185","messageId":"186","endLine":116,"endColumn":76},{"ruleId":"183","severity":1,"message":"199","line":150,"column":74,"nodeType":"185","messageId":"186","endLine":150,"endColumn":76},{"ruleId":"193","severity":1,"message":"204","line":176,"column":8,"nodeType":"195","endLine":176,"endColumn":34,"suggestions":"205"},{"ruleId":"183","severity":1,"message":"199","line":216,"column":28,"nodeType":"185","messageId":"186","endLine":216,"endColumn":30},{"ruleId":"183","severity":1,"message":"199","line":249,"column":27,"nodeType":"185","messageId":"186","endLine":249,"endColumn":29},{"ruleId":"183","severity":1,"message":"184","line":331,"column":47,"nodeType":"185","messageId":"186","endLine":331,"endColumn":49},{"ruleId":"187","severity":1,"message":"206","line":337,"column":21,"nodeType":"189","endLine":337,"endColumn":127},{"ruleId":"190","severity":1,"message":"191","line":377,"column":55,"nodeType":"189","endLine":377,"endColumn":205},{"ruleId":"190","severity":1,"message":"191","line":382,"column":59,"nodeType":"189","endLine":382,"endColumn":192},{"ruleId":"183","severity":1,"message":"199","line":439,"column":53,"nodeType":"185","messageId":"186","endLine":439,"endColumn":55},{"ruleId":"183","severity":1,"message":"199","line":476,"column":53,"nodeType":"185","messageId":"186","endLine":476,"endColumn":55},{"ruleId":"183","severity":1,"message":"199","line":506,"column":37,"nodeType":"185","messageId":"186","endLine":506,"endColumn":39},{"ruleId":"187","severity":1,"message":"188","line":36,"column":29,"nodeType":"189","endLine":38,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":17,"column":40,"nodeType":"189","endLine":17,"endColumn":95},{"ruleId":"183","severity":1,"message":"184","line":19,"column":40,"nodeType":"185","messageId":"186","endLine":19,"endColumn":42},{"ruleId":"187","severity":1,"message":"188","line":97,"column":29,"nodeType":"189","endLine":97,"endColumn":70},{"ruleId":"183","severity":1,"message":"199","line":28,"column":49,"nodeType":"185","messageId":"186","endLine":28,"endColumn":51},{"ruleId":"190","severity":1,"message":"191","line":92,"column":65,"nodeType":"189","endLine":92,"endColumn":234},{"ruleId":"193","severity":1,"message":"194","line":34,"column":8,"nodeType":"195","endLine":34,"endColumn":16,"suggestions":"207"},{"ruleId":"183","severity":1,"message":"184","line":51,"column":25,"nodeType":"185","messageId":"186","endLine":51,"endColumn":27},{"ruleId":"183","severity":1,"message":"199","line":77,"column":38,"nodeType":"185","messageId":"186","endLine":77,"endColumn":40},{"ruleId":"193","severity":1,"message":"208","line":88,"column":8,"nodeType":"195","endLine":88,"endColumn":10,"suggestions":"209"},{"ruleId":"193","severity":1,"message":"210","line":179,"column":8,"nodeType":"195","endLine":179,"endColumn":10,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":5,"column":5,"nodeType":"214","messageId":"215","endLine":7,"endColumn":6},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"no-unused-vars","'setFoldername' is assigned a value but never used.","Identifier","unusedVar","'progress' is assigned a value but never used.","'usedSpace' is assigned a value but never used.","'showSuccess' is assigned a value but never used.","'setShowSuccess' is assigned a value but never used.","'setFolder' is assigned a value but never used.","'downloadfolder' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'donwloadfolder' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token.id'. Either include it or remove the dependency array.","ArrayExpression",["218"],["219"],["220"],"Expected '===' and instead saw '=='.","'WarningDialog' is defined but never used.",["221"],"'setFolderName' is assigned a value but never used.",["222"],"React Hook useEffect has missing dependencies: 'counter', 'fileSize', and 'fileUpload'. Either include them or remove the dependency array.",["223"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["224"],"React Hook useEffect has missing dependencies: 'file', 'filename', 'removeFile', and 'source.token'. Either include them or remove the dependency array. If 'removeFile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["225"],"React Hook useEffect has missing dependencies: 'folder', 'name', 'removeFile', and 'source.token'. Either include them or remove the dependency array. If 'removeFile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["226"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"227","fix":"231"},{"desc":"227","fix":"232"},{"desc":"227","fix":"233"},{"desc":"234","fix":"235"},{"desc":"229","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [token.id]",{"range":"241","text":"242"},"Update the dependencies array to be: [chatId, token.id]",{"range":"243","text":"244"},{"range":"245","text":"242"},{"range":"246","text":"242"},{"range":"247","text":"242"},"Update the dependencies array to be: [counter, fileSize, fileToBeUpload, fileUpload, progress]",{"range":"248","text":"249"},{"range":"250","text":"244"},"Update the dependencies array to be: [file, filename, removeFile, source.token]",{"range":"251","text":"252"},"Update the dependencies array to be: [folder, name, removeFile, source.token]",{"range":"253","text":"254"},[1213,1215],"[token.id]",[2141,2149],"[chatId, token.id]",[2514,2516],[746,748],[2560,2562],[6284,6310],"[counter, fileSize, fileToBeUpload, fileUpload, progress]",[991,999],[2944,2946],"[file, filename, removeFile, source.token]",[6454,6456],"[folder, name, removeFile, source.token]"]