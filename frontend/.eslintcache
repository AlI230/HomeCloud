[{"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/index.js":"1","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/App.js":"2","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/reportWebVitals.js":"3","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/PrivateRoute.js":"4","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/pages/login.js":"5","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/context/auth.js":"6","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/pages/register.js":"7","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/transition.js":"8","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/NavBar.js":"9","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/folders.js":"10","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/context/useBreakpoint.js":"11","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/context/tailwind.config.js":"12","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/files.js":"13","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/pages/collection.js":"14","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/pages/home.js":"15","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/pages/myProfile.js":"16","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/profile.js":"17","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/Downloader.js":"18","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/hooks/useFileDownloader.js":"19","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/FileShow.js":"20","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/ProgressBar.js":"21","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/SelectingFiles.js":"22","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/warningDialog.js":"23","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/CircleProgress.js":"24","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/selectAll.js":"25","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/pages/friendsPage.js":"26","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/ChatPage.js":"27"},{"size":500,"mtime":1607774771756,"results":"28","hashOfConfig":"29"},{"size":1652,"mtime":1611091450749,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1607685016443,"results":"31","hashOfConfig":"29"},{"size":447,"mtime":1607857477508,"results":"32","hashOfConfig":"29"},{"size":3945,"mtime":1610616146142,"results":"33","hashOfConfig":"29"},{"size":162,"mtime":1607855858338,"results":"34","hashOfConfig":"29"},{"size":4175,"mtime":1610284640418,"results":"35","hashOfConfig":"29"},{"size":3064,"mtime":1607787462804,"results":"36","hashOfConfig":"29"},{"size":27255,"mtime":1610547311244,"results":"37","hashOfConfig":"29"},{"size":1705,"mtime":1610006107595,"results":"38","hashOfConfig":"29"},{"size":347,"mtime":1607929804069,"results":"39","hashOfConfig":"29"},{"size":270,"mtime":1607929562364,"results":"40","hashOfConfig":"29"},{"size":3963,"mtime":1610439649178,"results":"41","hashOfConfig":"29"},{"size":19152,"mtime":1610460142049,"results":"42","hashOfConfig":"29"},{"size":762,"mtime":1608281912057,"results":"43","hashOfConfig":"29"},{"size":687,"mtime":1610039186649,"results":"44","hashOfConfig":"29"},{"size":7302,"mtime":1610481015664,"results":"45","hashOfConfig":"29"},{"size":8230,"mtime":1609937961646,"results":"46","hashOfConfig":"29"},{"size":835,"mtime":1609696721170,"results":"47","hashOfConfig":"29"},{"size":1118,"mtime":1609584933320,"results":"48","hashOfConfig":"29"},{"size":1682,"mtime":1610306073961,"results":"49","hashOfConfig":"29"},{"size":4541,"mtime":1610442836586,"results":"50","hashOfConfig":"29"},{"size":2355,"mtime":1610396895334,"results":"51","hashOfConfig":"29"},{"size":1714,"mtime":1610398382878,"results":"52","hashOfConfig":"29"},{"size":0,"mtime":1610441871391,"results":"53","hashOfConfig":"29"},{"size":24326,"mtime":1611264124651,"results":"54","hashOfConfig":"29"},{"size":3939,"mtime":1611264987380,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1lzt3zr",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/index.js",[],["121","122"],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/App.js",[],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/reportWebVitals.js",[],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/PrivateRoute.js",[],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/pages/login.js",[],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/context/auth.js",[],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/pages/register.js",["123"],"import '../index.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../context/auth';\nimport { Redirect } from 'react-router-dom'\n\nfunction Register() {\n\n  const [ isLoggedIn, setLoggedIn ] = useState(false);\n  const [ isError, setIsError ] = useState(false); \n  const [ emailUser, setEmail ] = useState(\"\"); \n  const [ password, setPassword ] = useState(\"\");\n  const [ firstname, setFirstname ] = useState(\"\");\n  const [ lastname, setLastname ] = useState(\"\");\n  const { setAuthTokens } = useAuth();\n\n  function postRegister() {\n    console.log('logging in');\n    axios({method: \"POST\", url:`http://${process.env.REACT_APP_HOST_IP}:3030/register`, data: {\n      email: emailUser,\n      password: password,\n      firstname: firstname,\n      lastname: lastname\n    }}).then(result => {\n      if(result.status === 200) {\n        console.log(result.data);\n        setAuthTokens({\n          email: result.data.email,\n          id: result.data.id,\n          profile_pic: result.data.profile_pic,\n        });\n        setLoggedIn(true)\n      } else {\n        setIsError(true)\n      }\n    }).catch(e => {\n      setIsError(true);\n    });\n  }\n\n  if(isLoggedIn) {\n    return <Redirect to=\"/\" />\n  }\n\n    return (\n        <div class=\"fixed z-10 inset-0 overflow-y-auto shadow-2xl bg-gray-100\">\n          <div class=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n            <form>\n              <span class=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n              <div class=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-md sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                <div class=\"w-full bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                  <div class=\"min-w-0 sm:flex sm:items-start\">\n                    <div class=\"w-full mt-3 text-center sm:mt-0 sm:ml-1 sm:text-left\">\n                      <h3 class=\"text-2xl leading-1 font-medium text-blue-500\" id=\"modal-headline\">\n                        Register\n                      </h3>\n                      <div class=\"w-full mt-4 flex flex-col space-y-4\">\n                      { isError &&<p>The email is already taken or required everything!</p> }\n                        <input type=\"text\" value={firstname} onChange={ (e) => setFirstname(e.target.value) } placeholder=\"Firstname...\" class=\"h-8 p-2 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border border-blue-500 rounded-md\"/>\n                        <input type=\"text\" value={lastname} onChange={ (e) => setLastname(e.target.value) } placeholder=\"Lastname...\" class=\"h-8 p-2 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border border-blue-500 rounded-md\"/>\n                        <input type=\"text\" value={emailUser} onChange={ (e) => setEmail(e.target.value) } placeholder=\"Email...\" class=\"h-8 p-2 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border border-blue-500 rounded-md\"/>\n                        <input type=\"password\" value={password} onChange={ (e) => setPassword(e.target.value) } placeholder=\"Password...\" class=\"h-8 p-2 focus:ring-blue-500 focus:border-blue-500 block w-full shadow-sm sm:text-sm border border-blue-500 rounded-md\"/>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                  <a>\n                  <button type=\"button\" onClick={postRegister} class=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                    Register\n                  </button>\n                  </a>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n    )\n}\n\nexport default Register;\n","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/transition.js",[],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/NavBar.js",["124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"import React, { useState, useEffect } from 'react';\nimport '../index.css';\nimport { useAuth } from '../context/auth';\nimport { Redirect, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport ProgressBar from './ProgressBar';\nimport WarningDialog from './warningDialog';\nimport ProgressRing from './CircleProgress';\n\nlet chunkSize = 1024*1024; // 1MB\n\nfunction Navbar() {\n\n    const { setAuthTokens } = useAuth();\n    const [showModal, setShowModal] = useState(false);\n    const [foldername, setFoldername] = useState(\"\");\n    const [isError, setIsError ] = useState(false); \n    const [files, setFiles] = React.useState(null);\n    const [fileUploading, setFileUploading] = React.useState(null);\n    const [folderName, setFolderName] = useState(useParams().foldername);\n    const [counter, setCounter] = useState(1)\n    const [fileToBeUpload, setFileToBeUpload] = useState({})\n    const [beginingOfTheChunk, setBeginingOfTheChunk] = useState(0)\n    const [endOfTheChunk, setEndOfTheChunk] = useState(chunkSize)\n    const [progress, setProgress] = useState(0)\n    const [fileSize, setFileSize] = useState(0)\n    const [chunkCount, setChunkCount] = useState(0);\n    const [filename, setFilename] = useState(\"\");\n    const [fileOnSelected, setFileOnSelected] = useState(0);\n    const [totalSize, setTotalSize] = React.useState(0);\n    const [WarningDialog, setWarningDialog] = useState(false);\n    const [msg, setMsg] = useState(\"\");\n    const [usersRequestingTotal, setUsersRequestingTotal] = useState(0);\n    const token = JSON.parse(localStorage.getItem('tokens'));\n\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    function logOut() {\n        setAuthTokens(null);\n        return <Redirect to=\"/login\" />\n    }\n\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/users/friendrequests/${token.id}`)\n            .then((response) => {\n                if (response.status === 200) {\n                    setUsersRequestingTotal(response.data.length)\n                }\n            })\n    }, [])\n\n    function postItem() {\n\n        axios({method: \"POST\", url:`http://${process.env.REACT_APP_HOST_IP}:3030/addfolder/${token.id}`, data: {\n            name: foldername,\n        }}).then(result => {\n            if(result.status === 200) {\n                setShowModal(false);\n            } else {\n                setIsError(true)\n            }\n        }).catch(e => {\n            setIsError(true);\n        });\n    }\n\n    function handleChange(event) {\n        if(event.target.files.length > 1) {\n            setFileUploading(`${event.target.files.length} selected`);\n            setFiles(event.target.files);\n        } else {\n            setFileUploading(event.target.files[0].name);\n            setFiles(event.target.files);\n        }\n    }\n\n    const firstGetFileContext = () => {\n        resetChunkProperties();\n        setCounter(1);\n\n        let numb = fileOnSelected;\n\n        if(files[numb].size > 104857600) {\n            chunkSize = 10 * 1024 * 1024;\n        }\n\n        const token = JSON.parse(localStorage.getItem('tokens'));\n        //5368709120 == 5 GB\n        //52428800 == 50 MB\n        if(totalSize + files[numb].size >= 5368709120 ) {\n            setMsg('You have not enough space for this file: ' + files[numb].name);\n            setWarningDialog(true)\n        } else {\n            axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/openStream/${token.id}/${folderName}/${files[numb].name}`, {\n                cancelToken: source.token\n            })\n                .then(async response => {\n                    if(response.status === 200) {\n                        setFileSize(files[numb].size);\n\n                        const _totalCount = files[numb].size % chunkSize == 0 ? files[numb].size / chunkSize : Math.floor(files[numb].size / chunkSize) + 1;\n                        setChunkCount(_totalCount);\n\n                        setFileToBeUpload(files[numb]);\n                        setFilename(files[numb].name);\n                        //setFileOnSelected(fileOnSelected + 1);\n                    }\n                });\n        }\n    }\n\n    const getFileContext = () => {\n        resetChunkProperties();\n        setCounter(1);\n\n        let numb = fileOnSelected + 1;\n\n        if(files[numb].size > 104857600) {\n            chunkSize = 10 * 1024 * 1024;\n        }\n    \n        const token = JSON.parse(localStorage.getItem('tokens'));\n        \n        if(totalSize + files[numb].size >= 5368709120) {\n            setMsg('You have not enough space for this file');\n            setWarningDialog(true)\n        } else {\n            axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/openStream/${token.id}/${folderName}/${files[numb].name}`, {\n                cancelToken: source.token\n            })\n                .then(async response => {\n                    if(response.status === 200) {\n                        setFileSize(files[numb].size);\n\n                        const _totalCount = files[numb].size % chunkSize == 0 ? files[numb].size / chunkSize : Math.floor(files[numb].size / chunkSize) + 1;\n                        setChunkCount(_totalCount);\n\n                        setFileToBeUpload(files[numb]);\n                        setFilename(files[numb].name);\n\n                        setFileOnSelected(fileOnSelected + 1);\n                    }\n                });\n        }\n    }\n\n    const resetChunkProperties = () => {\n        setProgress(0);\n        setCounter(1);\n        setBeginingOfTheChunk(0);\n        setEndOfTheChunk(chunkSize);\n        setFileSize(0);\n        setChunkCount(0);\n        setFileToBeUpload({});\n    }\n\n    useEffect(() => {\n        if (fileSize > 0) {\n            fileUpload(counter);\n        }\n    }, [fileToBeUpload, progress]);\n\n    useEffect(() => {\n        axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/directorySize/${token.id}`)\n        .then(res => {\n            if(res.status === 200) {\n                setTotalSize(res.data.total)\n            }\n      } )\n    })\n\n    const fileUpload = () => {\n        setCounter(counter + 1);\n        if (counter <= chunkCount) {\n          var chunk = fileToBeUpload.slice(beginingOfTheChunk, endOfTheChunk);\n          uploadChunk(chunk)\n        }\n      }\n\n      const uploadChunk = async (chunk) => {\n          \n        try {\n            const response = await axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/UploadChunks`, chunk, {\n                headers: {\n                    'Content-Type': 'application/octet-stream',\n                },\n                cancelToken: source.token\n            });\n\n            const data = response.data;\n\n            if (response.status === 200) {\n                let numb = fileOnSelected;\n                if(files[numb].size > 104857600) {\n                    chunkSize = 10 * 1024 * 1024;\n                }\n\n                setBeginingOfTheChunk(endOfTheChunk);\n                setEndOfTheChunk(endOfTheChunk + chunkSize);\n\n                if(counter == chunkCount) {\n                    console.log('Process is complete, counter', counter)\n                    await uploadCompleted();\n                } else {\n                    var percentage = Math.floor((counter / chunkCount) * 100);\n                    setProgress(percentage);\n                }\n            } else {\n                console.log('Error Occurred:', data)\n            }\n        } catch (error) {\n            console.log('error', error)\n        }\n      }\n\n      const uploadCompleted = async () => {\n        if(files.length > 1) {\n            setFileOnSelected(fileOnSelected + 1);\n        }\n\n        const token = JSON.parse(localStorage.getItem('tokens'));\n\n        let numb = 0;\n\n        if(files.length > 1) {\n            numb = fileOnSelected;\n        }\n\n        const response = await axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/addfiles/${token.id}/${folderName}/${files[numb].name}`, {\n            cancelToken: source.token\n        });\n        if (response.status === 200) {\n          setProgress(100);\n          if(files.length == 1) {\n              setTimeout(() => {\n                  resetChunkProperties();\n                  setShowModal(false);\n                  setFileUploading(null);\n                  window.location.reload();\n              }, 1000);\n          } else {\n            if(files.length - 1 === fileOnSelected) {\n                setTimeout(() => {\n                    resetChunkProperties();\n                    setShowModal(false);\n                    setFileUploading(null);\n                    window.location.reload();\n                }, 1000);\n            } else {\n                setTimeout(() => {\n                    getFileContext();\n                }, 1000);\n            }\n          }\n        }\n      }\n\n    // function cancelHandler() {\n    //     resetChunkProperties();\n    //     setFiles({});\n    //     setFileOnSelected(0);\n\n    //     source.cancel();\n    //     window.location.reload();\n    // }\n    \n    return (\n\n      <>\n        <div className='flex flex-col flex-none relative w-16 justify-between items-center p-4 bg-gray-100'>\n            <div className='flex flex-col items-center space-y-6'>\n                <a href=\"/\">\n                    <svg className=\"w-12 h-12\" fill=\"#4299e1\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" d=\"M9.504 1.132a1 1 0 01.992 0l1.75 1a1 1 0 11-.992 1.736L10 3.152l-1.254.716a1 1 0 11-.992-1.736l1.75-1zM5.618 4.504a1 1 0 01-.372 1.364L5.016 6l.23.132a1 1 0 11-.992 1.736L4 7.723V8a1 1 0 01-2 0V6a.996.996 0 01.52-.878l1.734-.99a1 1 0 011.364.372zm8.764 0a1 1 0 011.364-.372l1.733.99A1.002 1.002 0 0118 6v2a1 1 0 11-2 0v-.277l-.254.145a1 1 0 11-.992-1.736l.23-.132-.23-.132a1 1 0 01-.372-1.364zm-7 4a1 1 0 011.364-.372L10 8.848l1.254-.716a1 1 0 11.992 1.736L11 10.58V12a1 1 0 11-2 0v-1.42l-1.246-.712a1 1 0 01-.372-1.364zM3 11a1 1 0 011 1v1.42l1.246.712a1 1 0 11-.992 1.736l-1.75-1A1 1 0 012 14v-2a1 1 0 011-1zm14 0a1 1 0 011 1v2a1 1 0 01-.504.868l-1.75 1a1 1 0 11-.992-1.736L16 13.42V12a1 1 0 011-1zm-9.618 5.504a1 1 0 011.364-.372l.254.145V16a1 1 0 112 0v.277l.254-.145a1 1 0 11.992 1.736l-1.735.992a.995.995 0 01-1.022 0l-1.735-.992a1 1 0 01-.372-1.364z\" clip-rule=\"evenodd\"></path></svg>\n                </a>\n                <a className='tooltip' href='/'>\n                    <span className='tooltiptext shadow-lg font-semibold'>Collection</span>\n                    <svg className=\"w-8 h-8 \" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"></path></svg>\n                </a>\n                <a className='tooltip cursor-pointer' style={{ transition: \"all .15s ease\" }} onClick={() => setShowModal({\n                    showModal: true,\n                    name: 'Add Folder',\n                    add_folder: true,\n                    upload_folder: false,\n                    add_files: false\n                })}>\n                    <span className='tooltiptext shadow-lg font-semibold'>Add Folder</span>\n                    <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\"></path></svg>\n                </a>\n                <botton className=\"tooltip cursor-pointer\" style={{ transition: \"all .15s ease\" }} onClick={()=> setShowModal({\n                    showModal: true,\n                    name: 'Add file(s)',\n                    add_folder: false,\n                    upload_folder: false,\n                    add_files: true\n                })}>\n                     <span className='tooltiptext shadow-lg font-semibold'>Add File(s)</span>\n                    <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 13h6m-3-3v6m5 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path></svg>\n                </botton>\n                <botton className=\"tooltip cursor-pointer\" style={{ transition: \"all .15s ease\" }} onClick={()=> setShowModal({\n                    showModal: true,\n                    name: 'Upload Folder',\n                    add_folder: false,\n                    upload_folder: true,\n                    add_files: false\n                })}>\n                     <span className='tooltiptext shadow-lg font-semibold'>Upload Folder</span>\n                     <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-8l-4-4m0 0L8 8m4-4v12\"></path></svg>\n                </botton>\n                <a className='tooltip' href=\"/friendspage\">\n                    <span className='tooltiptext shadow-lg font-semibold'>Friends</span>\n                    <div className=\"relative w-8 h-8\">\n                        <svg class=\"w-full h-full\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"></path></svg>\n                        {usersRequestingTotal != 0 ? (\n                            <div class=\"absolute flex top-0 right-0 h-4 w-4 my-1 border-2 border-white rounded-full bg-red-400 items-center justify-center z-2\">\n                                <p className=\"text-white font-medium text-xs\">{usersRequestingTotal}</p>\n                            </div>\n                        ) : null}\n                    </div>\n                </a >\n                <a className='tooltip' href=\"/myprofile\" >\n                    <span className='tooltiptext shadow-lg font-semibold'>My Profile</span>\n                    {token.profile_pic != null && <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + token.profile_pic} className=\"object-cover w-11 h-11 rounded-full hover:opacity-70\" />}\n                    {token.profile_pic == null && <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>}\n                </a>\n            </div>\n\n            <div className='flex flex-col pb-3 space-y-6'>\n                <button className='tooltip' onClick={logOut}>\n                    <span className='tooltiptext shadow-lg font-semibold'>Logout</span>\n                    <svg className=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"></path></svg>\n                </button>\n            </div>\n        </div>\n        <>\n        {showModal ? (\n            <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                <form>\n                <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                    <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                </div>\n                <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n                <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                    <div className=\"bg-white px-4 pt-5 pb-2 sm:p-1 sm:pt-6 sm:pb-4\">\n                    <div className=\"min-w-0 sm:flex sm:items-start\">\n                        <div className=\"w-full mt-3 text-center sm:mt-0 sm:ml-4 sm:mr-4 sm:text-left\">\n                            <h3 className=\"text-lg leading-6 font-medium text-blue-500\" id=\"modal-headline\">\n                                {showModal.name}\n                            </h3>\n                            <div className=\"mt-2\">\n                                {showModal.add_folder && (\n                                    <>\n                                        { isError && <p>Please fill foldername in!</p> }\n                                        <input type=\"text\" value={foldername} onChange={ (e) => setFoldername(e.target.value) } placeholder=\"Name...\" name=\"name\" className=\" h-8 p-2 focus:ring-blue-500 focus:border-blue-500 border border-blue-500 block w-full sm:text-sm rounded-md shadow-xl\"/>\n                                    </>\n                                )}\n                                {showModal.add_files && (\n                                    <>\n                                    {progress > 0 && (\n                                        <div>\n                                            <ProgressBar \n                                                filename={filename}\n                                                progress={progress}\n                                            />\n                                            <div className=\"mt-2 flex flex-row justify-between\">\n                                                <p>Completed: {fileOnSelected}/{files == null ? \"0\" : files.length}</p>\n                                                <ProgressRing\n                                                     strokeWidth=\"3\"\n                                                     sqSize=\"25\"\n                                                     percentage={files == null ? 0 : (fileOnSelected/files.length) * 100}\n                                                />\n                                            </div>\n                                        </div>\n                                    )}\n                                    {progress === 0 && (\n                                        <>\n                                        {folderName == undefined ? (\n                                            <p>No Folder Selected</p>\n                                        ) : (\n                                            <label className=\"w-full h-10 flex flex-row items-center space-x-4 px-4 py-6 bg-white text-blue-500 rounded-lg shadow-lg tracking-wide uppercase border border-blue cursor-pointer hover:bg-blue-500 hover:text-white\">\n                                                <svg className=\"w-6 h-6\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                                                    <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\n                                                </svg>\n                                                <span className=\"text-base leading-normal\">{ \n                                                    fileUploading != null ? fileUploading : 'Select File(s)'\n                                                }</span>\n                                                <input type='file' className=\"hidden\" onChange={handleChange} multiple />\n                                            </label>\n                                        )}\n                                        </>\n                                    )}\n                                    </>\n                                )}\n                                {showModal.upload_folder && (\n                                    <>\n                                    {progress > 0 && (\n                                        <div>\n                                            <ProgressBar \n                                                filename={filename}\n                                                progress={progress}\n                                            />\n                                            <div className=\"mt-2 flex flex-row justify-between\">\n                                                <p>Completed: {fileOnSelected}/{files == null ? \"0\" : files.length}</p>\n                                                <ProgressRing\n                                                     strokeWidth=\"3\"\n                                                     sqSize=\"25\"\n                                                     percentage={files == null ? \"0\" : (fileOnSelected / files.length) * 100}\n                                                />\n                                            </div>\n                                        </div>\n                                    )}\n                                    {progress === 0 && (\n                                        <>\n                                        {folderName == undefined ? (\n                                            <p>No Folder Selected</p>\n                                        ) : (\n                                            <label className=\"w-full h-10 flex flex-row items-center space-x-4 px-4 py-6 bg-white text-blue-500 rounded-lg shadow-lg tracking-wide uppercase border border-blue cursor-pointer hover:bg-blue-500 hover:text-white\">\n                                                <svg className=\"w-6 h-6\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                                                    <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\n                                                </svg>\n                                                <span className=\"text-base leading-normal\">{ \n                                                    fileUploading != null ? fileUploading : 'Select File(s)'\n                                                }</span>\n                                                <input type='file' className=\"hidden\" onChange={handleChange} multiple webkitdirectory=\"\" directory=\"\" />\n                                            </label>\n                                        )}\n                                        </>\n                                    )}\n                                    </>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                    <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                    <>\n\n                    {showModal.add_folder ? (\n                        <button type=\"submit\" onClick={postItem} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                            Add\n                        </button>\n                    ) : (\n                        <>\n                        {folderName == undefined ? null : (\n                            <button type=\"button\" onClick={() => firstGetFileContext()} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Add\n                            </button>\n                        )}\n                        </>\n                    )}\n                    <button type=\"button\" onClick={() => setShowModal(false)} className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                        Cancel\n                    </button>\n                    </>\n                    </div>\n                </div>\n                </form>\n            </div>\n            </div>\n        ): null}\n        <>\n        {WarningDialog ? (\n            <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n                <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                    <form>\n                    <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                        <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                    </div>\n                    <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n                    <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                        <div className=\"bg-white px-4 pt-5 pb-2 sm:p-1 sm:pt-6 sm:pb-4\">\n                        <div className=\"min-w-0 sm:flex sm:items-start\">\n                            <div className=\"w-full mt-3 text-center sm:mt-0 sm:ml-4 sm:mr-4 sm:text-left\">\n                            <h3 className=\"text-lg leading-6 font-medium text-red-500\" id=\"modal-headline\">\n                                Warning!\n                            </h3>\n                            <div className=\"mt-2\">\n                                <p>{msg}</p>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                        <div className=\"flex flew-row bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                        <button type=\"submit\" onClick={()=> {\n                            setWarningDialog(false)\n                            window.location.reload();\n                        }} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-500 text-base font-medium text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                            Close\n                        </button>\n                        </div>\n                    </div>\n                    </form>\n                </div>\n            </div>\n        ) : null}\n        </>\n        </>\n      </>\n    )\n}\n\nexport default Navbar;","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/folders.js",["138"],"import React from 'react';\nimport axios from 'axios';\n\nclass FolderList extends React.Component {\n    state = {\n        folders: []\n    }\n\n    constructor(props) {\n        super(props);\n        this.getFiles = this.props.getFiles;\n    }\n    \n    componentDidMount() {\n        const token = JSON.parse(localStorage.getItem('tokens'));\n        axios({method: 'GET', url:`http://${process.env.REACT_APP_HOST_IP}:3030/folders/${token.id}`})\n            .then(res => {\n            const folders = res.data;\n            this.setState({ folders });\n        })\n    }\n\n    render() {\n        return (\n        <>\n            {this.state.folders.map(folder => (\n                <a className=\"block border-b cursor-pointer\" href={`/collection/folder/${folder.name}/${folder.folder_id}`}>\n                    <div className={folder.name == this.props.selectedName ? styles.selected : styles.default}>\n                        <div className=\"flex flex-row items-center space-x-2\">\n                            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-6l-2-2H5a2 2 0 00-2 2z\"></path></svg>\n                            <strong className=\"flex-grow font-normal\">{folder.name}</strong>\n                        </div>\n                    </div>\n                </a>\n            ))}\n        </>\n        )\n    }\n}\n\nconst styles = {\n    default: \"border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100 p-3 space-y-4\",\n    selected: \"border-l-2 border-blue-500 bg-blue-100 p-3 space-y-4\"\n}\n\nexport default FolderList;","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/context/useBreakpoint.js",[],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/context/tailwind.config.js",[],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/files.js",["139"],"import React, { Component } from 'react';\nimport Axios from 'axios';\n\nclass File extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.folderId = props.folderId;\n        this.fileshowing = props.fileShowing;\n        this.state = {\n            files: [],\n            file: null,\n        }\n    }\n\n    componentDidMount() {\n        Axios({method: 'GET', url:`http://${process.env.REACT_APP_HOST_IP}:3030/folders/folder/` + this.folderId})\n          .then(res => {\n            if(res.status === 200) {\n              if(res.data !== \"no data\") {\n                const files = res.data;\n                this.setState({ files });\n              } \n            }\n        });\n    }\n    \n    render() {\n\n        return (\n            <div>\n            {this.state.files.map((file => {\n                return (\n                    <div className=\"border-b\">\n                        <div className=\"flex flex-row items-center border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100\">\n                            <a className=\"flex-auto cursor-pointer \" onClick={() => {\n                                this.fileshowing(file.path, file.name, file.is_image, file.file_id);\n                            }}>\n                                <div className=\"p-3 space-y-4\">\n                                    <div className=\"flex flex-row items-center space-x-2\">\n                                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"></path></svg>\n                                        <strong className=\"flex-grow text-sm font-normal\">{file.name}</strong>\n                                    </div>\n                                </div>\n                            </a>\n                            <div className=\"flex-none flex flex-row space-x-2 mr-2\">\n                                <button onClick={() => this.props.renameFile({\n                                    name: file.name.split('.')[0],\n                                    ext: file.name.split('.')[1],\n                                    fileId: file.file_id\n                                })}>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"></path></svg>\n                                </button>\n                                <button onClick={() => {\n                                    this.props.downloadFunction(file.name, file.path, file.name, file.is_image)\n                                }}>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path></svg>\n                                </button>\n                                <button onClick={()=>this.props.deletefile(file.file_id)}>\n                                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path></svg>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }))}\n            \n            </div>\n        )\n    }\n}\n\nexport default File;","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/pages/collection.js",["140","141","142","143","144","145"],"import '../index.css';\nimport React, {useEffect} from 'react';\nimport Transition from '../components/transition';\nimport Navbar from '../components/NavBar'\nimport FolderList from '../components/folders';\nimport File from '../components/files';\nimport Axios from 'axios';\nimport { useParams, useHistory } from 'react-router-dom';\nimport useFileDownloader from '../hooks/useFileDownloader'\nimport FileShow from '../components/FileShow';\nimport SelecingFiles from '../components/SelectingFiles';\nimport ProgressBar from '../components/ProgressBar';\n//import {selectAll} from '../components/SelectingFiles';\n\nfunction Collection() {\n  let history = useHistory();\n\n  const token = JSON.parse(localStorage.getItem('tokens'));\n\n  const [showFolders, setShowFolders] = React.useState(true);\n  const [foldername, setFoldername] = React.useState(useParams().foldername);\n  const folderId = useParams().folderId;\n  const [fileshow, setFileshow] = React.useState(false);\n  const [showSettings, setShowSettings] = React.useState(false);\n  const [rename, setRename] = React.useState(false);\n  const [newFoldername, setNewFoldername] = React.useState(foldername);\n  const [isfolderWarning, setFoldernameWarning] = React.useState(false);\n  const [isSelecting, setIsSelecting] = React.useState(false);\n  const [selected, setSelected] = React.useState([]);\n  const [showModal, setShowModal] = React.useState(false);\n  const [isError, setIsError] = React.useState(null);\n  const [newName, setNewName] = React.useState(null);\n  const [progress, setProgress] = React.useState(0);\n  const [usedSpace, setUsedSpace] = React.useState(0);\n  const [totalSize, setTotalSize] = React.useState(0);\n\n  const [file, setFile] = React.useState({\n    name: null,\n    file: null,\n    filename: null,\n    is_image: false,\n  });\n\n  const [folder, setFolder] = React.useState({\n    name: foldername,\n    folder: token.id + \"/\" + foldername,\n  });\n\n  useEffect(() => {\n    Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/directorySize/${token.id}`)\n      .then(res => {\n        if(res.status === 200) {\n          var percentage = res.data.totalSizeBytes\n          setProgress(percentage)\n          setUsedSpace(res.data.totalSize)\n        }\n      })\n  })\n\n  const [downloadFile, donwloadfolder, downloaderComponent] = useFileDownloader();\n\n  const download = (file) => downloadFile(file);\n\n  const downloadfolder = (file) => downloadfolder(file);\n\n  function  downloadFunction(name, path, filename, is_image) {\n    const fileDown = {\n      name: name,\n      file: path,\n      filename: filename,\n      is_image: is_image\n    };\n\n    download(fileDown)\n  }\n\n  function fileShowing(filePath, fileName, is_image, fileId) {\n    setFileshow(!fileshow);\n    setFile({\n      name: fileName,\n      file: filePath,\n      is_image: is_image,\n      fileId: fileId\n    })\n  }\n\n  function renameFolder(e) {\n    e.preventDefault();\n    Axios({method: 'POST', url: `http://${process.env.REACT_APP_HOST_IP}:3030/renamefolder/${folderId}`, data: {\n      name: newFoldername,\n    }}).then(async result => {\n      if (result.status === 200) {\n        setRename(false);\n        await history.push(`/collection/folder/${result.data.name}/${folderId}`);\n        window.location.reload();\n      } else {\n        console.error(result.data)\n      }\n    }).catch(err => console.log(err));\n\n  }\n\n  function deletefile(fileId) {\n    Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/deletefile/${fileId}`)\n      .then(res => {\n        if (res.status === 200) {\n          console.log(res.data);\n          window.location.reload();\n        } else {\n          console.error(res.data)\n        }\n      })\n  }\n\n  function deleteFolder(e) {\n    e.preventDefault();\n    Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/deletefolder/${folderId}`)\n      .then(async res => {\n        if(res.status === 200) {\n          await history.push('/');\n          window.location.reload();\n        }\n      })\n  }\n\n  function deleteSelected() {\n    selected.forEach(async file => {\n      const fileId = file.fileId;\n\n      await deletefile(fileId);\n      console.log('deleted');\n    })\n  }\n\n  function downloadSelected() {\n    selected.forEach(async file => {\n      download(file)\n    })\n  }\n\n  function renameFile(file) {\n    console.log(file);\n    setNewName(file.name)\n    setShowModal({\n      showModal: true,\n      fileId: file.fileId,\n      ext: file.ext,\n    });\n  }\n\n  function submitRename(fileId) {\n\n    const token = JSON.parse(localStorage.getItem('tokens'));\n    \n    const data = {\n      name: newName + '.' + showModal.ext,\n      foldername: foldername,\n      userId: token.id,\n      fileId: showModal.fileId\n    }\n\n    Axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/renamefile/${folderId}/${fileId}`, data)\n      .then(response => {\n        if(response.status === 200) {\n          setShowModal(false);\n          window.location.reload();\n        } else if(response.status === 201){\n          setIsError('There is a file with this name in the folder');\n        } else {\n          setIsError(response.data);\n        }\n      })\n\n  }\n\n  return (\n    <div className='flex flex-row h-screen bg-gray-100'>\n      \n      <Navbar />\n\n      <Transition\n        show={showFolders}\n        enter=\"transition-all duration-500\"\n        enterFrom=\"-ml-64\"\n        enterTo=\"ml-0\"\n        leave=\"transition-all duration-500\"\n        leaveTo=\"-ml-64\">\n        <div className='w-64 flex-none bg-gray-100 p-4 flex flex-col justify-between'>\n            <div className=\"flex flex-col space-y-4\">\n              <div className=\"flex flex-row flex-none p-4 border-b justify-between items-center mb-6\">\n                <h1 className=\"font-semibold text-2xl\">Folders</h1>\n                <svg class=\"w-8 h-8 hover:text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 16l2.879-2.879m0 0a3 3 0 104.243-4.242 3 3 0 00-4.243 4.242zM21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n              </div>\n              <div className=\"flex-auto overflow-y-auto flex flex-col\">\n                <FolderList selectedName={foldername} />\n              </div>\n            </div>\n            <div className=\"flex flex-col space-y-2 items-center\">\n              <div className=\"w-full h-16 border-t \">\n                <div>\n                    <div className=\"relative pt-2\">\n                        <div className=\"flex mb-2 items-center justify-between\">\n                            <div>\n                                <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-blue-600 bg-blue-200\">\n                                    Available Space\n                                </span>\n                            </div>\n                            <div className=\"flex flex-row items-center space-x-2 text-right\">\n                                <span className=\"text-xs font-semibold inline-block text-blue-600\">\n                                    { progress > 0 && usedSpace + '/5.0 GB' }\n                                </span>\n                            </div>\n                        </div>\n                        <div className=\"overflow-hidden h-2 text-xs flex rounded bg-blue-200\">\n                            <div style={{ width: progress + '%' }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-blue-500\"></div>\n                        </div>\n                    </div>\n                </div>\n              </div>\n            </div>\n        </div>\n      </Transition>\n      \n      <div className='flex flex-row flex-auto bg-white rounded-tl-xl rounded-bl-xl border-l border-r border-gray-400 shadow-xl'>\n        <div className=\"w-full flex flex-col p-4\">\n          <div className=\"flex-none h-16 flex flex-row justify-between items-center border-b\">\n            <div className=\"flex flex-row space-x-2\">\n              <button onClick={() => setShowFolders(!showFolders)}>\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h8m-8 6h16\"></path></svg>\n              </button>\n              <>\n              {rename ? (\n                <form className=\"flex flex-row\">\n                  <input type=\"text\" value={newFoldername} onChange={ (e) => setNewFoldername(e.target.value) } placeholder=\"Name...\" name=\"name\" className=\" h-8 p-2 focus:ring-blue-500 focus:border-blue-500 border border-blue-500 block w-full sm:text-sm rounded-md shadow-sm\"/>\n                  <button onClick={(e) => {renameFolder(e)}} className=\"h-8 rounded-md border border-transparent shadow-sm px-4 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                    Rename\n                    </button>\n                </form>\n              ) : <h1 className=\"font-bold\">{foldername}</h1>}\n              </>\n            </div>\n            <div className=\"flex flex-row space-x-4\">\n              {/* {isSelecting && (\n                <button onClick={selectAll}>\n                  Select All\n                </button>\n              )} */}\n              <button className={!isSelecting ? styles.default : styles.selecting} onClick={() => setIsSelecting(!isSelecting)}>Select</button>\n              {isSelecting && (\n                <button onClick={downloadSelected}>\n                  <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path></svg>\n                </button>\n              )}\n              {isSelecting && (\n                <button onClick={deleteSelected}>\n                  <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path></svg>\n                </button>\n              )}\n              {!isSelecting && (\n                <button onClick={() => donwloadfolder(folder)}>\n                  <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4\"></path></svg>\n                </button>\n              )}\n              {!isSelecting && (\n                <button onClick={() => setShowSettings(!showSettings)}>\n                  <svg class=\"w-8 h-8\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z\"></path></svg>\n                </button>\n              )}\n              \n            </div>\n          </div>\n          <div className=\"flex-auto overflow-y-auto\">\n            <div>\n              {isSelecting ? (\n                <SelecingFiles \n                  folderId={folderId}\n                  setSelected={setSelected}\n                />\n              ) : (\n                <File \n                  downloadFunction={downloadFunction} \n                  deletefile={deletefile} \n                  fileShowing={fileShowing} \n                  fileshow={fileshow} \n                  folderId={folderId}\n                  IsSelecting={isSelecting}\n                  renameFile={renameFile} \n                />\n              )}\n            </div>\n          </div>\n        </div>\n        <>\n        {fileshow ? (     \n          <FileShow setFileshow={setFileshow} file={file} />\n        ) : null}\n        </>\n        <>\n          {downloaderComponent}\n        </>\n      </div>\n\n      <>\n        {showSettings ? (\n          <div className=\"absolute flex flex-col justify-center w-52 h-32 bg-gray-100 rounded-md right-2 top-20\">\n          <button className=\"block border-b border-t cursor-pointer\" onClick={()=> { setRename(true); setShowSettings(false) }}>\n            <div className=\"border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100 p-3 space-y-4\">\n              <div className=\"flex flex-row items-center space-x-2\">\n                  <strong className=\"flex-grow font-normal\">Rename</strong>\n              </div>\n            </div>\n          </button>\n          <button className=\"block border-b cursor-pointer\" onClick={()=> { setFoldernameWarning(true)}}>\n            <div className=\"border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100 p-3 space-y-4\">\n                <div className=\"flex flex-row items-center space-x-2\">\n                    <strong className=\"flex-grow font-normal text-red-500\">Delete</strong>\n                </div>\n            </div>\n          </button>\n        </div>\n        ) : null}\n      </>\n\n        <>\n          {isfolderWarning ? (\n            <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                <form>\n                <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                    <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                </div>\n                <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n                <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                    <div className=\"bg-white px-4 pt-5 pb-2 sm:p-1 sm:pt-6 sm:pb-4\">\n                    <div className=\"min-w-0 sm:flex sm:items-start\">\n                        <div className=\"w-full mt-3 text-center sm:mt-0 sm:ml-4 sm:mr-4 sm:text-left\">\n                          <h3 className=\"text-lg leading-6 font-medium text-red-500\" id=\"modal-headline\">\n                              Warning!\n                          </h3>\n                          <div className=\"mt-2\">\n                              <p>Are you sure you want to delete this folder?</p>\n                          </div>\n                        </div>\n                    </div>\n                    </div>\n                    <div className=\"flex flew-row bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                    <button type=\"submit\" onClick={(e)=> deleteFolder(e)} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-500 text-base font-medium text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                        Delete\n                    </button>\n                    <button type=\"button\" onClick={() => setShowModal(false)} className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                        Cancel\n                    </button>\n                    </div>\n                </div>\n                </form>\n            </div>\n            </div>\n          ) : null}\n        </>\n\n        <>\n        {showModal ? (\n            <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n            <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                <form>\n                <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                    <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                </div>\n                <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n                <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                    <div className=\"bg-white px-4 pt-5 pb-2 sm:p-1 sm:pt-6 sm:pb-4\">\n                    <div className=\"min-w-0 sm:flex sm:items-start\">\n                        <div className=\"w-full mt-3 text-center sm:mt-0 sm:ml-4 sm:mr-4 sm:text-left\">\n                            <h3 className=\"text-lg leading-6 font-medium text-blue-500\" id=\"modal-headline\">\n                              Rename file\n                            </h3>\n                            <div className=\"mt-2\">\n\n                              { isError && <p>Please fill foldername in!</p> }\n                              <input type=\"text\" value={newName} onChange={(e) => setNewName(e.target.value)} placeholder=\"Name...\" name=\"name\" className=\" h-8 p-2 focus:ring-blue-500 focus:border-blue-500 border border-blue-500 block w-full sm:text-sm rounded-md shadow-xl\"/>\n                            \n                            </div>\n                        </div>\n                    </div>\n                    </div>\n                    <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                      <button type=\"button\" onClick={() => submitRename(showModal.fileId)} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                          Add\n                      </button>\n                      <button type=\"button\" onClick={() => setShowModal(false)} className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                          Cancel\n                      </button>\n                    </div>\n                </div>\n                </form>\n            </div>\n            </div>\n        ): null}\n        </>\n\n    </div>\n  );\n}\n\nconst styles = {\n  selecting: \"px-2 py-1 rounded-md border-2 border-blue-500 bg-blue-500 text-white hover:bg-white hover:text-blue-500 font-semibold transition duration-300 outline-none focus:outline-none\",\n  default: \"px-2 py-1 rounded-md border-2 border-blue-500 text-blue-500 hover:bg-blue-500 hover:text-white font-semibold transition duration-300 outline-none focus:outline-none\",\n}\n\nexport default Collection;\n","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/pages/home.js",[],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/pages/myProfile.js",[],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/profile.js",["146"],"import Axios from 'axios';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Profile extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: {},\n            updatedUser: {},\n            avatar: {},\n        }\n    }\n\n    componentDidMount() {\n        const token = JSON.parse(localStorage.getItem('tokens'));\n\n        Axios({method: 'GET', url: `http://${process.env.REACT_APP_HOST_IP}:3030/myprofile/${token.id}`})\n            .then(res => {\n                if(res.status === 200) {\n                    this.setState({\n                        user: res.data,\n                        updatedUser: res.data,\n                        hovered: false\n                    });\n                    console.log(res.data);\n                }\n            }).catch(e => console.log(e));\n    }\n\n    UpdatingUser = (user) => {\n        const data = {\n            firstname: user.firstname,\n            lastname: user.lastname,\n            email: user.email\n        }\n\n        axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/updateuser/${user.id}`, data)\n            .then(res => {\n                if(res.status === 200) {\n                    this.props.setIsUpdating(false);\n                    window.location.reload();\n                }\n            })\n\n    }\n\n    UpdatingUserPic = (user) => {\n        console.log('pok');\n    }\n\n    handleEvent = () => {\n        var input = document.getElementById('upload');\n        input.click();\n    }\n\n    handleChange = async (e) => {\n        const data  = new FormData();\n        data.append('file', e.target.files[0]);\n\n        const token = JSON.parse(localStorage.getItem('tokens'));\n\n        Axios.post(`http://${process.env.REACT_APP_HOST_IP}:3030/uploadPic/${token.id}`, data, {\n            onUploadProgress: (ProgressEvent) => {\n                console.log(ProgressEvent.loaded);\n            }\n        })\n        .then((res) => {\n            if(res.status === 200) {\n                const data = {\n                    ...token,\n                    profile_pic: res.data.profile_pic\n                }\n                localStorage.setItem('tokens', JSON.stringify(data))\n                window.location.reload();\n            } else {\n                console.log(res.data);\n            }\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <div className='flex flex-col space-y-16 items-center p-6'>\n                    <div onClick={this.handleEvent} id=\"div\" onMouseEnter={()=> this.setState({hovered: true})} onMouseLeave={()=> this.setState({hovered: false})} className='flex cursor-pointer rounded-full h-32 w-32 hover:bg-gray-200 justify-center items-center focus:outline-none'>\n                        {this.state.hovered && (\n                            <svg class=\"w-10 h-10 absolute\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"></path></svg>\n                        )}\n                        <input type=\"file\" id=\"upload\" onChange={(e) => this.handleChange(e)} accept=\"image/*\" hidden=\"true\" />\n                        {this.state.user.profile_pic != null && <img src={\"http://\" + process.env.REACT_APP_HOST_IP + \":3030\" + this.state.user.profile_pic} className=\"absolute object-cover w-32 h-32 rounded-full hover:opacity-10\" />}\n                        {this.state.user.profile_pic == null && <svg id=\"svgProfile\" class=\"w-32 h-32 text-gray-900 stroke-1 hover:opacity-10\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>}\n                    </div>\n                    <div className=\"flex flex-col items-center space-y-8\">\n                        <div className=\"flex flex-col items-center space-y-2\">\n                            {!this.props.isUpdating ? (\n                                <>\n                                <div className='flex flex-row space-x-1'>\n                                    <p>name: </p>\n                                    <p>{this.state.user.firstname}</p>\n                                    <p>{this.state.user.lastname}</p>\n                                </div>\n                                <p>email: {this.state.user.email}</p>\n                                </>\n                            ): (\n                                <div className='flex flex-col space-y-2'>\n                                    <input type=\"text\" value={this.state.updatedUser.firstname} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser, firstname: e.target.value}})} className={styles.input} />\n                                    <input type=\"text\" value={this.state.updatedUser.lastname} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser ,lastname: e.target.value}})} className={styles.input} />\n                                    <input type=\"email\" value={this.state.updatedUser.email} onChange={(e) => this.setState({updatedUser: {...this.state.updatedUser , email: e.target.value}})} className={styles.input} />\n                                </div>\n                            )}\n                        </div>\n                        {this.props.isUpdating ? (\n                            <button type=\"button\" onClick={() => this.UpdatingUser(this.state.updatedUser)} className=\"w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Update profile\n                            </button> \n                        ): (\n                            <button type=\"button\" onClick={() => this.props.setIsUpdating(!this.props.isUpdating)} className=\"w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-500 text-base font-medium text-white hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Update profile\n                            </button> \n                        )}\n                        {this.props.isUpdating && (\n                            <button type=\"button\" onClick={() => this.props.setIsUpdating(!this.props.isUpdating)} className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\">\n                                Cancel\n                            </button>\n                        )}\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nconst styles = {\n    input: \"w-64 h-8 p-2 focus:ring-blue-500 focus:border-blue-500 border border-blue-500 sm:text-sm rounded-md shadow-xl\"\n}\n\nexport default Profile;","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/Downloader.js",["147","148"],"import React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\n\nconst Downloader = ({ files = [], remove }) => {\n    return (\n        <div className=\"fixed bg-white w-96 min-h-down right-2 bottom-2 max-h-60 overflow-y-auto border rounded-md shadow-xl\">\n            <div>\n                <div className=\"bg-gray-100 p-2\">File Downloader</div>\n                <ul className=\"max-h-48 p-4 overflow-hidden overflow-y-auto\">\n                    {files.map((file, idx) => {\n                        if(file.is_folder) {\n                            return (<DonwloadFolder \n                                key={idx}\n                                removeFile={()=> remove(file.downloadId)}\n                                name={file.name}\n                                folder={file.folder}\n                            />)\n                        } else {\n                            return(<DownloadItem\n                                key={idx}\n                                removeFile={() => remove(file.downloadId)}\n                                {...file}\n                            />)\n                        }\n                    })}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nconst DownloadItem = ({ name, file, filename, removeFile }) => {\n    const CancelToken = Axios.CancelToken;\n    const source = CancelToken.source();\n\n    const [downloadInfo, setDownloadInfo] = useState({\n        progress: 0,\n        completed: false,\n        total: 0,\n        loaded: 0\n    });\n\n    useEffect(() => {\n        const options = {\n            onDownloadProgress: (progressEvent) => {\n                const { loaded, total } = progressEvent;\n\n                setDownloadInfo({\n                    progress: Math.floor((loaded * 100) / total),\n                    loaded,\n                    total,\n                    completed: false,\n                })\n            }\n        }\n\n        Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030` + file, {\n                responseType: \"blob\",\n                ...options,\n                headers: {\n                    'X-Requested-With': 'XMLHttpRequest',\n                    'Access-Control-Allow-Origin': '*'\n                },\n                cancelToken: source.token\n            }).then(function (response) {\n        \n            const url = window.URL.createObjectURL(\n                new Blob([response.data], {\n                type: response.headers[\"content-type\"],\n                })\n            );\n        \n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.setAttribute(\"download\", filename);\n            document.body.appendChild(link);\n            link.click();\n        \n            setDownloadInfo((info) => ({\n                ...info,\n                completed: true,\n            }));\n        \n            setTimeout(() => {\n                removeFile();\n            }, 4000);\n        });\n    }, []);\n\n    return (\n        <li className=\"w-full h-16 border-b \">\n            <div>\n            <div className=\"relative pt-2\">\n                <div className=\"flex mb-2 items-center justify-between\">\n                    <div>\n                        <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-blue-600 bg-blue-200\">\n                            {name}\n                        </span>\n                    </div>\n                    <div className=\"flex flex-row items-center space-x-2 text-right\">\n                        <span className=\"text-xs font-semibold inline-block text-blue-600\">\n                            { downloadInfo.loaded > 0 && downloadInfo.progress + '%'}\n                            { downloadInfo.loaded === 0 && 'Initializing...'}\n                        </span>\n                        <button onClick={async ()=> {\n                            await removeFile()\n                            source.cancel();\n                        }}>\n                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"rgba(37, 99, 235)\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"overflow-hidden h-2 text-xs flex rounded bg-blue-200\">\n                    <div style={{ width: downloadInfo.progress + '%' }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-blue-500\"></div>\n                </div>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nconst DonwloadFolder = ({name, folder, removeFile}) => {\n    const CancelToken = Axios.CancelToken;\n    const source = CancelToken.source();\n\n    const [downloadInfo, setDownloadInfo] = useState({\n        progress: 0,\n        completed: false,\n        total: 0,\n        loaded: 0\n    });\n\n    useEffect(() => {\n        const options = {\n            onDownloadProgress: (progressEvent) => {\n                const { loaded, total } = progressEvent;\n\n                setDownloadInfo({\n                    progress: Math.floor((loaded * 100) / total),\n                    loaded,\n                    total,\n                    completed: false,\n                })\n            }\n        }\n\n        Axios.get(`http://${process.env.REACT_APP_HOST_IP}:3030/getfolder/` + folder, {\n                responseType: \"blob\",\n                ...options,\n                headers: {\n                    'X-Requested-With': 'XMLHttpRequest',\n                    'Access-Control-Allow-Origin': '*'\n                },\n                cancelToken: source.token\n            }).then(function (response) {\n            console.log(response);\n        \n            const url = window.URL.createObjectURL(\n                new Blob([response.data], {\n                type: response.headers[\"content-type\"],\n                })\n            );\n        \n            const link = document.createElement(\"a\");\n            link.href = url;\n            link.setAttribute(\"download\", name);\n            document.body.appendChild(link);\n            link.click();\n        \n            setDownloadInfo((info) => ({\n                ...info,\n                completed: true,\n            }));\n        \n            setTimeout(() => {\n                removeFile();\n            }, 4000);\n        });\n    }, []);\n\n    return (\n        <li className=\"w-full h-16 border-b \">\n            <div>\n            <div className=\"relative pt-2\">\n                <div className=\"flex mb-2 items-center justify-between\">\n                    <div>\n                        <span className=\"text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-blue-600 bg-blue-200\">\n                            {name}\n                        </span>\n                    </div>\n                    <div className=\"flex flex-row items-center space-x-2 text-right\">\n                        <span className=\"text-xs font-semibold inline-block text-blue-600\">\n                            { downloadInfo.loaded > 0 && downloadInfo.progress + '%'}\n                            { downloadInfo.loaded === 0 && 'Initializing...'}\n                        </span>\n                        <button onClick={async ()=> {\n                            await removeFile()\n                            source.cancel();\n                        }}>\n                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"rgba(37, 99, 235)\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"overflow-hidden h-2 text-xs flex rounded bg-blue-200\">\n                    <div style={{ width: downloadInfo.progress + '%' }} className=\"shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-blue-500\"></div>\n                </div>\n                </div>\n            </div>\n        </li>\n    )\n}\n\nexport default Downloader;","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/hooks/useFileDownloader.js",[],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/FileShow.js",["149"],"import React from 'react';\n\nfunction FileShow(props) {\n\n\n\n    return (\n        <div className=\"w-1/3 bg-white rounded-tl-xl rounded-bl-xl border-l border-r border-gray-400 shadow-2xl p-2\">\n            <div className=\"h-16 bg-white flex flex-row justify-center items-center border-b\">\n                <button className=\"absolute right-0 pr-2\" onClick={() => props.setFileshow(false)}>\n                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path></svg>\n                </button>\n                <div className=\"flex-none\">\n                    <h1 className=\"font-semibold\">File Info</h1>\n                </div>\n            </div>\n            <div className=\"flex flex-col p-2 space-y-8 justify-center items-center\">\n                <>\n                {props.file.is_image ? <img src={'http://localhost:3030' + props.file.file} /> : <h1>No preview to see</h1>}\n                </>\n            </div>\n        </div>\n    )\n\n}\n\nexport default FileShow;","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/ProgressBar.js",[],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/SelectingFiles.js",["150"],"import React, { Component } from 'react';\nimport Axios from 'axios';\n\nlet selected = [];\n\nclass SelecingFiles extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.folderId = props.folderId;\n        this.state = {\n            files: [],\n            file: null,\n            selected: []\n        }\n    }\n\n    componentDidMount() {\n        let combined = [];\n        Axios({method: 'GET', url:`http://${process.env.REACT_APP_HOST_IP}:3030/folders/folder/` + this.folderId})\n          .then(res => {\n            if(res.status === 200) {\n              if(res.data !== \"no data\") {\n                const files = res.data;\n                if(files.length > 0) {\n                    files.forEach(file => {\n                        const obj = {...file, isSelect: false};\n                        combined.push(obj);\n                    })\n                }\n                this.setState({ files: combined });\n              } \n            }\n        });\n    }\n\n    selectItem = (item) => {\n        item.isSelect = !item.isSelect;\n        if(item.isSelect){\n            const obj = {\n                name: item.name,\n                file: item.path,\n                filename: item.name,\n                is_image: item.is_image,\n                fileId: item.file_id\n            };\n            selected.push(obj);\n        } else {\n            for(let i = 0; i < selected.length; i++) {\n                if(selected[i].fileId === item.file_id) {\n                    selected.splice(i, 1)\n                }\n            }\n        }\n        this.setState({selected: selected});\n        this.props.setSelected(selected)\n    };\n\n    // selectAll = () => {\n    //     this.state.files.forEach(item => {\n    //         item.isSelect = !item.isSelect;\n    //         if(item.isSelect){\n    //             const obj = {\n    //                 name: item.name,\n    //                 file: item.path,\n    //                 filename: item.name,\n    //                 is_image: item.is_image,\n    //                 fileId: item.file_id\n    //             };\n    //             selected.push(obj);\n    //         }\n    //     })\n    //     this.setState({selected: selected});\n    //     this.props.setSelected(selected)\n    // }\n    \n    render() {\n        return (\n            <div>\n            {this.state.files.map((file => {\n                return (\n                    <div className=\"border-b\" onClick={() => {\n                        this.selectItem(file)\n                    }}>\n                        <div className={ file.isSelect ? styles.selected : styles.normal }>\n                            {file.isSelect ? (\n                                <>\n                                <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                                </>\n                            ) : (\n                                <>\n                                <svg width=\"1.5rem\" height=\"1.5rem\">\n                                    <circle cx=\"0.7rem\" cy=\"0.7rem\" r=\"0.50rem\" stroke=\"currentColor\" stroke-width=\"2\" fill=\"none\" />\n                                </svg>\n                                </>\n                            )}\n                            <a className=\"flex-auto cursor-pointer \">\n                                <div className=\"p-3 space-y-4\">\n                                    <div className=\"flex flex-row items-center space-x-2\">\n                                        <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\"></path></svg>\n                                        <strong className=\"flex-grow text-sm font-normal\">{file.name}</strong>\n                                    </div>\n                                </div>\n                            </a>\n\n                        </div>\n                    </div>\n            )\n            }))}\n            \n            </div>\n        )\n    }\n}\n\nconst styles = {\n    selected: \"flex flex-row items-center border-l-2 border-blue-500 bg-blue-100\",\n    normal: \"flex flex-row items-center border-l-2 border-transparent hover:border-blue-500 hover:bg-blue-100\"\n}\n\nexport default SelecingFiles;","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/warningDialog.js",["151"],"import React from 'react';\n\nclass WarningDialog extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"fixed z-10 inset-0 overflow-y-auto\">\n                <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                    <form>\n                    <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\n                        <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\n                    </div>\n                    <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">&#8203;</span>\n                    <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-headline\">\n                        <div className=\"bg-white px-4 pt-5 pb-2 sm:p-1 sm:pt-6 sm:pb-4\">\n                        <div className=\"min-w-0 sm:flex sm:items-start\">\n                            <div className=\"w-full mt-3 text-center sm:mt-0 sm:ml-4 sm:mr-4 sm:text-left\">\n                            <h3 className=\"text-lg leading-6 font-medium text-red-500\" id=\"modal-headline\">\n                                Warning!\n                            </h3>\n                            <div className=\"mt-2\">\n                                <p>{this.props.msg}</p>\n                            </div>\n                            </div>\n                        </div>\n                        </div>\n                        <div className=\"flex flew-row bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                        <button type=\"submit\" onClick={this.props.closeDialog} className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-500 text-base font-medium text-white hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\">\n                            Close\n                        </button>\n                        </div>\n                    </div>\n                    </form>\n                </div>\n            </div>\n        )    \n    }\n\n}\n\nexport default WarningDialog","/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/CircleProgress.js",[],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/selectAll.js",[],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/pages/friendsPage.js",["152","153","154","155","156","157","158","159","160"],"/Users/alexander/Documents/codemap/HomeCloud/frontend/src/components/ChatPage.js",["161","162"],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":68,"column":19,"nodeType":"169","endLine":68,"endColumn":22},{"ruleId":"170","severity":1,"message":"171","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":21},{"ruleId":"170","severity":1,"message":"174","line":20,"column":24,"nodeType":"172","messageId":"173","endLine":20,"endColumn":37},{"ruleId":"175","severity":1,"message":"176","line":51,"column":8,"nodeType":"177","endLine":51,"endColumn":10,"suggestions":"178"},{"ruleId":"179","severity":1,"message":"180","line":102,"column":74,"nodeType":"181","messageId":"182","endLine":102,"endColumn":76},{"ruleId":"179","severity":1,"message":"180","line":136,"column":74,"nodeType":"181","messageId":"182","endLine":136,"endColumn":76},{"ruleId":"175","severity":1,"message":"183","line":162,"column":8,"nodeType":"177","endLine":162,"endColumn":34,"suggestions":"184"},{"ruleId":"179","severity":1,"message":"180","line":202,"column":28,"nodeType":"181","messageId":"182","endLine":202,"endColumn":30},{"ruleId":"179","severity":1,"message":"180","line":235,"column":27,"nodeType":"181","messageId":"182","endLine":235,"endColumn":29},{"ruleId":"167","severity":1,"message":"168","line":280,"column":17,"nodeType":"169","endLine":286,"endColumn":21},{"ruleId":"179","severity":1,"message":"185","line":314,"column":47,"nodeType":"181","messageId":"182","endLine":314,"endColumn":49},{"ruleId":"186","severity":1,"message":"187","line":323,"column":51,"nodeType":"169","endLine":323,"endColumn":201},{"ruleId":"179","severity":1,"message":"180","line":378,"column":53,"nodeType":"181","messageId":"182","endLine":378,"endColumn":55},{"ruleId":"179","severity":1,"message":"180","line":415,"column":53,"nodeType":"181","messageId":"182","endLine":415,"endColumn":55},{"ruleId":"179","severity":1,"message":"180","line":445,"column":37,"nodeType":"181","messageId":"182","endLine":445,"endColumn":39},{"ruleId":"179","severity":1,"message":"180","line":28,"column":49,"nodeType":"181","messageId":"182","endLine":28,"endColumn":51},{"ruleId":"167","severity":1,"message":"168","line":36,"column":29,"nodeType":"169","endLine":38,"endColumn":32},{"ruleId":"170","severity":1,"message":"188","line":12,"column":8,"nodeType":"172","messageId":"173","endLine":12,"endColumn":19},{"ruleId":"170","severity":1,"message":"189","line":21,"column":22,"nodeType":"172","messageId":"173","endLine":21,"endColumn":35},{"ruleId":"170","severity":1,"message":"190","line":35,"column":10,"nodeType":"172","messageId":"173","endLine":35,"endColumn":19},{"ruleId":"170","severity":1,"message":"191","line":35,"column":21,"nodeType":"172","messageId":"173","endLine":35,"endColumn":33},{"ruleId":"170","severity":1,"message":"192","line":44,"column":18,"nodeType":"172","messageId":"173","endLine":44,"endColumn":27},{"ruleId":"170","severity":1,"message":"193","line":64,"column":36,"nodeType":"172","messageId":"173","endLine":64,"endColumn":50},{"ruleId":"186","severity":1,"message":"187","line":92,"column":65,"nodeType":"169","endLine":92,"endColumn":234},{"ruleId":"175","severity":1,"message":"194","line":88,"column":8,"nodeType":"177","endLine":88,"endColumn":10,"suggestions":"195"},{"ruleId":"175","severity":1,"message":"196","line":179,"column":8,"nodeType":"177","endLine":179,"endColumn":10,"suggestions":"197"},{"ruleId":"186","severity":1,"message":"187","line":19,"column":40,"nodeType":"169","endLine":19,"endColumn":95},{"ruleId":"167","severity":1,"message":"168","line":97,"column":29,"nodeType":"169","endLine":97,"endColumn":70},{"ruleId":"198","severity":1,"message":"199","line":5,"column":5,"nodeType":"200","messageId":"201","endLine":7,"endColumn":6},{"ruleId":"175","severity":1,"message":"176","line":52,"column":8,"nodeType":"177","endLine":52,"endColumn":16,"suggestions":"202"},{"ruleId":"175","severity":1,"message":"176","line":63,"column":8,"nodeType":"177","endLine":63,"endColumn":10,"suggestions":"203"},{"ruleId":"167","severity":1,"message":"168","line":213,"column":49,"nodeType":"169","endLine":216,"endColumn":52},{"ruleId":"179","severity":1,"message":"180","line":217,"column":116,"nodeType":"181","messageId":"182","endLine":217,"endColumn":118},{"ruleId":"186","severity":1,"message":"187","line":222,"column":73,"nodeType":"169","endLine":222,"endColumn":205},{"ruleId":"179","severity":1,"message":"180","line":230,"column":87,"nodeType":"181","messageId":"182","endLine":230,"endColumn":89},{"ruleId":"179","severity":1,"message":"180","line":231,"column":85,"nodeType":"181","messageId":"182","endLine":231,"endColumn":87},{"ruleId":"186","severity":1,"message":"187","line":256,"column":65,"nodeType":"169","endLine":256,"endColumn":195},{"ruleId":"179","severity":1,"message":"185","line":332,"column":51,"nodeType":"181","messageId":"182","endLine":332,"endColumn":53},{"ruleId":"179","severity":1,"message":"185","line":43,"column":25,"nodeType":"181","messageId":"182","endLine":43,"endColumn":27},{"ruleId":"179","severity":1,"message":"180","line":69,"column":38,"nodeType":"181","messageId":"182","endLine":69,"endColumn":40},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'WarningDialog' is defined but never used.","Identifier","unusedVar","'setFolderName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'token.id'. Either include it or remove the dependency array.","ArrayExpression",["206"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'counter', 'fileSize', and 'fileUpload'. Either include them or remove the dependency array.",["207"],"Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'ProgressBar' is defined but never used.","'setFoldername' is assigned a value but never used.","'totalSize' is assigned a value but never used.","'setTotalSize' is assigned a value but never used.","'setFolder' is assigned a value but never used.","'downloadfolder' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'file', 'filename', 'removeFile', and 'source.token'. Either include them or remove the dependency array. If 'removeFile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["208"],"React Hook useEffect has missing dependencies: 'folder', 'name', 'removeFile', and 'source.token'. Either include them or remove the dependency array. If 'removeFile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["209"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["210"],["211"],"no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"212","fix":"222"},"Update the dependencies array to be: [token.id]",{"range":"223","text":"224"},"Update the dependencies array to be: [counter, fileSize, fileToBeUpload, fileUpload, progress]",{"range":"225","text":"226"},"Update the dependencies array to be: [file, filename, removeFile, source.token]",{"range":"227","text":"228"},"Update the dependencies array to be: [folder, name, removeFile, source.token]",{"range":"229","text":"230"},"Update the dependencies array to be: [chatId, token.id]",{"range":"231","text":"232"},{"range":"233","text":"224"},[2076,2078],"[token.id]",[5751,5777],"[counter, fileSize, fileToBeUpload, fileUpload, progress]",[2944,2946],"[file, filename, removeFile, source.token]",[6454,6456],"[folder, name, removeFile, source.token]",[2076,2084],"[chatId, token.id]",[2449,2451]]